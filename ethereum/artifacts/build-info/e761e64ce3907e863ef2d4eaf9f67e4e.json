{
  "id": "e761e64ce3907e863ef2d4eaf9f67e4e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.2",
  "solcLongVersion": "0.8.2+commit.661d1103",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/bridge/StakingRelayVerifier.sol": {
        "content": "// SPDX-License-Identifier: AGPL-3.0\npragma solidity ^0.8.2;\n\n\n/// @title Staking Relay Verifier\n/// @author https://github.com/broxus\ncontract StakingRelayVerifier {\n    event RelayAddressVerified(uint160 eth_addr, int8 workchain_id, uint256 addr_body);\n    \n    function verify_relay_staker_address(int8 workchain_id, uint256 address_body) external {\n        emit RelayAddressVerified(uint160(msg.sender), workchain_id, address_body);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 0
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates",
            "devdoc",
            "userdoc"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/bridge/StakingRelayVerifier.sol": {
        "StakingRelayVerifier": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint160",
                  "name": "eth_addr",
                  "type": "uint160"
                },
                {
                  "indexed": false,
                  "internalType": "int8",
                  "name": "workchain_id",
                  "type": "int8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "addr_body",
                  "type": "uint256"
                }
              ],
              "name": "RelayAddressVerified",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "int8",
                  "name": "workchain_id",
                  "type": "int8"
                },
                {
                  "internalType": "uint256",
                  "name": "address_body",
                  "type": "uint256"
                }
              ],
              "name": "verify_relay_staker_address",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "https://github.com/broxus",
            "kind": "dev",
            "methods": {},
            "title": "Staking Relay Verifier",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060e98061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80631f4b19a214602d575b600080fd5b603c60383660046086565b603e565b005b60408051338152600084900b60208201529081018290527fe2abe69c5ea3e0944ca0b28566207b4a17d3a01d5efed3ffb378a36e34c322a99060600160405180910390a15050565b600080604083850312156097578182fd5b823580830b811460a5578283fd5b94602093909301359350505056fea2646970667358221220061944cec54b9d49cd6b8954d9663dcabfabc336f689f2d88b539a2d69843c6664736f6c63430008020033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE9 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F4B19A2 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x86 JUMP JUMPDEST PUSH1 0x3E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x0 DUP5 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xE2ABE69C5EA3E0944CA0B28566207B4A17D3A01D5EFED3FFB378A36E34C322A9 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x97 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD DUP1 DUP4 SIGNEXTEND DUP2 EQ PUSH1 0xA5 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD NOT DIFFICULTY 0xCE 0xC5 0x4B SWAP14 0x49 0xCD PUSH12 0x8954D9663DCABFABC336F689 CALLCODE 0xD8 DUP12 MSTORE8 SWAP11 0x2D PUSH10 0x843C6664736F6C634300 ADDMOD MUL STOP CALLER ",
              "sourceMap": "135:309:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:740:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "98:281:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "144:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "153:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "161:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "146:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "146:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "146:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "119:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "128:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "115:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "115:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "140:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "108:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "179:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "205:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "192:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "192:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "183:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "272:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "281:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "289:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "274:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "274:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "274:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "237:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "255:6:1"
                                          },
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "263:5:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "signextend",
                                          "nodeType": "YulIdentifier",
                                          "src": "244:10:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "244:25:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "234:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "234:36:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "227:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "227:44:1"
                              },
                              "nodeType": "YulIf",
                              "src": "224:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "307:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "307:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "331:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "369:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "354:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "354:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "341:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "341:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "331:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_int8t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "56:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "67:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "79:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "87:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:365:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "535:203:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "545:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "557:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "568:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "553:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "553:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "545:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "587:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "602:6:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "618:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "623:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "614:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "614:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "627:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "610:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "610:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "598:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "598:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "580:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "580:51:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "580:51:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "651:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "662:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "647:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "647:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "678:1:1",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "681:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "signextend",
                                      "nodeType": "YulIdentifier",
                                      "src": "667:10:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "667:21:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "640:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "640:49:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "640:49:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "709:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "720:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "705:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "705:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "725:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "698:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "698:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "698:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint160_t_int8_t_uint256__to_t_uint160_t_int8_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "488:9:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "499:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "507:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "515:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "526:4:1",
                            "type": ""
                          }
                        ],
                        "src": "384:354:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_int8t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, signextend(value0, value))) { revert(value0, value0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint160_t_int8_t_uint256__to_t_uint160_t_int8_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), signextend(0, value1))\n        mstore(add(headStart, 64), value2)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80631f4b19a214602d575b600080fd5b603c60383660046086565b603e565b005b60408051338152600084900b60208201529081018290527fe2abe69c5ea3e0944ca0b28566207b4a17d3a01d5efed3ffb378a36e34c322a99060600160405180910390a15050565b600080604083850312156097578182fd5b823580830b811460a5578283fd5b94602093909301359350505056fea2646970667358221220061944cec54b9d49cd6b8954d9663dcabfabc336f689f2d88b539a2d69843c6664736f6c63430008020033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F4B19A2 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x38 CALLDATASIZE PUSH1 0x4 PUSH1 0x86 JUMP JUMPDEST PUSH1 0x3E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x0 DUP5 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0xE2ABE69C5EA3E0944CA0B28566207B4A17D3A01D5EFED3FFB378A36E34C322A9 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH1 0x97 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD DUP1 DUP4 SIGNEXTEND DUP2 EQ PUSH1 0xA5 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD NOT DIFFICULTY 0xCE 0xC5 0x4B SWAP14 0x49 0xCD PUSH12 0x8954D9663DCABFABC336F689 CALLCODE 0xD8 DUP12 MSTORE8 SWAP11 0x2D PUSH10 0x843C6664736F6C634300 ADDMOD MUL STOP CALLER ",
              "sourceMap": "135:309:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;264:178;;;;;;:::i;:::-;;:::i;:::-;;;366:69;;;395:10;580:51:1;;384:354;667:21;;;662:2;647:18;;640:49;705:18;;;698:34;;;366:69:0;;568:2:1;553:18;366:69:0;;;;;;;264:178;;:::o;14:365:1:-;;;140:2;128:9;119:7;115:23;111:32;108:2;;;161:6;153;146:22;108:2;205:9;192:23;263:5;255:6;244:25;237:5;234:36;224:2;;289:6;281;274:22;224:2;317:5;369:2;354:18;;;;341:32;;-1:-1:-1;;;98:281:1:o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "46600",
                "executionCost": "99",
                "totalCost": "46699"
              },
              "external": {
                "verify_relay_staker_address(int8,uint256)": "1881"
              }
            },
            "methodIdentifiers": {
              "verify_relay_staker_address(int8,uint256)": "1f4b19a2"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"eth_addr\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int8\",\"name\":\"workchain_id\",\"type\":\"int8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"addr_body\",\"type\":\"uint256\"}],\"name\":\"RelayAddressVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int8\",\"name\":\"workchain_id\",\"type\":\"int8\"},{\"internalType\":\"uint256\",\"name\":\"address_body\",\"type\":\"uint256\"}],\"name\":\"verify_relay_staker_address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"https://github.com/broxus\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Staking Relay Verifier\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/StakingRelayVerifier.sol\":\"StakingRelayVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[]},\"sources\":{\"contracts/bridge/StakingRelayVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.2;\\n\\n\\n/// @title Staking Relay Verifier\\n/// @author https://github.com/broxus\\ncontract StakingRelayVerifier {\\n    event RelayAddressVerified(uint160 eth_addr, int8 workchain_id, uint256 addr_body);\\n    \\n    function verify_relay_staker_address(int8 workchain_id, uint256 address_body) external {\\n        emit RelayAddressVerified(uint160(msg.sender), workchain_id, address_body);\\n    }\\n}\\n\",\"keccak256\":\"0x14076e862210700d75a2823589c673e19fd7f987eb06c974f5ba55b4af624788\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/bridge/StakingRelayVerifier.sol": {
        "ast": {
          "absolutePath": "contracts/bridge/StakingRelayVerifier.sol",
          "exportedSymbols": {
            "StakingRelayVerifier": [
              29
            ]
          },
          "id": 30,
          "license": "AGPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "37:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "63:72:0",
                "text": "@title Staking Relay Verifier\n @author https://github.com/broxus"
              },
              "fullyImplemented": true,
              "id": 29,
              "linearizedBaseContracts": [
                29
              ],
              "name": "StakingRelayVerifier",
              "nameLocation": "144:20:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 10,
                  "name": "RelayAddressVerified",
                  "nameLocation": "177:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "eth_addr",
                        "nameLocation": "206:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "198:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "198:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 6,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "workchain_id",
                        "nameLocation": "221:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "216:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "int8",
                          "nodeType": "ElementaryTypeName",
                          "src": "216:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 8,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "addr_body",
                        "nameLocation": "243:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 10,
                        "src": "235:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 7,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "235:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "197:56:0"
                  },
                  "src": "171:83:0"
                },
                {
                  "body": {
                    "id": 27,
                    "nodeType": "Block",
                    "src": "351:91:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 20,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "395:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 21,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "395:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 19,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "387:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 18,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "387:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 22,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "387:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            {
                              "id": 23,
                              "name": "workchain_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "408:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              }
                            },
                            {
                              "id": 24,
                              "name": "address_body",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "422:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              },
                              {
                                "typeIdentifier": "t_int8",
                                "typeString": "int8"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 17,
                            "name": "RelayAddressVerified",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "366:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint160_$_t_int8_$_t_uint256_$returns$__$",
                              "typeString": "function (uint160,int8,uint256)"
                            }
                          },
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "366:69:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26,
                        "nodeType": "EmitStatement",
                        "src": "361:74:0"
                      }
                    ]
                  },
                  "functionSelector": "1f4b19a2",
                  "id": 28,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verify_relay_staker_address",
                  "nameLocation": "273:27:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 12,
                        "mutability": "mutable",
                        "name": "workchain_id",
                        "nameLocation": "306:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "301:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int8",
                          "typeString": "int8"
                        },
                        "typeName": {
                          "id": 11,
                          "name": "int8",
                          "nodeType": "ElementaryTypeName",
                          "src": "301:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int8",
                            "typeString": "int8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "address_body",
                        "nameLocation": "328:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "320:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "320:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "300:41:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "351:0:0"
                  },
                  "scope": 29,
                  "src": "264:178:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 30,
              "src": "135:309:0"
            }
          ],
          "src": "37:408:0"
        },
        "id": 0
      }
    }
  }
}
