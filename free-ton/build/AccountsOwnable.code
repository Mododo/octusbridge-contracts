.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getAccountStatus
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode addr
LDMSGADDR
ENDS
;; param: addr
CALLREF {
	CALL $getAccountStatus_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xc862288c
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getAccountStatus_internal
.type	getAccountStatus_internal, @function
CALL $getAccountStatus_internal_macro$

.macro getAccountStatus_internal_macro
;; param: addr
;; ret param: _status
PUSHINT 0
; function getAccountStatus
;; return
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
; end function getAccountStatus
NIP

.macro getEthereumAccount
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode addr
LDMSGADDR
ENDS
;; param: addr
CALLREF {
	CALL $getEthereumAccount_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbd88ea00
	PUSH S1
	STUR 160
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getEthereumAccount_internal
.type	getEthereumAccount_internal, @function
CALL $getEthereumAccount_internal_macro$

.macro getEthereumAccount_internal_macro
;; param: addr
;; ret param: ethereumAccount
PUSHINT 0
; function getEthereumAccount
;; return
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerEthereumAccounts
GETGLOB 29
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 160
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
; end function getEthereumAccount
NIP

.globl	_grantOwnership_internal
.type	_grantOwnership_internal, @function
CALL $_grantOwnership_internal_macro$

.macro _grantOwnership_internal_macro
;; param: addr
;; param: ethereumAccount
; function _grantOwnership
; expValue
;; fetch ownerAccounts
GETGLOB 28
;; push identifier addr
PUSH S2
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 28
; end colValue
; expValue
;; fetch ownerEthereumAccounts
GETGLOB 29
;; push identifier addr
PUSH S2
SWAP
; end expValue
;; push identifier ethereumAccount
PUSH S2
; colValue
NEWC
STU 160
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 29
; end colValue
;; emit OwnershipGranted
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x107857aa
;; addr
;; push identifier addr
PUSH S2
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function _grantOwnership
DROP2

.globl	_removeOwnership_internal
.type	_removeOwnership_internal, @function
CALL $_removeOwnership_internal_macro$

.macro _removeOwnership_internal_macro
;; param: addr
; function _removeOwnership
;; delete
; expValue
;; fetch ownerAccounts
GETGLOB 28
;; push identifier addr
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 267
DICTDEL
DROP
; colValue
NIP
SETGLOB 28
; end colValue
;; delete
; expValue
;; fetch ownerEthereumAccounts
GETGLOB 29
;; push identifier addr
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 267
DICTDEL
DROP
; colValue
NIP
SETGLOB 29
; end colValue
;; emit OwnershipRemoved
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x461ab0ce
;; addr
;; push identifier addr
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function _removeOwnership
DROP

.macro getAccounts
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getAccounts_internal_macro$
}
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbdf10e72
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getAccounts_internal
.type	getAccounts_internal, @function
CALL $getAccounts_internal_macro$

.macro getAccounts_internal_macro
;; ret param: accounts
PUSHINT 0
NEWDICT
PAIR
;; ret param: ethereumAccounts
PUSHINT 0
NEWDICT
PAIR
; function getAccounts
;; push identifier ownerAccounts
GETGLOB 28
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier status
	PUSH S1
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier addr
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
		; expValue
		PUSH S4
		; end expValue
		;; index
		;; push identifier addr
		PUSH S3
		;; push identifier ownerEthereumAccounts
		GETGLOB 29
		PUSHINT 267
		DICTGET
		PUSHCONT {
			PLDU 160
		}
		PUSHCONT {
			PUSHINT 0
		}
		IFELSE
		;; array.push(..)
		NEWC
		STU 160
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; end function getAccounts

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 15
GETGLOB 16
GETGLOB 17
GETGLOB 18
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 22
GETGLOB 23
GETGLOB 24
GETGLOB 25
GETGLOB 26
GETGLOB 27
GETGLOB 28
GETGLOB 29
PUSHINT 21
PUSHINT 0
REVX
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STDICT
STDICT
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDDICT
PLDDICT
SETGLOB 29
SETGLOB 28
SETGLOB 27
SETGLOB 26
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDDICT
	PLDDICT
	SETGLOB 29
	SETGLOB 28
	SETGLOB 27
	SETGLOB 26
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init ADDRESS_IS_NOT_OWNER
	PUSHINT 0
	SETGLOB 10
	; init BRIDGE_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 11
	; init EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 12
	; init KEYS_DIFFERENT_SHAPE
	PUSHINT 0
	SETGLOB 13
	; init EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 0
	SETGLOB 14
	; init EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 15
	; init EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 0
	SETGLOB 16
	; init EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 17
	; init SENDER_NOT_BRIDGE
	PUSHINT 0
	SETGLOB 18
	; init EVENT_BLOCK_NUMBER_LESS_THAN_START
	PUSHINT 0
	SETGLOB 19
	; init EVENT_TIMESTAMP_LESS_THAN_START
	PUSHINT 0
	SETGLOB 20
	; init EVENT_NOT_IN_PROGRESS
	PUSHINT 0
	SETGLOB 21
	; init SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 0
	SETGLOB 22
	; init KEY_ALREADY_CONFIRMED
	PUSHINT 0
	SETGLOB 23
	; init KEY_ALREADY_REJECTED
	PUSHINT 0
	SETGLOB 24
	; init EVENT_NOT_CONFIRMED
	PUSHINT 0
	SETGLOB 25
	; init TOO_LOW_MSG_VALUE
	PUSHINT 0
	SETGLOB 26
	; init WRONG_TVM_KEY
	PUSHINT 0
	SETGLOB 27
	; init ownerAccounts
	NEWDICT
	SETGLOB 28
	; init ownerEthereumAccounts
	NEWDICT
	SETGLOB 29
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: ADDRESS_IS_NOT_OWNER
	PUSHINT 5001
	SETGLOB 10
	;; init state var: BRIDGE_NOT_ACTIVE
	PUSHINT 5002
	SETGLOB 11
	;; init state var: EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 5003
	SETGLOB 12
	;; init state var: KEYS_DIFFERENT_SHAPE
	PUSHINT 5004
	SETGLOB 13
	;; init state var: EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 5005
	SETGLOB 14
	;; init state var: EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 5006
	SETGLOB 15
	;; init state var: EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 5007
	SETGLOB 16
	;; init state var: EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 5008
	SETGLOB 17
	;; init state var: SENDER_NOT_BRIDGE
	PUSHINT 5101
	SETGLOB 18
	;; init state var: EVENT_BLOCK_NUMBER_LESS_THAN_START
	PUSHINT 5102
	SETGLOB 19
	;; init state var: EVENT_TIMESTAMP_LESS_THAN_START
	PUSHINT 5103
	SETGLOB 20
	;; init state var: EVENT_NOT_IN_PROGRESS
	PUSHINT 5201
	SETGLOB 21
	;; init state var: SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 5202
	SETGLOB 22
	;; init state var: KEY_ALREADY_CONFIRMED
	PUSHINT 5203
	SETGLOB 23
	;; init state var: KEY_ALREADY_REJECTED
	PUSHINT 5204
	SETGLOB 24
	;; init state var: EVENT_NOT_CONFIRMED
	PUSHINT 5205
	SETGLOB 25
	;; init state var: TOO_LOW_MSG_VALUE
	PUSHINT 5206
	SETGLOB 26
	;; init state var: WRONG_TVM_KEY
	PUSHINT 5301
	SETGLOB 27
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro public_function_selector
DUP
PUSHINT 1032382976
EQUAL
IFJMPREF {
	CALL $getEthereumAccount$
}
DUP
PUSHINT 1039208050
EQUAL
IFJMPREF {
	CALL $getAccounts$
}
DUP
PUSHINT 1214392460
EQUAL
IFJMPREF {
	CALL $getAccountStatus$
}
DUP
PUSHINT 1756716863
EQUAL
IFJMPREF {
	CALL $constructor$
}
