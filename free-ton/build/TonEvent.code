.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode relayKey
LDU 256
; Decode eventDataSignature
LDREF
ENDS
;; param: relayKey
;; param: eventDataSignature
; constructor TonEvent
ACCEPT
;; push identifier relayKey
PUSH S1
;; push identifier eventDataSignature
PUSH S1
CALL $confirm_internal$
DROP2
; end constructor TonEvent
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	confirm
.public	confirm
.type	confirm, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode relayKey
LDU 256
; Decode eventDataSignature
LDREF
ENDS
;; param: relayKey
;; param: eventDataSignature
; modifier onlyNotConfirmed
;; get member length
;; push identifier confirmKeys
GETGLOB 18
INDEX 0
;; push identifier requiredConfirmations
GETGLOB 16
;; <
LESS
THROWIFNOT 602
; function confirm
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; get member length
	;; push identifier confirmKeys
	GETGLOB 18
	INDEX 0
	;; <
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier confirmKeys
	GETGLOB 18
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; push identifier relayKey
	PUSH S3
	;; !=
	NEQ
	THROWIFNOT 404
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
;; fetch confirmKeys
GETGLOB 18
; end expValue
;; push identifier relayKey
PUSH S2
;; array.push(..)
NEWC
STU 256
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
SETGLOB 18
; end colValue
; expValue
;; fetch eventDataSignatures
GETGLOB 19
; end expValue
;; push identifier eventDataSignature
PUSH S1
;; array.push(..)
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETREF
PAIR
; colValue
SETGLOB 19
; end colValue
;; if
;; get member length
;; push identifier confirmKeys
GETGLOB 18
INDEX 0
;; push identifier requiredConfirmations
GETGLOB 16
;; >=
GEQ
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	SETGLOB 21
	; end colValue
	;; transfer()
	;; push identifier tonEventConfiguration
	GETGLOB 15
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
IF
;; end if
; end function confirm
DROP2
; end modifier onlyNotConfirmed
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	confirm_internal
.type	confirm_internal, @function
;; param: relayKey
;; param: eventDataSignature
; modifier onlyNotConfirmed
;; get member length
;; push identifier confirmKeys
GETGLOB 18
INDEX 0
;; push identifier requiredConfirmations
GETGLOB 16
;; <
LESS
THROWIFNOT 602
; function confirm
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; get member length
	;; push identifier confirmKeys
	GETGLOB 18
	INDEX 0
	;; <
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier confirmKeys
	GETGLOB 18
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; push identifier relayKey
	PUSH S3
	;; !=
	NEQ
	THROWIFNOT 404
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
;; fetch confirmKeys
GETGLOB 18
; end expValue
;; push identifier relayKey
PUSH S2
;; array.push(..)
NEWC
STU 256
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
SETGLOB 18
; end colValue
; expValue
;; fetch eventDataSignatures
GETGLOB 19
; end expValue
;; push identifier eventDataSignature
PUSH S1
;; array.push(..)
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETREF
PAIR
; colValue
SETGLOB 19
; end colValue
;; if
;; get member length
;; push identifier confirmKeys
GETGLOB 18
INDEX 0
;; push identifier requiredConfirmations
GETGLOB 16
;; >=
GEQ
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	SETGLOB 21
	; end colValue
	;; transfer()
	;; push identifier tonEventConfiguration
	GETGLOB 15
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
IF
;; end if
; end function confirm
DROP2
; end modifier onlyNotConfirmed

.globl	reject
.public	reject
.type	reject, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode relayKey
LDU 256
ENDS
;; param: relayKey
; function reject
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; get member length
	;; push identifier rejectKeys
	GETGLOB 20
	INDEX 0
	;; <
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier rejectKeys
	GETGLOB 20
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; push identifier relayKey
	PUSH S2
	;; !=
	NEQ
	THROWIFNOT 404
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
;; fetch rejectKeys
GETGLOB 20
; end expValue
;; push identifier relayKey
PUSH S1
;; array.push(..)
NEWC
STU 256
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
SETGLOB 20
; end colValue
;; if
;; get member length
;; push identifier rejectKeys
GETGLOB 20
INDEX 0
;; push identifier requiredRejects
GETGLOB 17
;; >=
GEQ
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	SETGLOB 22
	; end colValue
	;; transfer()
	;; push identifier tonEventConfiguration
	GETGLOB 15
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
IF
;; end if
DROP
; end function reject
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	reject_internal
.type	reject_internal, @function
;; param: relayKey
; function reject
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; get member length
	;; push identifier rejectKeys
	GETGLOB 20
	INDEX 0
	;; <
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier rejectKeys
	GETGLOB 20
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	;; push identifier relayKey
	PUSH S2
	;; !=
	NEQ
	THROWIFNOT 404
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
;; fetch rejectKeys
GETGLOB 20
; end expValue
;; push identifier relayKey
PUSH S1
;; array.push(..)
NEWC
STU 256
SWAP
UNPAIR
PUSH S1
INC
XCHG s3
ROTREV
PUSHINT 32
DICTUSETB
PAIR
; colValue
SETGLOB 20
; end colValue
;; if
;; get member length
;; push identifier rejectKeys
GETGLOB 20
INDEX 0
;; push identifier requiredRejects
GETGLOB 17
;; >=
GEQ
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	SETGLOB 22
	; end colValue
	;; transfer()
	;; push identifier tonEventConfiguration
	GETGLOB 15
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
IF
;; end if
DROP
; end function reject

.globl	getDetails
.public	getDetails
.type	getDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getDetails
;; ret param: _eventTransaction
PUSHINT 0
;; ret param: _eventIndex
PUSHINT 0
;; ret param: _eventData
NEWC
ENDC
;; ret param: _eventBlockNumber
PUSHINT 0
;; ret param: _eventBlock
PUSHINT 0
;; ret param: _tonEventConfiguration
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: _confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: _rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: _eventDataSignatures
PUSHINT 0
NEWDICT
PAIR
;; ret param: _requiredConfirmations
PUSHINT 0
;; ret param: _requiredRejects
PUSHINT 0
;; return
;; push identifier eventTransaction
GETGLOB 10
;; push identifier eventIndex
GETGLOB 11
;; push identifier eventData
GETGLOB 12
;; push identifier eventBlockNumber
GETGLOB 13
;; push identifier eventBlock
GETGLOB 14
;; push identifier tonEventConfiguration
GETGLOB 15
;; push identifier confirmKeys
GETGLOB 18
;; push identifier rejectKeys
GETGLOB 20
;; push identifier eventDataSignatures
GETGLOB 19
;; push identifier requiredConfirmations
GETGLOB 16
;; push identifier requiredRejects
GETGLOB 17
BLKDROP2 11, 11
;; emitting 11 value(s)
PUSH S11
EQINT -1
PUSHCONT {
	PUSH S13
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xa49e0771
	PUSH S12
	STUR 256
	PUSH S11
	STUR 256
	PUSH S10
	STREFR
	PUSH S9
	STUR 256
	NEWC
	PUSH S9
	STUR 256
	PUSH S8
	STSLICER
	PUSH S7
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S6
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S5
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S4
	STUR 256
	NEWC
	PUSH S4
	STUR 256
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 11
; end function getDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getDetails_internal
.type	getDetails_internal, @function
; function getDetails
;; ret param: _eventTransaction
PUSHINT 0
;; ret param: _eventIndex
PUSHINT 0
;; ret param: _eventData
NEWC
ENDC
;; ret param: _eventBlockNumber
PUSHINT 0
;; ret param: _eventBlock
PUSHINT 0
;; ret param: _tonEventConfiguration
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: _confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: _rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: _eventDataSignatures
PUSHINT 0
NEWDICT
PAIR
;; ret param: _requiredConfirmations
PUSHINT 0
;; ret param: _requiredRejects
PUSHINT 0
;; return
;; push identifier eventTransaction
GETGLOB 10
;; push identifier eventIndex
GETGLOB 11
;; push identifier eventData
GETGLOB 12
;; push identifier eventBlockNumber
GETGLOB 13
;; push identifier eventBlock
GETGLOB 14
;; push identifier tonEventConfiguration
GETGLOB 15
;; push identifier confirmKeys
GETGLOB 18
;; push identifier rejectKeys
GETGLOB 20
;; push identifier eventDataSignatures
GETGLOB 19
;; push identifier requiredConfirmations
GETGLOB 16
;; push identifier requiredRejects
GETGLOB 17
BLKDROP2 11, 11
; end function getDetails

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 13
GETGLOB 14
GETGLOB 15
GETGLOB 19
UNTUPLE 2
GETGLOB 20
UNTUPLE 2
REVERSE 8, 0
STU 256
STU 256
STSLICE
STU 32
STDICT
STU 32
STDICT
NEWC
GETGLOB 16
GETGLOB 17
XCHG s2
STU 256
STU 256
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 21
GETGLOB 22
GETGLOB 18
UNTUPLE 2
REVERSE 10, 0
STBREF
STBREF
STU 256
STU 256
STREF
STI 1
STI 1
STU 32
STDICT
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDU 256
LDU 256
LDMSGADDR
LDU 32
LDDICT
ROTREV
PAIR
SETGLOB 19
LDU 32
PLDDICT
PAIR
SETGLOB 20
SETGLOB 15
SETGLOB 14
SETGLOB 13
LDREFRTOS
LDU 256
PLDU 256
SETGLOB 17
SETGLOB 16
LDU 256
LDU 256
LDREF
LDI 1
LDI 1
LDU 32
PLDDICT
PAIR
SETGLOB 18
SETGLOB 22
SETGLOB 21
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDU 256
	LDU 256
	LDMSGADDR
	LDU 32
	LDDICT
	ROTREV
	PAIR
	SETGLOB 19
	LDU 32
	PLDDICT
	PAIR
	SETGLOB 20
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	LDREFRTOS
	LDU 256
	PLDU 256
	SETGLOB 17
	SETGLOB 16
	LDU 256
	LDU 256
	LDREF
	LDI 1
	LDI 1
	LDU 32
	PLDDICT
	PAIR
	SETGLOB 18
	SETGLOB 22
	SETGLOB 21
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init eventTransaction
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 10
	; init eventIndex
	PUSHINT 2
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 11
	; init eventData
	PUSHINT 3
	PUSH S1
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		NEWC
		ENDC
	}
	IFNOT
	SETGLOB 12
	; init eventBlockNumber
	PUSHINT 4
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 13
	; init eventBlock
	PUSHINT 5
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 14
	; init tonEventConfiguration
	PUSHINT 6
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	IFNOT
	SETGLOB 15
	; init requiredConfirmations
	PUSHINT 7
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 16
	; init requiredRejects
	PUSHINT 8
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 17
	; init confirmKeys
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 18
	; init eventDataSignatures
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 19
	; init rejectKeys
	PUSHINT 0
	NEWDICT
	PAIR
	SETGLOB 20
	; init eventConfirmed
	PUSHINT 0
	SETGLOB 21
	; init eventRejected
	PUSHINT 0
	SETGLOB 22
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: eventConfirmed
	FALSE
	SETGLOB 21
	;; init state var: eventRejected
	FALSE
	SETGLOB 22
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

