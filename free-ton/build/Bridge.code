.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _relayKeys
LDU 32
LDDICT
ROTREV
PAIR
SWAP
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.eventConfigurationRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.eventConfigurationRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredRejects
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode BridgeConfiguration.active
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeConfiguration ss:9
BLKSWAP 7, 1
TUPLE 7
SWAP
ENDS
;; param: _relayKeys
;; param: _bridgeConfiguration
; constructor Bridge
GETGLOB 2
NEQINT 0
THROWIFNOT 100
ACCEPT
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; get member length
	;; push identifier _relayKeys
	PUSH S3
	INDEX 0
	;; <
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier _relayKeys
	PUSH S3
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	CALL $_grantOwnership_internal$
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
; end expValue
;; push identifier _bridgeConfiguration
DUP
; colValue
SETGLOB 12
; end colValue
; expValue
;; fetch bridgeConfiguration
GETGLOB 12
; end expValue
TRUE
; colValue
SETINDEX 6
SETGLOB 12
; end colValue
DROP2
; end constructor Bridge
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	initializeEventConfigurationCreation
.public	initializeEventConfigurationCreation
.type	initializeEventConfigurationCreation, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode _type
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
ENDS
;; param: id
;; param: addr
;; param: _type
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function initializeEventConfigurationCreation
PUSHINT 11971
;; !
;; map.exists
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
ACCEPT
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; decl: key
NEWDICT
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
TUPLE 4
;; decl: _eventConfiguration
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S5
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier _type
PUSH S4
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier key
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
GETGLOB 13
;; push identifier id
PUSH S6
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
XCHG s4
BLKDROP 4
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 13
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x70a18344
;; id
;; push identifier id
PUSH S6
STUR 256
;; relayKey
;; push identifier key
PUSH S2
STUR 256
;; vote
TRUE
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function initializeEventConfigurationCreation
DROP
; end modifier onlyOwnerKey
BLKDROP 3
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	initializeEventConfigurationCreation_internal
.type	initializeEventConfigurationCreation_internal, @function
;; param: id
;; param: addr
;; param: _type
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function initializeEventConfigurationCreation
PUSHINT 11971
;; !
;; map.exists
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
ACCEPT
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; decl: key
NEWDICT
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
TUPLE 4
;; decl: _eventConfiguration
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S5
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier _type
PUSH S4
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier key
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
GETGLOB 13
;; push identifier id
PUSH S6
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
XCHG s4
BLKDROP 4
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 13
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x70a18344
;; id
;; push identifier id
PUSH S6
STUR 256
;; relayKey
;; push identifier key
PUSH S2
STUR 256
;; vote
TRUE
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function initializeEventConfigurationCreation
DROP
; end modifier onlyOwnerKey
BLKDROP 3
; end modifier onlyActive

.globl	voteForEventConfigurationCreation
.public	voteForEventConfigurationCreation
.type	voteForEventConfigurationCreation, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode vote
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
ENDS
;; param: id
;; param: vote
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function voteForEventConfigurationCreation
PUSHINT 11972
;; map.exists
;; push identifier id
PUSH S3
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
ACCEPT
;; index
;; push identifier id
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
}
PUSHCONT {
	NEWDICT
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHINT 0
	TUPLE 4
}
IFELSE
;; decl: _eventConfiguration
;; push identifier vote
PUSH S2
; expValue
PUSH S1
DUP
INDEX 0
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 3
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
GETGLOB 13
;; push identifier id
PUSH S4
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
XCHG s4
BLKDROP 4
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 13
; end colValue
;; push identifier id
PUSH S3
CALL $getEventConfigurationDetails_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S3
INDEX 0
;; get member eventConfigurationRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 0
;; >=
GEQ
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier vote
	PUSH S6
	TRUE
	;; ==
	EQUAL
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member status
		;; index
		;; push identifier id
		PUSH S7
		;; push identifier eventConfigurations
		GETGLOB 13
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		PLDI 1
		FALSE
		;; ==
		EQUAL
	}
	IF
}
IF
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	GETGLOB 13
	;; push identifier id
	PUSH S8
	SWAP
	PUSH2 S1, S0
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	LDSLICE 1
	NIP
	; end expValue
	TRUE
	; colValue
	SWAP
	REVERSE 4, 0
	NEWC
	STSLICE
	STSLICE
	STI 1
	STSLICE
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 13
	; end colValue
	;; emit EventConfigurationCreationEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x16a1d7d6
	;; id
	;; push identifier id
	PUSH S8
	STUR 256
	;; active
	TRUE
	STIR 1
	;; _type
	;; get member _type
	;; index
	;; push identifier id
	PUSH S8
	;; push identifier eventConfigurations
	GETGLOB 13
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	;; if
	;; get member length
	;; push identifier rejectKeys
	PUSH S2
	INDEX 0
	;; get member eventConfigurationRequiredRejects
	;; push identifier bridgeConfiguration
	GETGLOB 12
	INDEX 1
	;; >=
	GEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier vote
		PUSH S6
		FALSE
		;; ==
		EQUAL
	}
	IF
	PUSHCONT {
		;; emit EventConfigurationCreationEnd
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x16a1d7d6
		;; id
		;; push identifier id
		PUSH S8
		STUR 256
		;; active
		FALSE
		STIR 1
		;; _type
		;; get member _type
		;; index
		;; push identifier id
		PUSH S8
		;; push identifier eventConfigurations
		GETGLOB 13
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		LDSLICE 1
		NIP
		PLDU 8
		STUR 8
		ENDC
		PUSHINT 1
		SENDRAWMSG
		;; delete
		; expValue
		;; fetch eventConfigurations
		GETGLOB 13
		;; push identifier id
		PUSH S8
		SWAP
		; end expValue
		PUSH S1
		SWAP
		PUSHINT 256
		DICTUDEL
		DROP
		; colValue
		NIP
		SETGLOB 13
		; end colValue
	}
	IF
	;; end if
}
IFELSE
;; end if
BLKDROP 5
; end function voteForEventConfigurationCreation
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	voteForEventConfigurationCreation_internal
.type	voteForEventConfigurationCreation_internal, @function
;; param: id
;; param: vote
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function voteForEventConfigurationCreation
PUSHINT 11972
;; map.exists
;; push identifier id
PUSH S3
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
ACCEPT
;; index
;; push identifier id
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
}
PUSHCONT {
	NEWDICT
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHINT 0
	TUPLE 4
}
IFELSE
;; decl: _eventConfiguration
;; push identifier vote
PUSH S2
; expValue
PUSH S1
DUP
INDEX 0
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 3
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
GETGLOB 13
;; push identifier id
PUSH S4
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
XCHG s4
BLKDROP 4
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 13
; end colValue
;; push identifier id
PUSH S3
CALL $getEventConfigurationDetails_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S3
INDEX 0
;; get member eventConfigurationRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 0
;; >=
GEQ
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier vote
	PUSH S6
	TRUE
	;; ==
	EQUAL
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member status
		;; index
		;; push identifier id
		PUSH S7
		;; push identifier eventConfigurations
		GETGLOB 13
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		PLDI 1
		FALSE
		;; ==
		EQUAL
	}
	IF
}
IF
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	GETGLOB 13
	;; push identifier id
	PUSH S8
	SWAP
	PUSH2 S1, S0
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	LDSLICE 1
	NIP
	; end expValue
	TRUE
	; colValue
	SWAP
	REVERSE 4, 0
	NEWC
	STSLICE
	STSLICE
	STI 1
	STSLICE
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 13
	; end colValue
	;; emit EventConfigurationCreationEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x16a1d7d6
	;; id
	;; push identifier id
	PUSH S8
	STUR 256
	;; active
	TRUE
	STIR 1
	;; _type
	;; get member _type
	;; index
	;; push identifier id
	PUSH S8
	;; push identifier eventConfigurations
	GETGLOB 13
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	;; if
	;; get member length
	;; push identifier rejectKeys
	PUSH S2
	INDEX 0
	;; get member eventConfigurationRequiredRejects
	;; push identifier bridgeConfiguration
	GETGLOB 12
	INDEX 1
	;; >=
	GEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier vote
		PUSH S6
		FALSE
		;; ==
		EQUAL
	}
	IF
	PUSHCONT {
		;; emit EventConfigurationCreationEnd
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x16a1d7d6
		;; id
		;; push identifier id
		PUSH S8
		STUR 256
		;; active
		FALSE
		STIR 1
		;; _type
		;; get member _type
		;; index
		;; push identifier id
		PUSH S8
		;; push identifier eventConfigurations
		GETGLOB 13
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		LDSLICE 1
		NIP
		PLDU 8
		STUR 8
		ENDC
		PUSHINT 1
		SENDRAWMSG
		;; delete
		; expValue
		;; fetch eventConfigurations
		GETGLOB 13
		;; push identifier id
		PUSH S8
		SWAP
		; end expValue
		PUSH S1
		SWAP
		PUSHINT 256
		DICTUDEL
		DROP
		; colValue
		NIP
		SETGLOB 13
		; end colValue
	}
	IF
	;; end if
}
IFELSE
;; end if
BLKDROP 5
; end function voteForEventConfigurationCreation
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive

.globl	getEventConfigurationDetails
.public	getEventConfigurationDetails
.type	getEventConfigurationDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: id
; function getEventConfigurationDetails
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: status
PUSHINT 0
ACCEPT
;; get member votes
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S7
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S8
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member status
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
; colValue
NIP
; end colValue
;; returning named params
BLKSWAP 1, 4
DROP
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa14fe061
	PUSH S4
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S3
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S2
	STSLICER
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 4
; end function getEventConfigurationDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getEventConfigurationDetails_internal
.type	getEventConfigurationDetails_internal, @function
;; param: id
; function getEventConfigurationDetails
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: status
PUSHINT 0
ACCEPT
;; get member votes
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S7
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S8
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member status
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
; colValue
NIP
; end colValue
;; returning named params
BLKSWAP 1, 4
DROP
; end function getEventConfigurationDetails

.globl	getActiveEventConfigurations
.public	getActiveEventConfigurations
.type	getActiveEventConfigurations, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getActiveEventConfigurations
;; ret param: ids
PUSHINT 0
NEWDICT
PAIR
ACCEPT
;; push identifier eventConfigurations
GETGLOB 13
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; get member status
	;; push identifier configuration
	PUSH S1
	INDEX 2
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier id
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		LDDICT
		LDMSGADDR
		LDI 1
		PLDU 8
		TUPLE 4
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xcadc1643
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getActiveEventConfigurations
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getActiveEventConfigurations_internal
.type	getActiveEventConfigurations_internal, @function
; function getActiveEventConfigurations
;; ret param: ids
PUSHINT 0
NEWDICT
PAIR
ACCEPT
;; push identifier eventConfigurations
GETGLOB 13
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; get member status
	;; push identifier configuration
	PUSH S1
	INDEX 2
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier id
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		LDDICT
		LDMSGADDR
		LDI 1
		PLDU 8
		TUPLE 4
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
; end function getActiveEventConfigurations

.globl	confirmEthereumEvent
.public	confirmEthereumEvent
.type	confirmEthereumEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventInitData
;; decode struct EthereumEventInitData eventInitData
;; decode EthereumEventInitData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode EthereumEventInitData.eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.ethereumEventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode EthereumEventInitData.requiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.requiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.proxyAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct EthereumEventInitData ss:10
BLKSWAP 9, 1
TUPLE 9
SWAP
; Decode configurationID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: eventInitData
;; param: configurationID
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S1
PUSHINT 16922
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function confirmEthereumEvent
ACCEPT
;; Remote call EthereumEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x09e5411f
;; eventInitData
;; push identifier eventInitData
PUSH S5
UNTUPLE 9
BLKSWAP 1, 9
PUSH S9
STUR 256
PUSH S8
STUR 256
PUSH S7
STREFR
PUSH S6
STUR 256
NEWC
PUSH S6
STUR 256
PUSH S5
STSLICER
PUSH S4
STUR 256
NEWC
PUSH S4
STUR 256
PUSH S3
STSLICER
BLKDROP2 9, 3
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEvent
DROP
; end modifier onlyActiveConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	confirmEthereumEvent_internal
.type	confirmEthereumEvent_internal, @function
;; param: eventInitData
;; param: configurationID
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S1
PUSHINT 16922
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function confirmEthereumEvent
ACCEPT
;; Remote call EthereumEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x09e5411f
;; eventInitData
;; push identifier eventInitData
PUSH S5
UNTUPLE 9
BLKSWAP 1, 9
PUSH S9
STUR 256
PUSH S8
STUR 256
PUSH S7
STREFR
PUSH S6
STUR 256
NEWC
PUSH S6
STUR 256
PUSH S5
STSLICER
PUSH S4
STUR 256
NEWC
PUSH S4
STUR 256
PUSH S3
STSLICER
BLKDROP2 9, 3
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEvent
DROP
; end modifier onlyActiveConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive

.globl	rejectEthereumEvent
.public	rejectEthereumEvent
.type	rejectEthereumEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventInitData
;; decode struct EthereumEventInitData eventInitData
;; decode EthereumEventInitData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode EthereumEventInitData.eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.ethereumEventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode EthereumEventInitData.requiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.requiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.proxyAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct EthereumEventInitData ss:10
BLKSWAP 9, 1
TUPLE 9
SWAP
; Decode configurationID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: eventInitData
;; param: configurationID
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S1
PUSHINT 16922
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function rejectEthereumEvent
ACCEPT
;; Remote call EthereumEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x7c2a55c6
;; eventInitData
;; push identifier eventInitData
PUSH S5
UNTUPLE 9
BLKSWAP 1, 9
PUSH S9
STUR 256
PUSH S8
STUR 256
PUSH S7
STREFR
PUSH S6
STUR 256
NEWC
PUSH S6
STUR 256
PUSH S5
STSLICER
PUSH S4
STUR 256
NEWC
PUSH S4
STUR 256
PUSH S3
STSLICER
BLKDROP2 9, 3
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEvent
DROP
; end modifier onlyActiveConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	rejectEthereumEvent_internal
.type	rejectEthereumEvent_internal, @function
;; param: eventInitData
;; param: configurationID
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S1
PUSHINT 16922
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function rejectEthereumEvent
ACCEPT
;; Remote call EthereumEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x7c2a55c6
;; eventInitData
;; push identifier eventInitData
PUSH S5
UNTUPLE 9
BLKSWAP 1, 9
PUSH S9
STUR 256
PUSH S8
STUR 256
PUSH S7
STREFR
PUSH S6
STUR 256
NEWC
PUSH S6
STUR 256
PUSH S5
STSLICER
PUSH S4
STUR 256
NEWC
PUSH S4
STUR 256
PUSH S3
STSLICER
BLKDROP2 9, 3
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEvent
DROP
; end modifier onlyActiveConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive

.globl	confirmTonEvent
.public	confirmTonEvent
.type	confirmTonEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventInitData
;; decode struct TonEventInitData eventInitData
;; decode TonEventInitData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.eventData
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode TonEventInitData.eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.tonEventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode TonEventInitData.requiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.requiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; build struct TonEventInitData ss:9
BLKSWAP 8, 1
TUPLE 8
SWAP
; Decode eventDataSignature
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode configurationID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: eventInitData
;; param: eventDataSignature
;; param: configurationID
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S1
PUSHINT 16922
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function confirmTonEvent
ACCEPT
;; Remote call TonEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x58a8ba17
;; eventInitData
;; push identifier eventInitData
PUSH S6
UNTUPLE 8
BLKSWAP 1, 8
PUSH S8
STUR 256
PUSH S7
STUR 256
PUSH S6
STREFR
PUSH S5
STUR 256
NEWC
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
STUR 256
NEWC
PUSH S3
STUR 256
BLKDROP2 8, 3
;; eventDataSignature
;; push identifier eventDataSignature
PUSH S7
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmTonEvent
DROP
; end modifier onlyActiveConfiguration
DROP
; end modifier onlyOwnerKey
BLKDROP 3
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	confirmTonEvent_internal
.type	confirmTonEvent_internal, @function
;; param: eventInitData
;; param: eventDataSignature
;; param: configurationID
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S1
PUSHINT 16922
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function confirmTonEvent
ACCEPT
;; Remote call TonEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x58a8ba17
;; eventInitData
;; push identifier eventInitData
PUSH S6
UNTUPLE 8
BLKSWAP 1, 8
PUSH S8
STUR 256
PUSH S7
STUR 256
PUSH S6
STREFR
PUSH S5
STUR 256
NEWC
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
STUR 256
NEWC
PUSH S3
STUR 256
BLKDROP2 8, 3
;; eventDataSignature
;; push identifier eventDataSignature
PUSH S7
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmTonEvent
DROP
; end modifier onlyActiveConfiguration
DROP
; end modifier onlyOwnerKey
BLKDROP 3
; end modifier onlyActive

.globl	rejectTonEvent
.public	rejectTonEvent
.type	rejectTonEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventInitData
;; decode struct TonEventInitData eventInitData
;; decode TonEventInitData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode TonEventInitData.eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.tonEventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode TonEventInitData.requiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventInitData.requiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; build struct TonEventInitData ss:9
BLKSWAP 8, 1
TUPLE 8
SWAP
; Decode configurationID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: eventInitData
;; param: configurationID
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S1
PUSHINT 16922
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function rejectTonEvent
ACCEPT
;; Remote call TonEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x2f0dc40f
;; eventInitData
;; push identifier eventInitData
PUSH S5
UNTUPLE 8
BLKSWAP 1, 8
PUSH S8
STUR 256
PUSH S7
STUR 256
PUSH S6
STREFR
PUSH S5
STUR 256
NEWC
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
STUR 256
NEWC
PUSH S3
STUR 256
BLKDROP2 8, 3
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectTonEvent
DROP
; end modifier onlyActiveConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	rejectTonEvent_internal
.type	rejectTonEvent_internal, @function
;; param: eventInitData
;; param: configurationID
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S1
PUSHINT 16922
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function rejectTonEvent
ACCEPT
;; Remote call TonEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S2
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x2f0dc40f
;; eventInitData
;; push identifier eventInitData
PUSH S5
UNTUPLE 8
BLKSWAP 1, 8
PUSH S8
STUR 256
PUSH S7
STUR 256
PUSH S6
STREFR
PUSH S5
STUR 256
NEWC
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
STUR 256
NEWC
PUSH S3
STUR 256
BLKDROP2 8, 3
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectTonEvent
DROP
; end modifier onlyActiveConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive

.globl	getVotingDirection
.public	getVotingDirection
.type	getVotingDirection, @function
; Decode input parameters
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; decode Vote.payload
LDREF
;; build struct Vote ss:3
ROTREV
TUPLE 2
SWAP
ENDS
;; param: _vote
; function getVotingDirection
;; ret param: vote
PUSHINT 0
;; if
;; get member length
;; get member signature
;; push identifier _vote
PUSH S1
INDEX 0
CTOS
SBITS
RSHIFT 3
EQINT 0
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; returning named params
SWAP
DROP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xc41839ac
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getVotingDirection
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getVotingDirection_internal
.type	getVotingDirection_internal, @function
;; param: _vote
; function getVotingDirection
;; ret param: vote
PUSHINT 0
;; if
;; get member length
;; get member signature
;; push identifier _vote
PUSH S1
INDEX 0
CTOS
SBITS
RSHIFT 3
EQINT 0
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; returning named params
SWAP
DROP
; end function getVotingDirection

.globl	updateBridgeConfiguration
.public	updateBridgeConfiguration
.type	updateBridgeConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.eventConfigurationRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.eventConfigurationRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:8
BLKSWAP 7, 1
TUPLE 7
SWAP
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; decode Vote.payload
LDREF
;; build struct Vote ss:4
ROTREV
TUPLE 2
SWAP
ENDS
;; param: _bridgeConfiguration
;; param: _vote
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateBridgeConfiguration
ACCEPT
;; emit BridgeConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x60ef2009
;; _bridgeConfiguration
;; push identifier _bridgeConfiguration
PUSH S3
UNTUPLE 7
BLKSWAP 1, 7
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; vote
;; push identifier _vote
PUSH S2
UNTUPLE 2
ROT
PUSH S2
STREFR
PUSH S1
STREFR
NIP
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S1
CALL $getVotingDirection_internal$
;; decl: vote
;; push identifier vote
DUP
; expValue
;; fetch bridgeConfigurationVotes
GETGLOB 15
;; push identifier _bridgeConfiguration
PUSH S5
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 97
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
NEWC
STDICT
ROTREV
PUSHINT 97
DICTSETB
SETGLOB 15
; end colValue
;; push identifier _bridgeConfiguration
PUSH S3
CALL $getBridgeConfigurationVotes_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S1
INDEX 0
;; get member bridgeConfigurationUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 2
;; ==
EQUAL
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier _bridgeConfiguration
	PUSH S5
	; colValue
	SETGLOB 12
	; end colValue
	;; push identifier _bridgeConfiguration
	PUSH S5
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x1b2e837c
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S6
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
DUP
INDEX 0
;; get member bridgeConfigurationUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 3
;; ==
EQUAL
PUSHCONT {
	;; push identifier _bridgeConfiguration
	PUSH S5
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x1b2e837c
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S6
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeConfiguration
BLKDROP 3
; end modifier onlyOwnerKey
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	updateBridgeConfiguration_internal
.type	updateBridgeConfiguration_internal, @function
;; param: _bridgeConfiguration
;; param: _vote
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateBridgeConfiguration
ACCEPT
;; emit BridgeConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x60ef2009
;; _bridgeConfiguration
;; push identifier _bridgeConfiguration
PUSH S3
UNTUPLE 7
BLKSWAP 1, 7
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; vote
;; push identifier _vote
PUSH S2
UNTUPLE 2
ROT
PUSH S2
STREFR
PUSH S1
STREFR
NIP
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S1
CALL $getVotingDirection_internal$
;; decl: vote
;; push identifier vote
DUP
; expValue
;; fetch bridgeConfigurationVotes
GETGLOB 15
;; push identifier _bridgeConfiguration
PUSH S5
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 97
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
NEWC
STDICT
ROTREV
PUSHINT 97
DICTSETB
SETGLOB 15
; end colValue
;; push identifier _bridgeConfiguration
PUSH S3
CALL $getBridgeConfigurationVotes_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S1
INDEX 0
;; get member bridgeConfigurationUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 2
;; ==
EQUAL
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier _bridgeConfiguration
	PUSH S5
	; colValue
	SETGLOB 12
	; end colValue
	;; push identifier _bridgeConfiguration
	PUSH S5
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x1b2e837c
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S6
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
DUP
INDEX 0
;; get member bridgeConfigurationUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 3
;; ==
EQUAL
PUSHCONT {
	;; push identifier _bridgeConfiguration
	PUSH S5
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x1b2e837c
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S6
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeConfiguration
BLKDROP 3
; end modifier onlyOwnerKey

.globl	_removeBridgeConfigurationVoting_internal
.type	_removeBridgeConfigurationVoting_internal, @function
;; param: _bridgeConfiguration
; function _removeBridgeConfigurationVoting
;; delete
; expValue
;; fetch bridgeConfigurationVotes
GETGLOB 15
;; push identifier _bridgeConfiguration
PUSH S1
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 97
DICTDEL
DROP
; colValue
NIP
SETGLOB 15
; end colValue
DROP
; end function _removeBridgeConfigurationVoting

.globl	getBridgeConfigurationVotes
.public	getBridgeConfigurationVotes
.type	getBridgeConfigurationVotes, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.eventConfigurationRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.eventConfigurationRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:8
BLKSWAP 7, 1
TUPLE 7
SWAP
ENDS
;; param: _bridgeConfiguration
; function getBridgeConfigurationVotes
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier _bridgeConfiguration
PUSH S2
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
;; push identifier bridgeConfigurationVotes
GETGLOB 15
PUSHINT 97
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xe2b6670a
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function getBridgeConfigurationVotes
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getBridgeConfigurationVotes_internal
.type	getBridgeConfigurationVotes_internal, @function
;; param: _bridgeConfiguration
; function getBridgeConfigurationVotes
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier _bridgeConfiguration
PUSH S2
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
;; push identifier bridgeConfigurationVotes
GETGLOB 15
PUSHINT 97
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
; end function getBridgeConfigurationVotes

.globl	initializeUpdateEventConfiguration
.public	initializeUpdateEventConfiguration
.type	initializeUpdateEventConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode targetID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode basicInitData
;; decode struct BasicConfigurationInitData basicInitData
;; decode BasicConfigurationInitData.eventABI
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BasicConfigurationInitData.eventRequiredConfirmations
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode BasicConfigurationInitData.eventRequiredRejects
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode BasicConfigurationInitData.eventCode
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BasicConfigurationInitData.bridgeAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode BasicConfigurationInitData.eventInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; build struct BasicConfigurationInitData ss:10
BLKSWAP 6, 1
TUPLE 6
SWAP
; Decode ethereumInitData
;; decode struct EthereumEventConfigurationInitData ethereumInitData
;; decode EthereumEventConfigurationInitData.eventAddress
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; decode EthereumEventConfigurationInitData.eventBlocksToConfirm
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode EthereumEventConfigurationInitData.proxyAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct EthereumEventConfigurationInitData ss:8
BLKSWAP 3, 1
TUPLE 3
SWAP
; Decode tonInitData
;; decode struct TonEventConfigurationInitData tonInitData
;; decode TonEventConfigurationInitData.eventAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode TonEventConfigurationInitData.proxyAddress
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; build struct TonEventConfigurationInitData ss:8
ROTREV
TUPLE 2
SWAP
ENDS
;; param: id
;; param: targetID
;; param: addr
;; param: basicInitData
;; param: ethereumInitData
;; param: tonInitData
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function initializeUpdateEventConfiguration
PUSHINT 17777
;; !
;; map.exists
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
PUSHINT 17778
;; map.exists
;; push identifier targetID
PUSH S6
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
ACCEPT
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; decl: key
NEWDICT
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 2
TUPLE 6
;; decl: update
; expValue
DUP
; end expValue
;; push identifier targetID
PUSH S8
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S7
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier basicInitData
PUSH S6
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier ethereumInitData
PUSH S5
; colValue
SETINDEX 4
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier tonInitData
PUSH S4
; colValue
SETINDEX 5
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier key
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 14
;; push identifier id
PUSH S9
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s6
BLKDROP 6
STBREFR
PUSH S2
UNTUPLE 3
NEWC
PUSH S3
STUR 160
PUSH S2
STUR 16
PUSH S1
STSLICER
XCHG s3
BLKDROP 3
STBREFR
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STUR 160
NIP
NIP
STBREFR
XCHG s6
BLKDROP 6
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 14
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x70a18344
;; id
;; push identifier id
PUSH S9
STUR 256
;; relayKey
;; push identifier key
PUSH S2
STUR 256
;; vote
TRUE
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function initializeUpdateEventConfiguration
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	initializeUpdateEventConfiguration_internal
.type	initializeUpdateEventConfiguration_internal, @function
;; param: id
;; param: targetID
;; param: addr
;; param: basicInitData
;; param: ethereumInitData
;; param: tonInitData
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function initializeUpdateEventConfiguration
PUSHINT 17777
;; !
;; map.exists
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
PUSHINT 17778
;; map.exists
;; push identifier targetID
PUSH S6
;; push identifier eventConfigurations
GETGLOB 13
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
ACCEPT
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; decl: key
NEWDICT
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 2
TUPLE 6
;; decl: update
; expValue
DUP
; end expValue
;; push identifier targetID
PUSH S8
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S7
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier basicInitData
PUSH S6
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier ethereumInitData
PUSH S5
; colValue
SETINDEX 4
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier tonInitData
PUSH S4
; colValue
SETINDEX 5
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier key
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 14
;; push identifier id
PUSH S9
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s6
BLKDROP 6
STBREFR
PUSH S2
UNTUPLE 3
NEWC
PUSH S3
STUR 160
PUSH S2
STUR 16
PUSH S1
STSLICER
XCHG s3
BLKDROP 3
STBREFR
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STUR 160
NIP
NIP
STBREFR
XCHG s6
BLKDROP 6
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 14
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x70a18344
;; id
;; push identifier id
PUSH S9
STUR 256
;; relayKey
;; push identifier key
PUSH S2
STUR 256
;; vote
TRUE
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function initializeUpdateEventConfiguration
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive

.globl	voteForUpdateEventConfiguration
.public	voteForUpdateEventConfiguration
.type	voteForUpdateEventConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode vote
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
ENDS
;; param: id
;; param: vote
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function voteForUpdateEventConfiguration
ACCEPT
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; decl: key
;; index
;; push identifier id
PUSH S3
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	LDDICT
	LDU 256
	LDMSGADDR
	LDREFRTOS
	LDREF
	LDU 16
	LDU 16
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 6
	SWAP
	LDREFRTOS
	LDU 160
	LDU 16
	TUPLE 3
	SWAP
	LDREFRTOS
	NIP
	LDMSGADDR
	PLDU 160
	TUPLE 2
	TUPLE 6
}
PUSHCONT {
	NEWDICT
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	NEWC
	ENDC
	PUSHINT 0
	PUSHINT 0
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 6
	PUSHINT 0
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 3
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 2
	TUPLE 6
}
IFELSE
;; decl: update
; expValue
DUP
DUP
INDEX 0
;; push identifier key
PUSH S3
SWAP
; end expValue
;; push identifier vote
PUSH S6
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 14
;; push identifier id
PUSH S5
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s6
BLKDROP 6
STBREFR
PUSH S2
UNTUPLE 3
NEWC
PUSH S3
STUR 160
PUSH S2
STUR 16
PUSH S1
STSLICER
XCHG s3
BLKDROP 3
STBREFR
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STUR 160
NIP
NIP
STBREFR
XCHG s6
BLKDROP 6
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 14
; end colValue
;; emit EventConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x198d7aef
;; id
;; push identifier id
PUSH S5
STUR 256
;; relayKey
;; push identifier key
PUSH S2
STUR 256
;; vote
;; push identifier vote
PUSH S4
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier id
PUSH S4
CALL $getUpdateEventConfigurationDetails_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S6
INDEX 0
;; get member eventConfigurationRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 0
;; ==
EQUAL
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	GETGLOB 13
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	SWAP
	PUSH2 S1, S0
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	NIP
	; end expValue
	;; get member addr
	;; push identifier update
	PUSH S11
	INDEX 2
	; colValue
	ROT
	NEWC
	STSLICE
	STSLICE
	STSLICE
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 13
	; end colValue
	;; if
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S7
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 13
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	;; get member Ethereum
	PUSHINT 0
	;; ==
	EQUAL
	PUSHCONT {
		;; Remote call EthereumEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		GETGLOB 13
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x298eed1b
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 6
		BLKSWAP 1, 6
		PUSH S6
		STREFR
		PUSH S5
		STUR 16
		PUSH S4
		STUR 16
		PUSH S3
		STREFR
		PUSH S2
		STSLICER
		PUSH S1
		STUR 128
		XCHG s6
		BLKDROP 6
		;; _initData
		;; get member ethereumInitData
		;; push identifier update
		PUSH S9
		INDEX 4
		UNTUPLE 3
		BLKSWAP 1, 3
		PUSH S3
		STUR 160
		PUSH S2
		STUR 16
		PUSH S1
		STSLICER
		XCHG s3
		BLKDROP 3
		STBREFR
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	PUSHCONT {
		;; Remote call TonEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		GETGLOB 13
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x412592f4
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 6
		BLKSWAP 1, 6
		PUSH S6
		STREFR
		PUSH S5
		STUR 16
		PUSH S4
		STUR 16
		PUSH S3
		STREFR
		PUSH S2
		STSLICER
		PUSH S1
		STUR 128
		XCHG s6
		BLKDROP 6
		;; _initData
		;; get member tonInitData
		;; push identifier update
		PUSH S9
		INDEX 5
		UNTUPLE 2
		ROT
		PUSH S2
		STSLICER
		PUSH S1
		STUR 160
		NIP
		NIP
		STBREFR
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	IFELSE
	;; end if
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x5e3aa1d1
	;; id
	;; push identifier id
	PUSH S12
	STUR 256
	;; active
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
	;; push identifier id
	PUSH S11
	CALL $_removeUpdateEventConfiguration_internal$
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
PUSH S5
INDEX 0
;; get member eventConfigurationRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 1
;; ==
EQUAL
PUSHCONT {
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x5e3aa1d1
	;; id
	;; push identifier id
	PUSH S12
	STUR 256
	;; active
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
	;; push identifier id
	PUSH S11
	CALL $_removeUpdateEventConfiguration_internal$
}
IF
;; end if
BLKDROP 9
; end function voteForUpdateEventConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	voteForUpdateEventConfiguration_internal
.type	voteForUpdateEventConfiguration_internal, @function
;; param: id
;; param: vote
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function voteForUpdateEventConfiguration
ACCEPT
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; decl: key
;; index
;; push identifier id
PUSH S3
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	LDDICT
	LDU 256
	LDMSGADDR
	LDREFRTOS
	LDREF
	LDU 16
	LDU 16
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 6
	SWAP
	LDREFRTOS
	LDU 160
	LDU 16
	TUPLE 3
	SWAP
	LDREFRTOS
	NIP
	LDMSGADDR
	PLDU 160
	TUPLE 2
	TUPLE 6
}
PUSHCONT {
	NEWDICT
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	NEWC
	ENDC
	PUSHINT 0
	PUSHINT 0
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 6
	PUSHINT 0
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 3
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 2
	TUPLE 6
}
IFELSE
;; decl: update
; expValue
DUP
DUP
INDEX 0
;; push identifier key
PUSH S3
SWAP
; end expValue
;; push identifier vote
PUSH S6
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 14
;; push identifier id
PUSH S5
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s6
BLKDROP 6
STBREFR
PUSH S2
UNTUPLE 3
NEWC
PUSH S3
STUR 160
PUSH S2
STUR 16
PUSH S1
STSLICER
XCHG s3
BLKDROP 3
STBREFR
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STUR 160
NIP
NIP
STBREFR
XCHG s6
BLKDROP 6
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 14
; end colValue
;; emit EventConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x198d7aef
;; id
;; push identifier id
PUSH S5
STUR 256
;; relayKey
;; push identifier key
PUSH S2
STUR 256
;; vote
;; push identifier vote
PUSH S4
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier id
PUSH S4
CALL $getUpdateEventConfigurationDetails_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S6
INDEX 0
;; get member eventConfigurationRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 0
;; ==
EQUAL
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	GETGLOB 13
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	SWAP
	PUSH2 S1, S0
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	NIP
	; end expValue
	;; get member addr
	;; push identifier update
	PUSH S11
	INDEX 2
	; colValue
	ROT
	NEWC
	STSLICE
	STSLICE
	STSLICE
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 13
	; end colValue
	;; if
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S7
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 13
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	;; get member Ethereum
	PUSHINT 0
	;; ==
	EQUAL
	PUSHCONT {
		;; Remote call EthereumEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		GETGLOB 13
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x298eed1b
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 6
		BLKSWAP 1, 6
		PUSH S6
		STREFR
		PUSH S5
		STUR 16
		PUSH S4
		STUR 16
		PUSH S3
		STREFR
		PUSH S2
		STSLICER
		PUSH S1
		STUR 128
		XCHG s6
		BLKDROP 6
		;; _initData
		;; get member ethereumInitData
		;; push identifier update
		PUSH S9
		INDEX 4
		UNTUPLE 3
		BLKSWAP 1, 3
		PUSH S3
		STUR 160
		PUSH S2
		STUR 16
		PUSH S1
		STSLICER
		XCHG s3
		BLKDROP 3
		STBREFR
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	PUSHCONT {
		;; Remote call TonEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		GETGLOB 13
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x412592f4
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 6
		BLKSWAP 1, 6
		PUSH S6
		STREFR
		PUSH S5
		STUR 16
		PUSH S4
		STUR 16
		PUSH S3
		STREFR
		PUSH S2
		STSLICER
		PUSH S1
		STUR 128
		XCHG s6
		BLKDROP 6
		;; _initData
		;; get member tonInitData
		;; push identifier update
		PUSH S9
		INDEX 5
		UNTUPLE 2
		ROT
		PUSH S2
		STSLICER
		PUSH S1
		STUR 160
		NIP
		NIP
		STBREFR
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	IFELSE
	;; end if
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x5e3aa1d1
	;; id
	;; push identifier id
	PUSH S12
	STUR 256
	;; active
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
	;; push identifier id
	PUSH S11
	CALL $_removeUpdateEventConfiguration_internal$
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
PUSH S5
INDEX 0
;; get member eventConfigurationRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 1
;; ==
EQUAL
PUSHCONT {
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x5e3aa1d1
	;; id
	;; push identifier id
	PUSH S12
	STUR 256
	;; active
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
	;; push identifier id
	PUSH S11
	CALL $_removeUpdateEventConfiguration_internal$
}
IF
;; end if
BLKDROP 9
; end function voteForUpdateEventConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive

.globl	getUpdateEventConfigurationDetails
.public	getUpdateEventConfigurationDetails
.type	getUpdateEventConfigurationDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: id
; function getUpdateEventConfigurationDetails
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: targetID
PUSHINT 0
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: basicInitData
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
;; ret param: ethereumInitData
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
;; ret param: tonInitData
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 2
ACCEPT
;; get member votes
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S10
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S11
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S9
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S10
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member basicInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
LDREFRTOS
NIP
LDREF
LDU 16
LDU 16
LDREF
LDMSGADDR
PLDU 128
TUPLE 6
; colValue
POP S3
; end colValue
; expValue
; end expValue
;; get member ethereumInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
LDREF
NIP
LDREFRTOS
NIP
LDU 160
LDU 16
TUPLE 3
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member tonInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
PUSHINT 0
PUSHINT 2
SSKIPFIRST
LDREFRTOS
NIP
LDMSGADDR
PLDU 160
TUPLE 2
; colValue
NIP
; end colValue
; expValue
; end expValue
;; get member targetID
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
PLDU 256
; colValue
POP S5
; end colValue
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
DROP
; colValue
POP S4
; end colValue
;; returning named params
BLKSWAP 1, 7
DROP
;; emitting 7 value(s)
PUSH S7
EQINT -1
PUSHCONT {
	PUSH S9
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xc75244ae
	PUSH S8
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S7
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S6
	STUR 256
	PUSH S5
	STSLICER
	PUSH S4
	UNTUPLE 6
	BLKSWAP 1, 6
	PUSH S6
	STREFR
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	NEWC
	PUSH S4
	STREFR
	PUSH S3
	STSLICER
	PUSH S2
	STUR 128
	BLKDROP2 6, 2
	PUSH S4
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STUR 160
	PUSH S2
	STUR 16
	PUSH S1
	STSLICER
	XCHG s3
	BLKDROP 3
	PUSH S3
	UNTUPLE 2
	ROT
	NEWC
	PUSH S3
	STSLICER
	PUSH S2
	STUR 160
	BLKDROP2 2, 2
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 7
; end function getUpdateEventConfigurationDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getUpdateEventConfigurationDetails_internal
.type	getUpdateEventConfigurationDetails_internal, @function
;; param: id
; function getUpdateEventConfigurationDetails
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: targetID
PUSHINT 0
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: basicInitData
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
;; ret param: ethereumInitData
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
;; ret param: tonInitData
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 2
ACCEPT
;; get member votes
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S10
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S11
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S9
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S10
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member basicInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
LDREFRTOS
NIP
LDREF
LDU 16
LDU 16
LDREF
LDMSGADDR
PLDU 128
TUPLE 6
; colValue
POP S3
; end colValue
; expValue
; end expValue
;; get member ethereumInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
LDREF
NIP
LDREFRTOS
NIP
LDU 160
LDU 16
TUPLE 3
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member tonInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
PUSHINT 0
PUSHINT 2
SSKIPFIRST
LDREFRTOS
NIP
LDMSGADDR
PLDU 160
TUPLE 2
; colValue
NIP
; end colValue
; expValue
; end expValue
;; get member targetID
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
PLDU 256
; colValue
POP S5
; end colValue
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 14
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
DROP
; colValue
POP S4
; end colValue
;; returning named params
BLKSWAP 1, 7
DROP
; end function getUpdateEventConfigurationDetails

.globl	_removeUpdateEventConfiguration_internal
.type	_removeUpdateEventConfiguration_internal, @function
;; param: id
; function _removeUpdateEventConfiguration
;; delete
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 14
;; push identifier id
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 256
DICTUDEL
DROP
; colValue
NIP
SETGLOB 14
; end colValue
DROP
; end function _removeUpdateEventConfiguration

.globl	updateBridgeRelays
.public	updateBridgeRelays
.type	updateBridgeRelays, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode target
;; decode struct BridgeRelay target
;; decode BridgeRelay.key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeRelay.action
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeRelay ss:3
ROTREV
TUPLE 2
SWAP
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode Vote.payload
LDREF
;; build struct Vote ss:4
ROTREV
TUPLE 2
SWAP
ENDS
;; param: target
;; param: _vote
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateBridgeRelays
ACCEPT
;; emit BridgeRelaysUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7f8982ca
;; target
;; push identifier target
PUSH S3
UNTUPLE 2
ROT
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; vote
;; push identifier _vote
PUSH S2
UNTUPLE 2
ROT
PUSH S2
STREFR
PUSH S1
STREFR
NIP
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S1
CALL $getVotingDirection_internal$
;; decl: vote
;; push identifier vote
DUP
; expValue
;; fetch bridgeRelayVotes
GETGLOB 16
;; push identifier target
PUSH S5
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 257
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
NEWC
STDICT
ROTREV
PUSHINT 257
DICTSETB
SETGLOB 16
; end colValue
;; push identifier target
PUSH S3
CALL $getBridgeRelayVotes_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S1
INDEX 0
;; get member bridgeRelayUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 4
;; ==
EQUAL
PUSHCONT {
	;; if
	;; get member action
	;; push identifier target
	PUSH S5
	INDEX 1
	PUSHCONT {
		;; get member key
		;; push identifier target
		PUSH S5
		INDEX 0
		CALL $_grantOwnership_internal$
	}
	PUSHCONT {
		;; get member key
		;; push identifier target
		PUSH S5
		INDEX 0
		CALL $_removeOwnership_internal$
	}
	IFELSE
	;; end if
	;; push identifier target
	PUSH S5
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6f5bc3fe
	;; target
	;; push identifier target
	PUSH S6
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 256
	PUSH S1
	STIR 1
	NIP
	NIP
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
DUP
INDEX 0
;; get member bridgeRelayUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 5
;; ==
EQUAL
PUSHCONT {
	;; push identifier target
	PUSH S5
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6f5bc3fe
	;; target
	;; push identifier target
	PUSH S6
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 256
	PUSH S1
	STIR 1
	NIP
	NIP
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeRelays
BLKDROP 3
; end modifier onlyOwnerKey
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	updateBridgeRelays_internal
.type	updateBridgeRelays_internal, @function
;; param: target
;; param: _vote
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateBridgeRelays
ACCEPT
;; emit BridgeRelaysUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7f8982ca
;; target
;; push identifier target
PUSH S3
UNTUPLE 2
ROT
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; vote
;; push identifier _vote
PUSH S2
UNTUPLE 2
ROT
PUSH S2
STREFR
PUSH S1
STREFR
NIP
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S1
CALL $getVotingDirection_internal$
;; decl: vote
;; push identifier vote
DUP
; expValue
;; fetch bridgeRelayVotes
GETGLOB 16
;; push identifier target
PUSH S5
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 257
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
NEWC
STDICT
ROTREV
PUSHINT 257
DICTSETB
SETGLOB 16
; end colValue
;; push identifier target
PUSH S3
CALL $getBridgeRelayVotes_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S1
INDEX 0
;; get member bridgeRelayUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 4
;; ==
EQUAL
PUSHCONT {
	;; if
	;; get member action
	;; push identifier target
	PUSH S5
	INDEX 1
	PUSHCONT {
		;; get member key
		;; push identifier target
		PUSH S5
		INDEX 0
		CALL $_grantOwnership_internal$
	}
	PUSHCONT {
		;; get member key
		;; push identifier target
		PUSH S5
		INDEX 0
		CALL $_removeOwnership_internal$
	}
	IFELSE
	;; end if
	;; push identifier target
	PUSH S5
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6f5bc3fe
	;; target
	;; push identifier target
	PUSH S6
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 256
	PUSH S1
	STIR 1
	NIP
	NIP
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
DUP
INDEX 0
;; get member bridgeRelayUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 5
;; ==
EQUAL
PUSHCONT {
	;; push identifier target
	PUSH S5
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6f5bc3fe
	;; target
	;; push identifier target
	PUSH S6
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 256
	PUSH S1
	STIR 1
	NIP
	NIP
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeRelays
BLKDROP 3
; end modifier onlyOwnerKey

.globl	getBridgeRelayVotes
.public	getBridgeRelayVotes
.type	getBridgeRelayVotes, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode target
;; decode struct BridgeRelay target
;; decode BridgeRelay.key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeRelay.action
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeRelay ss:3
ROTREV
TUPLE 2
SWAP
ENDS
;; param: target
; function getBridgeRelayVotes
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier target
PUSH S2
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
;; push identifier bridgeRelayVotes
GETGLOB 16
PUSHINT 257
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb4759f7e
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function getBridgeRelayVotes
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getBridgeRelayVotes_internal
.type	getBridgeRelayVotes_internal, @function
;; param: target
; function getBridgeRelayVotes
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier target
PUSH S2
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
;; push identifier bridgeRelayVotes
GETGLOB 16
PUSHINT 257
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
; end function getBridgeRelayVotes

.globl	_removeBridgeRelayVoting_internal
.type	_removeBridgeRelayVoting_internal, @function
;; param: target
; function _removeBridgeRelayVoting
;; delete
; expValue
;; fetch bridgeRelayVotes
GETGLOB 16
;; push identifier target
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 257
DICTDEL
DROP
; colValue
NIP
SETGLOB 16
; end colValue
DROP
; end function _removeBridgeRelayVoting

.globl	getDetails
.public	getDetails
.type	getDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getDetails
;; ret param: _bridgeConfiguration
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 7
;; return
;; push identifier bridgeConfiguration
GETGLOB 12
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x9b6d48eb
	PUSH S1
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getDetails_internal
.type	getDetails_internal, @function
; function getDetails
;; ret param: _bridgeConfiguration
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 7
;; return
;; push identifier bridgeConfiguration
GETGLOB 12
NIP
; end function getDetails

.globl	getKeyStatus
.public	getKeyStatus
.type	getKeyStatus, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: key
; function getKeyStatus
;; ret param: _status
PUSHINT 0
;; return
;; index
;; push identifier key
PUSH S1
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x957003d0
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getKeyStatus
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getKeyStatus_internal
.type	getKeyStatus_internal, @function
;; param: key
; function getKeyStatus
;; ret param: _status
PUSHINT 0
;; return
;; index
;; push identifier key
PUSH S1
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
; end function getKeyStatus

.globl	_grantOwnership_internal
.type	_grantOwnership_internal, @function
;; param: key
; function _grantOwnership
; expValue
;; fetch ownerKeys
GETGLOB 10
;; push identifier key
PUSH S1
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 10
; end colValue
DROP
; end function _grantOwnership

.globl	_removeOwnership_internal
.type	_removeOwnership_internal, @function
;; param: key
; function _removeOwnership
; expValue
;; fetch ownerKeys
GETGLOB 10
;; push identifier key
PUSH S1
SWAP
; end expValue
FALSE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 10
; end colValue
DROP
; end function _removeOwnership

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 13
GETGLOB 14
GETGLOB 15
REVERSE 4, 0
STDICT
STDICT
STDICT
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 16
REVERSE 6, 0
STBREF
STDICT
STU 256
SWAP
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
STBREFR
STDICT
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDDICT
LDDICT
PLDDICT
SETGLOB 15
SETGLOB 14
SETGLOB 13
LDDICT
LDU 256
LDREFRTOS
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
PLDI 1
TUPLE 7
SETGLOB 12
PLDDICT
SETGLOB 16
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDDICT
	LDDICT
	PLDDICT
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	LDDICT
	LDU 256
	LDREFRTOS
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	PLDI 1
	TUPLE 7
	SETGLOB 12
	PLDDICT
	SETGLOB 16
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _randomNonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 11
	; init bridgeConfiguration
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	TUPLE 7
	SETGLOB 12
	; init eventConfigurations
	NEWDICT
	SETGLOB 13
	; init eventConfigurationsUpdate
	NEWDICT
	SETGLOB 14
	; init bridgeConfigurationVotes
	NEWDICT
	SETGLOB 15
	; init bridgeRelayVotes
	NEWDICT
	SETGLOB 16
	; init ownerKeys
	NEWDICT
	SETGLOB 10
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

