.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _relayKeys
LDU 32
LDDICT
ROTREV
PAIR
SWAP
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.ethereumEventConfigurationCode
;; decode TvmCell
LDREF
;; decode BridgeConfiguration.ethereumEventConfigurationRequiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.ethereumEventConfigurationRequiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.ethereumEventConfigurationInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode BridgeConfiguration.ethereumEventCode
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BridgeConfiguration.bridgeConfigurationUpdateCode
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.bridgeConfigurationUpdateInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode BridgeConfiguration.active
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeConfiguration ss:12
BLKSWAP 10, 1
TUPLE 10
SWAP
ENDS
;; param: _relayKeys
;; param: _bridgeConfiguration
; constructor FreeTonBridge
GETGLOB 2
NEQINT 0
THROWIFNOT 100
ACCEPT
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; get member length
	;; push identifier _relayKeys
	PUSH S3
	FIRST
	;; <
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier _relayKeys
	PUSH S3
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	CALL $_grantOwnership_internal$
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
; end expValue
;; push identifier _bridgeConfiguration
DUP
; colValue
SETGLOB 12
; end colValue
; expValue
;; fetch bridgeConfiguration
GETGLOB 12
; end expValue
TRUE
; colValue
SETINDEX 9
SETGLOB 12
; end colValue
; expValue
;; fetch sequentialIndex
GETGLOB 13
; end expValue
PUSHINT 0
; colValue
SETINDEX 0
SETGLOB 13
; end colValue
; expValue
;; fetch sequentialIndex
GETGLOB 13
; end expValue
PUSHINT 0
; colValue
SETINDEX 1
SETGLOB 13
; end colValue
DROP2
; end constructor FreeTonBridge
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	confirmBridgeConfigurationUpdate
.public	confirmBridgeConfigurationUpdate
.type	confirmBridgeConfigurationUpdate, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.ethereumEventConfigurationCode
;; decode TvmCell
LDREF
;; decode BridgeConfiguration.ethereumEventConfigurationRequiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.ethereumEventConfigurationRequiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.ethereumEventConfigurationInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode BridgeConfiguration.ethereumEventCode
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BridgeConfiguration.bridgeConfigurationUpdateCode
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.bridgeConfigurationUpdateInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode BridgeConfiguration.active
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeConfiguration ss:11
BLKSWAP 10, 1
TUPLE 10
SWAP
ENDS
;; param: _bridgeConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmBridgeConfigurationUpdate
ACCEPT
NEWDICT
GETGLOB 2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
;; get member bridgeConfigurationUpdateCode
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 5
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; get member bridgeConfigurationUpdateInitialBalance
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 8
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
NEWC
STSLICECONST x209f940f
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; _requiredConfirmations
;; get member bridgeConfigurationUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
STUR 256
;; _requiredRejects
;; get member bridgeConfigurationUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 7
STUR 256
;; _bridgeConfiguration
;; push identifier _bridgeConfiguration
PUSH S5
UNTUPLE 10
BLKSWAP 1, 10
PUSH S10
STREFR
NEWC
PUSH S10
STUR 256
PUSH S9
STUR 256
PUSH S8
STUR 128
PUSH S7
STREFR
PUSH S6
STREFR
PUSH S5
STUR 256
NEWC
PUSH S5
STUR 256
PUSH S4
STUR 128
PUSH S3
STIR 1
BLKDROP2 10, 3
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: bridgeConfigurationUpdateAddress
;; Remote call BridgeConfigurationUpdate.confirm
;; push identifier bridgeConfigurationUpdateAddress
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7c5f8264
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
ENDC
PUSHINT 1
SENDRAWMSG
;; emit NewBridgeConfigurationUpdate
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x2fe5d2ba
;; addr
;; push identifier bridgeConfigurationUpdateAddress
PUSH S1
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
;; return
;; emitting 1 value(s)
PUSH S3
EQINT -1
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xd5f0bd00
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function confirmBridgeConfigurationUpdate
DROP
; end modifier onlyOwnerKey
DROP
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	confirmBridgeConfigurationUpdate_internal
.type	confirmBridgeConfigurationUpdate_internal, @function
;; param: _bridgeConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmBridgeConfigurationUpdate
ACCEPT
NEWDICT
GETGLOB 2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
;; get member bridgeConfigurationUpdateCode
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 5
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; get member bridgeConfigurationUpdateInitialBalance
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 8
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
NEWC
STSLICECONST x209f940f
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; _requiredConfirmations
;; get member bridgeConfigurationUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
STUR 256
;; _requiredRejects
;; get member bridgeConfigurationUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 7
STUR 256
;; _bridgeConfiguration
;; push identifier _bridgeConfiguration
PUSH S5
UNTUPLE 10
BLKSWAP 1, 10
PUSH S10
STREFR
NEWC
PUSH S10
STUR 256
PUSH S9
STUR 256
PUSH S8
STUR 128
PUSH S7
STREFR
PUSH S6
STREFR
PUSH S5
STUR 256
NEWC
PUSH S5
STUR 256
PUSH S4
STUR 128
PUSH S3
STIR 1
BLKDROP2 10, 3
STBREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: bridgeConfigurationUpdateAddress
;; Remote call BridgeConfigurationUpdate.confirm
;; push identifier bridgeConfigurationUpdateAddress
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7c5f8264
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
ENDC
PUSHINT 1
SENDRAWMSG
;; emit NewBridgeConfigurationUpdate
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x2fe5d2ba
;; addr
;; push identifier bridgeConfigurationUpdateAddress
PUSH S1
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
;; return
TUPLE 1
SETGLOB 8
; end function confirmBridgeConfigurationUpdate
DROP
; end modifier onlyOwnerKey
DROP
; end modifier onlyActive
GETGLOB 8
UNTUPLE 1

.globl	updateBridgeConfiguration
.public	updateBridgeConfiguration
.type	updateBridgeConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.ethereumEventConfigurationCode
;; decode TvmCell
LDREF
;; decode BridgeConfiguration.ethereumEventConfigurationRequiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.ethereumEventConfigurationRequiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.ethereumEventConfigurationInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode BridgeConfiguration.ethereumEventCode
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BridgeConfiguration.bridgeConfigurationUpdateCode
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeConfiguration.bridgeConfigurationUpdateInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode BridgeConfiguration.active
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeConfiguration ss:11
BLKSWAP 10, 1
TUPLE 10
SWAP
ENDS
;; param: _bridgeConfiguration
; function updateBridgeConfiguration
; expValue
; end expValue
;; push identifier _bridgeConfiguration
DUP
; colValue
SETGLOB 12
; end colValue
DROP
; end function updateBridgeConfiguration
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	updateBridgeConfiguration_internal
.type	updateBridgeConfiguration_internal, @function
;; param: _bridgeConfiguration
; function updateBridgeConfiguration
; expValue
; end expValue
;; push identifier _bridgeConfiguration
DUP
; colValue
SETGLOB 12
; end colValue
DROP
; end function updateBridgeConfiguration

.globl	addEthereumEventConfiguration
.public	addEthereumEventConfiguration
.type	addEthereumEventConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode ethereumEventABI
LDREF
; Decode ethereumAddress
LDREF
; Decode ethereumEventBlocksToConfirm
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode ethereumEventRequiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode ethereumEventRequiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode ethereumEventInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode eventProxyAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: ethereumEventABI
;; param: ethereumAddress
;; param: ethereumEventBlocksToConfirm
;; param: ethereumEventRequiredConfirmations
;; param: ethereumEventRequiredRejects
;; param: ethereumEventInitialBalance
;; param: eventProxyAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function addEthereumEventConfiguration
ACCEPT
NEWDICT
GETGLOB 2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier ethereumEventABI
PUSH S8
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
;; push identifier ethereumAddress
PUSH S7
PUSHINT 2
ROT
PUSHINT 64
DICTUSETREF
;; push identifier ethereumEventRequiredConfirmations
PUSH S5
NEWC
STU 256
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
;; push identifier ethereumEventRequiredRejects
PUSH S4
NEWC
STU 256
PUSHINT 4
ROT
PUSHINT 64
DICTUSETB
;; push identifier ethereumEventBlocksToConfirm
PUSH S6
NEWC
STU 256
PUSHINT 5
ROT
PUSHINT 64
DICTUSETB
;; push identifier ethereumEventInitialBalance
PUSH S3
NEWC
STU 128
PUSHINT 6
ROT
PUSHINT 64
DICTUSETB
;; push identifier eventProxyAddress
PUSH S2
PUSHINT 7
ROT
PUSHINT 64
DICTUSET
MYADDR
PUSHINT 8
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
;; get member ethereumEventConfigurationCode
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 0
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; get member ethereumEventConfigurationInitialBalance
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 3
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
NEWC
STSLICECONST x1f73060b
;; _requiredConfirmations
;; get member ethereumEventConfigurationRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 1
STUR 256
;; _requiredRejects
;; get member ethereumEventConfigurationRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 2
STUR 256
;; _ethereumEventCode
;; get member ethereumEventCode
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 4
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: ethereumEventConfigurationAddress
;; ++
; expValue
;; fetch sequentialIndex
GETGLOB 13
DUP
INDEX 0
; end expValue
INC
; colValue
SETINDEX 0
SETGLOB 13
; end colValue
;; emit NewEthereumEventConfiguration
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x4c93c13e
;; addr
;; push identifier ethereumEventConfigurationAddress
PUSH S1
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
;; return
;; emitting 1 value(s)
PUSH S9
EQINT -1
PUSHCONT {
	PUSH S11
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xd63d6649
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function addEthereumEventConfiguration
DROP
; end modifier onlyOwnerKey
BLKDROP 7
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	addEthereumEventConfiguration_internal
.type	addEthereumEventConfiguration_internal, @function
;; param: ethereumEventABI
;; param: ethereumAddress
;; param: ethereumEventBlocksToConfirm
;; param: ethereumEventRequiredConfirmations
;; param: ethereumEventRequiredRejects
;; param: ethereumEventInitialBalance
;; param: eventProxyAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function addEthereumEventConfiguration
ACCEPT
NEWDICT
GETGLOB 2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier ethereumEventABI
PUSH S8
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
;; push identifier ethereumAddress
PUSH S7
PUSHINT 2
ROT
PUSHINT 64
DICTUSETREF
;; push identifier ethereumEventRequiredConfirmations
PUSH S5
NEWC
STU 256
PUSHINT 3
ROT
PUSHINT 64
DICTUSETB
;; push identifier ethereumEventRequiredRejects
PUSH S4
NEWC
STU 256
PUSHINT 4
ROT
PUSHINT 64
DICTUSETB
;; push identifier ethereumEventBlocksToConfirm
PUSH S6
NEWC
STU 256
PUSHINT 5
ROT
PUSHINT 64
DICTUSETB
;; push identifier ethereumEventInitialBalance
PUSH S3
NEWC
STU 128
PUSHINT 6
ROT
PUSHINT 64
DICTUSETB
;; push identifier eventProxyAddress
PUSH S2
PUSHINT 7
ROT
PUSHINT 64
DICTUSET
MYADDR
PUSHINT 8
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
;; get member ethereumEventConfigurationCode
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 0
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; get member ethereumEventConfigurationInitialBalance
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 3
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
NEWC
STSLICECONST x1f73060b
;; _requiredConfirmations
;; get member ethereumEventConfigurationRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 1
STUR 256
;; _requiredRejects
;; get member ethereumEventConfigurationRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 2
STUR 256
;; _ethereumEventCode
;; get member ethereumEventCode
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 4
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: ethereumEventConfigurationAddress
;; ++
; expValue
;; fetch sequentialIndex
GETGLOB 13
DUP
INDEX 0
; end expValue
INC
; colValue
SETINDEX 0
SETGLOB 13
; end colValue
;; emit NewEthereumEventConfiguration
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x4c93c13e
;; addr
;; push identifier ethereumEventConfigurationAddress
PUSH S1
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
;; return
TUPLE 1
SETGLOB 8
; end function addEthereumEventConfiguration
DROP
; end modifier onlyOwnerKey
BLKDROP 7
; end modifier onlyActive
GETGLOB 8
UNTUPLE 1

.globl	confirmEthereumEventConfiguration
.public	confirmEthereumEventConfiguration
.type	confirmEthereumEventConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode ethereumEventConfigurationAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: ethereumEventConfigurationAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmEthereumEventConfiguration
ACCEPT
;; Remote call EthereumEventConfiguration.confirm
;; push identifier ethereumEventConfigurationAddress
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7c5f8264
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEventConfiguration
DROP
; end modifier onlyOwnerKey
DROP
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	confirmEthereumEventConfiguration_internal
.type	confirmEthereumEventConfiguration_internal, @function
;; param: ethereumEventConfigurationAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmEthereumEventConfiguration
ACCEPT
;; Remote call EthereumEventConfiguration.confirm
;; push identifier ethereumEventConfigurationAddress
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7c5f8264
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEventConfiguration
DROP
; end modifier onlyOwnerKey
DROP
; end modifier onlyActive

.globl	rejectEthereumEventConfiguration
.public	rejectEthereumEventConfiguration
.type	rejectEthereumEventConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode ethereumEventConfigurationAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: ethereumEventConfigurationAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function rejectEthereumEventConfiguration
ACCEPT
;; Remote call EthereumEventConfiguration.reject
;; push identifier ethereumEventConfigurationAddress
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x70151477
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEventConfiguration
DROP
; end modifier onlyOwnerKey
DROP
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	rejectEthereumEventConfiguration_internal
.type	rejectEthereumEventConfiguration_internal, @function
;; param: ethereumEventConfigurationAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function rejectEthereumEventConfiguration
ACCEPT
;; Remote call EthereumEventConfiguration.reject
;; push identifier ethereumEventConfigurationAddress
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x70151477
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEventConfiguration
DROP
; end modifier onlyOwnerKey
DROP
; end modifier onlyActive

.globl	confirmEthereumEvent
.public	confirmEthereumEvent
.type	confirmEthereumEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventTransaction
LDREF
; Decode eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventData
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventBlock
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode ethereumEventConfigurationAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: ethereumEventConfigurationAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmEthereumEvent
ACCEPT
;; Remote call EthereumEventConfiguration.confirmEvent
;; push identifier ethereumEventConfigurationAddress
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x460e6e0e
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STREFR
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
;; eventBlock
;; push identifier eventBlock
PUSH S4
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	confirmEthereumEvent_internal
.type	confirmEthereumEvent_internal, @function
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: ethereumEventConfigurationAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmEthereumEvent
ACCEPT
;; Remote call EthereumEventConfiguration.confirmEvent
;; push identifier ethereumEventConfigurationAddress
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x460e6e0e
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STREFR
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
;; eventBlock
;; push identifier eventBlock
PUSH S4
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive

.globl	rejectEthereumEvent
.public	rejectEthereumEvent
.type	rejectEthereumEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventTransaction
LDREF
; Decode eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventData
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventBlock
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode ethereumEventConfigurationAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: ethereumEventConfigurationAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function rejectEthereumEvent
ACCEPT
;; Remote call EthereumEventConfiguration.rejectEvent
;; push identifier ethereumEventConfigurationAddress
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x766e609a
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STREFR
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
;; eventBlock
;; push identifier eventBlock
PUSH S4
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	rejectEthereumEvent_internal
.type	rejectEthereumEvent_internal, @function
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: ethereumEventConfigurationAddress
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 9
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function rejectEthereumEvent
ACCEPT
;; Remote call EthereumEventConfiguration.rejectEvent
;; push identifier ethereumEventConfigurationAddress
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x477359400000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x766e609a
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STREFR
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
;; eventBlock
;; push identifier eventBlock
PUSH S4
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive

.globl	getDetails
.public	getDetails
.type	getDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getDetails
;; ret param: _bridgeConfiguration
NEWC
ENDC
PUSHINT 0
PUSHINT 0
PUSHINT 0
NEWC
ENDC
NEWC
ENDC
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 10
;; ret param: _sequentialIndex
PUSHINT 0
PUSHINT 0
TUPLE 2
;; return
;; push identifier bridgeConfiguration
GETGLOB 12
;; push identifier sequentialIndex
GETGLOB 13
BLKDROP2 2, 2
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xbf6aff03
	PUSH S3
	UNTUPLE 10
	BLKSWAP 1, 10
	PUSH S10
	STREFR
	PUSH S9
	STUR 256
	PUSH S8
	STUR 256
	PUSH S7
	STUR 128
	PUSH S6
	STREFR
	PUSH S5
	STREFR
	PUSH S4
	STUR 256
	NEWC
	PUSH S4
	STUR 256
	PUSH S3
	STUR 128
	PUSH S2
	STIR 1
	BLKDROP2 10, 2
	PUSH S3
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 256
	PUSH S1
	STUR 256
	NIP
	NIP
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function getDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getDetails_internal
.type	getDetails_internal, @function
; function getDetails
;; ret param: _bridgeConfiguration
NEWC
ENDC
PUSHINT 0
PUSHINT 0
PUSHINT 0
NEWC
ENDC
NEWC
ENDC
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 10
;; ret param: _sequentialIndex
PUSHINT 0
PUSHINT 0
TUPLE 2
;; return
;; push identifier bridgeConfiguration
GETGLOB 12
;; push identifier sequentialIndex
GETGLOB 13
BLKDROP2 2, 2
; end function getDetails

.globl	getKeyStatus
.public	getKeyStatus
.type	getKeyStatus, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: key
; function getKeyStatus
;; ret param: _status
PUSHINT 0
ACCEPT
;; return
;; index
;; push identifier key
PUSH S1
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x957003d0
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getKeyStatus
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getKeyStatus_internal
.type	getKeyStatus_internal, @function
;; param: key
; function getKeyStatus
;; ret param: _status
PUSHINT 0
ACCEPT
;; return
;; index
;; push identifier key
PUSH S1
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
; end function getKeyStatus

.globl	_grantOwnership_internal
.type	_grantOwnership_internal, @function
;; param: key
; function _grantOwnership
; expValue
;; fetch ownerKeys
GETGLOB 10
;; push identifier key
PUSH S1
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 10
; end colValue
DROP
; end function _grantOwnership

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
REVERSE 5, 0
STDICT
STU 256
SWAP
UNTUPLE 10
NEWC
NEWC
PUSH S4
STUR 256
PUSH S3
STUR 128
PUSH S2
STIR 1
STBREFR
PUSH S10
STREFR
PUSH S9
STUR 256
PUSH S8
STUR 256
PUSH S7
STUR 128
PUSH S6
STREFR
PUSH S5
STREFR
PUSH S4
STUR 256
XCHG s10
BLKDROP 10
STBREFR
SWAP
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STUR 256
NIP
NIP
STBREFR
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDDICT
LDU 256
LDREFRTOS
LDREF
LDREF
LDU 256
LDU 256
LDU 128
LDREF
LDREF
PLDU 256
BLKSWAP 1, 7
CTOS
LDU 256
LDU 128
PLDI 1
TUPLE 10
SETGLOB 12
LDREFRTOS
NIP
LDU 256
PLDU 256
TUPLE 2
SETGLOB 13
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDDICT
	LDU 256
	LDREFRTOS
	LDREF
	LDREF
	LDU 256
	LDU 256
	LDU 128
	LDREF
	LDREF
	PLDU 256
	BLKSWAP 1, 7
	CTOS
	LDU 256
	LDU 128
	PLDI 1
	TUPLE 10
	SETGLOB 12
	LDREFRTOS
	NIP
	LDU 256
	PLDU 256
	TUPLE 2
	SETGLOB 13
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init truffleNonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 11
	; init bridgeConfiguration
	NEWC
	ENDC
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	NEWC
	ENDC
	NEWC
	ENDC
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	TUPLE 10
	SETGLOB 12
	; init sequentialIndex
	PUSHINT 0
	PUSHINT 0
	TUPLE 2
	SETGLOB 13
	; init ownerKeys
	NEWDICT
	SETGLOB 10
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

