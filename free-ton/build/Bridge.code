.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _relayAccounts
LDU 32
LDDICT
ROTREV
PAIR
SWAP
; Decode _relayEthereumAccounts
LDU 32
LDDICT
ROTREV
PAIR
SWAP
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.nonce
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:7
BLKSWAP 4, 1
TUPLE 4
SWAP
ENDS
;; param: _relayAccounts
;; param: _relayEthereumAccounts
;; param: _bridgeConfiguration
; constructor Bridge
;; push identifier WRONG_TVM_KEY
GETGLOB 25
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
GETGLOB 2
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
EQUAL
THROWANYIFNOT
;; push identifier KEYS_DIFFERENT_SHAPE
GETGLOB 13
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member length
;; push identifier _relayAccounts
PUSH S3
INDEX 0
;; get member length
;; push identifier _relayEthereumAccounts
PUSH S3
INDEX 0
;; ==
EQUAL
THROWANYIFNOT
ACCEPT
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; get member length
	;; push identifier _relayAccounts
	PUSH S4
	INDEX 0
	;; <
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier _relayAccounts
	PUSH S4
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; index
	;; push identifier i
	PUSH S1
	;; push identifier _relayEthereumAccounts
	PUSH S4
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 160
	CALL $_grantOwnership_internal$
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
; end expValue
;; push identifier _bridgeConfiguration
DUP
; colValue
SETGLOB 29
; end colValue
; expValue
;; fetch bridgeConfiguration
GETGLOB 29
; end expValue
TRUE
; colValue
SETINDEX 3
SETGLOB 29
; end colValue
BLKDROP 3
; end constructor Bridge
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	initializeEventConfigurationCreation
.public	initializeEventConfigurationCreation
.type	initializeEventConfigurationCreation, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode _type
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
ENDS
;; param: id
;; param: addr
;; param: _type
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function initializeEventConfigurationCreation
;; push identifier EVENT_CONFIGURATION_ALREADY_EXISTS
GETGLOB 15
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; !
;; map.exists
;; push identifier id
PUSH S5
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
;; get member sender
GETGLOB 9
;; decl: relay
NEWDICT
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
TUPLE 4
;; decl: _eventConfiguration
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S6
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier _type
PUSH S5
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier relay
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
GETGLOB 30
;; push identifier id
PUSH S7
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
XCHG s4
BLKDROP 4
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 30
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x607d1fce
;; id
;; push identifier id
PUSH S7
STUR 256
;; relay
;; push identifier relay
PUSH S2
STSLICER
;; vote
TRUE
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function initializeEventConfigurationCreation
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
BLKDROP 3
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	initializeEventConfigurationCreation_internal
.type	initializeEventConfigurationCreation_internal, @function
;; param: id
;; param: addr
;; param: _type
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function initializeEventConfigurationCreation
;; push identifier EVENT_CONFIGURATION_ALREADY_EXISTS
GETGLOB 15
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; !
;; map.exists
;; push identifier id
PUSH S5
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
;; get member sender
GETGLOB 9
;; decl: relay
NEWDICT
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
TUPLE 4
;; decl: _eventConfiguration
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S6
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier _type
PUSH S5
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier relay
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
GETGLOB 30
;; push identifier id
PUSH S7
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
XCHG s4
BLKDROP 4
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 30
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x607d1fce
;; id
;; push identifier id
PUSH S7
STUR 256
;; relay
;; push identifier relay
PUSH S2
STSLICER
;; vote
TRUE
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function initializeEventConfigurationCreation
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
BLKDROP 3
; end modifier onlyActive

.globl	voteForEventConfigurationCreation
.public	voteForEventConfigurationCreation
.type	voteForEventConfigurationCreation, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode vote
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
ENDS
;; param: id
;; param: vote
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function voteForEventConfigurationCreation
;; push identifier EVENT_CONFIGURATION_NOT_EXISTS
GETGLOB 14
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; map.exists
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
;; index
;; push identifier id
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
}
PUSHCONT {
	NEWDICT
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHINT 0
	TUPLE 4
}
IFELSE
;; decl: _eventConfiguration
; expValue
DUP
DUP
INDEX 0
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier vote
PUSH S6
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
GETGLOB 30
;; push identifier id
PUSH S5
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
XCHG s4
BLKDROP 4
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 30
; end colValue
;; push identifier id
PUSH S4
CALL $getEventConfigurationDetails_internal$
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S3
INDEX 0
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 1
;; >=
GEQ
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier vote
	PUSH S7
	TRUE
	;; ==
	EQUAL
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member status
		;; index
		;; push identifier id
		PUSH S8
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		PLDI 1
		FALSE
		;; ==
		EQUAL
	}
	IF
}
IF
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	GETGLOB 30
	;; push identifier id
	PUSH S9
	SWAP
	PUSH2 S1, S0
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	LDSLICE 1
	NIP
	; end expValue
	TRUE
	; colValue
	SWAP
	REVERSE 4, 0
	NEWC
	STSLICE
	STSLICE
	STI 1
	STSLICE
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 30
	; end colValue
	;; emit EventConfigurationCreationEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x228ee80c
	;; id
	;; push identifier id
	PUSH S9
	STUR 256
	;; active
	TRUE
	STIR 1
	;; addr
	;; get member addr
	;; index
	;; push identifier id
	PUSH S9
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	DROP
	STSLICER
	;; _type
	;; get member _type
	;; index
	;; push identifier id
	PUSH S9
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	;; if
	;; get member length
	;; push identifier rejectRelays
	PUSH S2
	INDEX 0
	;; get member bridgeUpdateRequiredRejects
	;; push identifier bridgeConfiguration
	GETGLOB 29
	INDEX 2
	;; >=
	GEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier vote
		PUSH S7
		FALSE
		;; ==
		EQUAL
	}
	IF
	PUSHCONT {
		;; emit EventConfigurationCreationEnd
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x228ee80c
		;; id
		;; push identifier id
		PUSH S9
		STUR 256
		;; active
		FALSE
		STIR 1
		;; addr
		;; get member addr
		;; index
		;; push identifier id
		PUSH S9
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		STSLICER
		;; _type
		;; get member _type
		;; index
		;; push identifier id
		PUSH S9
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		LDSLICE 1
		NIP
		PLDU 8
		STUR 8
		ENDC
		PUSHINT 1
		SENDRAWMSG
		;; delete
		; expValue
		;; fetch eventConfigurations
		GETGLOB 30
		;; push identifier id
		PUSH S9
		SWAP
		; end expValue
		PUSH S1
		SWAP
		PUSHINT 256
		DICTUDEL
		DROP
		; colValue
		NIP
		SETGLOB 30
		; end colValue
	}
	IF
	;; end if
}
IFELSE
;; end if
BLKDROP 5
; end function voteForEventConfigurationCreation
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	voteForEventConfigurationCreation_internal
.type	voteForEventConfigurationCreation_internal, @function
;; param: id
;; param: vote
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function voteForEventConfigurationCreation
;; push identifier EVENT_CONFIGURATION_NOT_EXISTS
GETGLOB 14
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; map.exists
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
;; index
;; push identifier id
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
}
PUSHCONT {
	NEWDICT
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHINT 0
	TUPLE 4
}
IFELSE
;; decl: _eventConfiguration
; expValue
DUP
DUP
INDEX 0
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier vote
PUSH S6
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
GETGLOB 30
;; push identifier id
PUSH S5
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
XCHG s4
BLKDROP 4
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 30
; end colValue
;; push identifier id
PUSH S4
CALL $getEventConfigurationDetails_internal$
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S3
INDEX 0
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 1
;; >=
GEQ
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier vote
	PUSH S7
	TRUE
	;; ==
	EQUAL
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member status
		;; index
		;; push identifier id
		PUSH S8
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		PLDI 1
		FALSE
		;; ==
		EQUAL
	}
	IF
}
IF
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	GETGLOB 30
	;; push identifier id
	PUSH S9
	SWAP
	PUSH2 S1, S0
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	LDSLICE 1
	NIP
	; end expValue
	TRUE
	; colValue
	SWAP
	REVERSE 4, 0
	NEWC
	STSLICE
	STSLICE
	STI 1
	STSLICE
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 30
	; end colValue
	;; emit EventConfigurationCreationEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x228ee80c
	;; id
	;; push identifier id
	PUSH S9
	STUR 256
	;; active
	TRUE
	STIR 1
	;; addr
	;; get member addr
	;; index
	;; push identifier id
	PUSH S9
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	DROP
	STSLICER
	;; _type
	;; get member _type
	;; index
	;; push identifier id
	PUSH S9
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	;; if
	;; get member length
	;; push identifier rejectRelays
	PUSH S2
	INDEX 0
	;; get member bridgeUpdateRequiredRejects
	;; push identifier bridgeConfiguration
	GETGLOB 29
	INDEX 2
	;; >=
	GEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier vote
		PUSH S7
		FALSE
		;; ==
		EQUAL
	}
	IF
	PUSHCONT {
		;; emit EventConfigurationCreationEnd
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x228ee80c
		;; id
		;; push identifier id
		PUSH S9
		STUR 256
		;; active
		FALSE
		STIR 1
		;; addr
		;; get member addr
		;; index
		;; push identifier id
		PUSH S9
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		STSLICER
		;; _type
		;; get member _type
		;; index
		;; push identifier id
		PUSH S9
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		LDSLICE 1
		NIP
		PLDU 8
		STUR 8
		ENDC
		PUSHINT 1
		SENDRAWMSG
		;; delete
		; expValue
		;; fetch eventConfigurations
		GETGLOB 30
		;; push identifier id
		PUSH S9
		SWAP
		; end expValue
		PUSH S1
		SWAP
		PUSHINT 256
		DICTUDEL
		DROP
		; colValue
		NIP
		SETGLOB 30
		; end colValue
	}
	IF
	;; end if
}
IFELSE
;; end if
BLKDROP 5
; end function voteForEventConfigurationCreation
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive

.globl	getEventConfigurationDetails
.public	getEventConfigurationDetails
.type	getEventConfigurationDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: id
; function getEventConfigurationDetails
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: status
PUSHINT 0
;; get member votes
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S7
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S8
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S7
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member status
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
; colValue
NIP
; end colValue
;; returning named params
BLKSWAP 1, 4
DROP
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xf0eb6ab0
	PUSH S4
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S3
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S2
	STSLICER
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 4
; end function getEventConfigurationDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getEventConfigurationDetails_internal
.type	getEventConfigurationDetails_internal, @function
;; param: id
; function getEventConfigurationDetails
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: status
PUSHINT 0
;; get member votes
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S7
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S8
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S7
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member status
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
; colValue
NIP
; end colValue
;; returning named params
BLKSWAP 1, 4
DROP
; end function getEventConfigurationDetails

.globl	getActiveEventConfigurations
.public	getActiveEventConfigurations
.type	getActiveEventConfigurations, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getActiveEventConfigurations
;; ret param: ids
PUSHINT 0
NEWDICT
PAIR
;; ret param: addrs
PUSHINT 0
NEWDICT
PAIR
;; ret param: _types
PUSHINT 0
NEWDICT
PAIR
;; push identifier eventConfigurations
GETGLOB 30
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; get member status
	;; push identifier configuration
	PUSH S1
	INDEX 2
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier id
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
		; expValue
		PUSH S5
		; end expValue
		;; get member addr
		;; push identifier configuration
		PUSH S2
		INDEX 1
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
		; expValue
		PUSH S4
		; end expValue
		;; get member _type
		;; push identifier configuration
		PUSH S2
		INDEX 3
		;; array.push(..)
		NEWC
		STU 8
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		LDDICT
		LDMSGADDR
		LDI 1
		PLDU 8
		TUPLE 4
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
;; emitting 3 value(s)
PUSH S3
EQINT -1
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb6a4062e
	PUSH S3
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 3
; end function getActiveEventConfigurations
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getActiveEventConfigurations_internal
.type	getActiveEventConfigurations_internal, @function
; function getActiveEventConfigurations
;; ret param: ids
PUSHINT 0
NEWDICT
PAIR
;; ret param: addrs
PUSHINT 0
NEWDICT
PAIR
;; ret param: _types
PUSHINT 0
NEWDICT
PAIR
;; push identifier eventConfigurations
GETGLOB 30
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; get member status
	;; push identifier configuration
	PUSH S1
	INDEX 2
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier id
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
		; expValue
		PUSH S5
		; end expValue
		;; get member addr
		;; push identifier configuration
		PUSH S2
		INDEX 1
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
		; expValue
		PUSH S4
		; end expValue
		;; get member _type
		;; push identifier configuration
		PUSH S2
		INDEX 3
		;; array.push(..)
		NEWC
		STU 8
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		LDDICT
		LDMSGADDR
		LDI 1
		PLDU 8
		TUPLE 4
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
; end function getActiveEventConfigurations

.globl	confirmEthereumEvent
.public	confirmEthereumEvent
.type	confirmEthereumEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventVoteData
;; decode struct EthereumEventVoteData eventVoteData
;; decode EthereumEventVoteData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventVoteData.eventIndex
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode EthereumEventVoteData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode EthereumEventVoteData.eventBlockNumber
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode EthereumEventVoteData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; build struct EthereumEventVoteData ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode configurationID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: eventVoteData
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function confirmEthereumEvent
;; Remote call EthereumEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x53191b33
;; eventVoteData
;; push identifier eventVoteData
PUSH S6
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 256
PUSH S4
STUR 32
PUSH S3
STREFR
PUSH S2
STUR 32
PUSH S1
STUR 256
XCHG s5
BLKDROP 5
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	confirmEthereumEvent_internal
.type	confirmEthereumEvent_internal, @function
;; param: eventVoteData
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function confirmEthereumEvent
;; Remote call EthereumEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x53191b33
;; eventVoteData
;; push identifier eventVoteData
PUSH S6
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 256
PUSH S4
STUR 32
PUSH S3
STREFR
PUSH S2
STUR 32
PUSH S1
STUR 256
XCHG s5
BLKDROP 5
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive

.globl	rejectEthereumEvent
.public	rejectEthereumEvent
.type	rejectEthereumEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventVoteData
;; decode struct EthereumEventVoteData eventVoteData
;; decode EthereumEventVoteData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventVoteData.eventIndex
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode EthereumEventVoteData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode EthereumEventVoteData.eventBlockNumber
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode EthereumEventVoteData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; build struct EthereumEventVoteData ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode configurationID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: eventVoteData
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function rejectEthereumEvent
;; Remote call EthereumEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x33152a59
;; eventVoteData
;; push identifier eventVoteData
PUSH S6
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 256
PUSH S4
STUR 32
PUSH S3
STREFR
PUSH S2
STUR 32
PUSH S1
STUR 256
XCHG s5
BLKDROP 5
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	rejectEthereumEvent_internal
.type	rejectEthereumEvent_internal, @function
;; param: eventVoteData
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function rejectEthereumEvent
;; Remote call EthereumEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x33152a59
;; eventVoteData
;; push identifier eventVoteData
PUSH S6
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 256
PUSH S4
STUR 32
PUSH S3
STREFR
PUSH S2
STUR 32
PUSH S1
STUR 256
XCHG s5
BLKDROP 5
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive

.globl	confirmTonEvent
.public	confirmTonEvent
.type	confirmTonEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventVoteData
;; decode struct TonEventVoteData eventVoteData
;; decode TonEventVoteData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventVoteData.eventTransactionLt
LDUQ 64
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 64
}
IFNOT
;; decode TonEventVoteData.eventIndex
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode TonEventVoteData.eventData
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; build struct TonEventVoteData ss:5
BLKSWAP 4, 1
TUPLE 4
SWAP
; Decode eventDataSignature
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode configurationID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: eventVoteData
;; param: eventDataSignature
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function confirmTonEvent
;; Remote call TonEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x6f18d182
;; eventVoteData
;; push identifier eventVoteData
PUSH S7
UNTUPLE 4
BLKSWAP 1, 4
PUSH S4
STUR 256
PUSH S3
STUR 64
PUSH S2
STUR 32
PUSH S1
STREFR
XCHG s4
BLKDROP 4
;; eventDataSignature
;; push identifier eventDataSignature
PUSH S6
STREFR
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmTonEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
BLKDROP 3
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	confirmTonEvent_internal
.type	confirmTonEvent_internal, @function
;; param: eventVoteData
;; param: eventDataSignature
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function confirmTonEvent
;; Remote call TonEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x6f18d182
;; eventVoteData
;; push identifier eventVoteData
PUSH S7
UNTUPLE 4
BLKSWAP 1, 4
PUSH S4
STUR 256
PUSH S3
STUR 64
PUSH S2
STUR 32
PUSH S1
STREFR
XCHG s4
BLKDROP 4
;; eventDataSignature
;; push identifier eventDataSignature
PUSH S6
STREFR
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmTonEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
BLKDROP 3
; end modifier onlyActive

.globl	rejectTonEvent
.public	rejectTonEvent
.type	rejectTonEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventVoteData
;; decode struct TonEventVoteData eventVoteData
;; decode TonEventVoteData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventVoteData.eventTransactionLt
LDUQ 64
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 64
}
IFNOT
;; decode TonEventVoteData.eventIndex
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode TonEventVoteData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; build struct TonEventVoteData ss:5
BLKSWAP 4, 1
TUPLE 4
SWAP
; Decode configurationID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: eventVoteData
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function rejectTonEvent
;; Remote call TonEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x216f6c96
;; eventVoteData
;; push identifier eventVoteData
PUSH S6
UNTUPLE 4
BLKSWAP 1, 4
PUSH S4
STUR 256
PUSH S3
STUR 64
PUSH S2
STUR 32
PUSH S1
STREFR
XCHG s4
BLKDROP 4
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectTonEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	rejectTonEvent_internal
.type	rejectTonEvent_internal, @function
;; param: eventVoteData
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
TRUE
;; ==
EQUAL
THROWANYIFNOT
; function rejectTonEvent
;; Remote call TonEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x216f6c96
;; eventVoteData
;; push identifier eventVoteData
PUSH S6
UNTUPLE 4
BLKSWAP 1, 4
PUSH S4
STUR 256
PUSH S3
STUR 64
PUSH S2
STUR 32
PUSH S1
STREFR
XCHG s4
BLKDROP 4
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectTonEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive

.globl	getVotingDirection
.public	getVotingDirection
.type	getVotingDirection, @function
; Decode input parameters
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; build struct Vote ss:2
SWAP
TUPLE 1
SWAP
ENDS
;; param: _vote
; function getVotingDirection
;; ret param: vote
PUSHINT 0
;; if
;; get member length
;; get member signature
;; push identifier _vote
PUSH S1
INDEX 0
CTOS
SBITS
RSHIFT 3
EQINT 0
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; returning named params
SWAP
DROP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xdb2c770b
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getVotingDirection
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getVotingDirection_internal
.type	getVotingDirection_internal, @function
;; param: _vote
; function getVotingDirection
;; ret param: vote
PUSHINT 0
;; if
;; get member length
;; get member signature
;; push identifier _vote
PUSH S1
INDEX 0
CTOS
SBITS
RSHIFT 3
EQINT 0
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; returning named params
SWAP
DROP
; end function getVotingDirection

.globl	updateBridgeConfiguration
.public	updateBridgeConfiguration
.type	updateBridgeConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.nonce
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:5
BLKSWAP 4, 1
TUPLE 4
SWAP
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; build struct Vote ss:3
SWAP
TUPLE 1
SWAP
ENDS
;; param: _bridgeConfiguration
;; param: _vote
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function updateBridgeConfiguration
;; emit BridgeConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x1ee7d3b4
;; _bridgeConfiguration
;; push identifier _bridgeConfiguration
PUSH S4
UNTUPLE 4
BLKSWAP 1, 4
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s4
BLKDROP 4
;; relay
;; get member sender
GETGLOB 9
STSLICER
;; vote
;; push identifier _vote
PUSH S3
UNTUPLE 1
SWAP
PUSH S1
STREFR
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S2
CALL $getVotingDirection_internal$
;; decl: vote
; expValue
;; fetch bridgeConfigurationVotes
PUSHINT 32
GETGLOBVAR
;; push identifier _bridgeConfiguration
PUSH S5
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s4
BLKDROP 4
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 49
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier vote
PUSH S4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
NEWC
STDICT
ROTREV
PUSHINT 49
DICTSETB
PUSHINT 32
SETGLOBVAR
; end colValue
;; push identifier _bridgeConfiguration
PUSH S4
CALL $getBridgeConfigurationVotes_internal$
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S1
INDEX 0
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 1
;; ==
EQUAL
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier _bridgeConfiguration
	PUSH S6
	; colValue
	SETGLOB 29
	; end colValue
	;; push identifier _bridgeConfiguration
	PUSH S6
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x26d07d59
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S7
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s4
	BLKDROP 4
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectRelays
DUP
INDEX 0
;; get member bridgeUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 2
;; ==
EQUAL
PUSHCONT {
	;; push identifier _bridgeConfiguration
	PUSH S6
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x26d07d59
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S7
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s4
	BLKDROP 4
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
BLKDROP 3
; end modifier onlyOwnerAddress
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	updateBridgeConfiguration_internal
.type	updateBridgeConfiguration_internal, @function
;; param: _bridgeConfiguration
;; param: _vote
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function updateBridgeConfiguration
;; emit BridgeConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x1ee7d3b4
;; _bridgeConfiguration
;; push identifier _bridgeConfiguration
PUSH S4
UNTUPLE 4
BLKSWAP 1, 4
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s4
BLKDROP 4
;; relay
;; get member sender
GETGLOB 9
STSLICER
;; vote
;; push identifier _vote
PUSH S3
UNTUPLE 1
SWAP
PUSH S1
STREFR
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S2
CALL $getVotingDirection_internal$
;; decl: vote
; expValue
;; fetch bridgeConfigurationVotes
PUSHINT 32
GETGLOBVAR
;; push identifier _bridgeConfiguration
PUSH S5
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s4
BLKDROP 4
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 49
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier vote
PUSH S4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
NEWC
STDICT
ROTREV
PUSHINT 49
DICTSETB
PUSHINT 32
SETGLOBVAR
; end colValue
;; push identifier _bridgeConfiguration
PUSH S4
CALL $getBridgeConfigurationVotes_internal$
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S1
INDEX 0
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 1
;; ==
EQUAL
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier _bridgeConfiguration
	PUSH S6
	; colValue
	SETGLOB 29
	; end colValue
	;; push identifier _bridgeConfiguration
	PUSH S6
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x26d07d59
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S7
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s4
	BLKDROP 4
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectRelays
DUP
INDEX 0
;; get member bridgeUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 2
;; ==
EQUAL
PUSHCONT {
	;; push identifier _bridgeConfiguration
	PUSH S6
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x26d07d59
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S7
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s4
	BLKDROP 4
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
BLKDROP 3
; end modifier onlyOwnerAddress

.globl	_removeBridgeConfigurationVoting_internal
.type	_removeBridgeConfigurationVoting_internal, @function
;; param: _bridgeConfiguration
; function _removeBridgeConfigurationVoting
;; delete
; expValue
;; fetch bridgeConfigurationVotes
PUSHINT 32
GETGLOBVAR
;; push identifier _bridgeConfiguration
PUSH S1
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s4
BLKDROP 4
ENDC
CTOS
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 49
DICTDEL
DROP
; colValue
NIP
PUSHINT 32
SETGLOBVAR
; end colValue
DROP
; end function _removeBridgeConfigurationVoting

.globl	getBridgeConfigurationVotes
.public	getBridgeConfigurationVotes
.type	getBridgeConfigurationVotes, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.nonce
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:5
BLKSWAP 4, 1
TUPLE 4
SWAP
ENDS
;; param: _bridgeConfiguration
; function getBridgeConfigurationVotes
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier _bridgeConfiguration
PUSH S2
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s4
BLKDROP 4
ENDC
CTOS
;; push identifier bridgeConfigurationVotes
PUSHINT 32
GETGLOBVAR
PUSHINT 49
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xf3214726
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function getBridgeConfigurationVotes
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getBridgeConfigurationVotes_internal
.type	getBridgeConfigurationVotes_internal, @function
;; param: _bridgeConfiguration
; function getBridgeConfigurationVotes
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier _bridgeConfiguration
PUSH S2
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s4
BLKDROP 4
ENDC
CTOS
;; push identifier bridgeConfigurationVotes
PUSHINT 32
GETGLOBVAR
PUSHINT 49
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
; end function getBridgeConfigurationVotes

.globl	initializeUpdateEventConfiguration
.public	initializeUpdateEventConfiguration
.type	initializeUpdateEventConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode targetID
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode basicInitData
;; decode struct BasicConfigurationInitData basicInitData
;; decode BasicConfigurationInitData.eventABI
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BasicConfigurationInitData.eventRequiredConfirmations
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode BasicConfigurationInitData.eventRequiredRejects
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode BasicConfigurationInitData.eventCode
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BasicConfigurationInitData.bridgeAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode BasicConfigurationInitData.eventInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; build struct BasicConfigurationInitData ss:10
BLKSWAP 6, 1
TUPLE 6
SWAP
; Decode ethereumInitData
;; decode struct EthereumEventConfigurationInitData ethereumInitData
;; decode EthereumEventConfigurationInitData.eventAddress
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; decode EthereumEventConfigurationInitData.eventBlocksToConfirm
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode EthereumEventConfigurationInitData.proxyAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct EthereumEventConfigurationInitData ss:8
BLKSWAP 3, 1
TUPLE 3
SWAP
; Decode tonInitData
;; decode struct TonEventConfigurationInitData tonInitData
;; decode TonEventConfigurationInitData.eventAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode TonEventConfigurationInitData.proxyAddress
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; build struct TonEventConfigurationInitData ss:8
ROTREV
TUPLE 2
SWAP
ENDS
;; param: id
;; param: targetID
;; param: addr
;; param: basicInitData
;; param: ethereumInitData
;; param: tonInitData
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function initializeUpdateEventConfiguration
;; push identifier EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; !
;; map.exists
;; push identifier id
PUSH S8
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
;; push identifier EVENT_CONFIGURATION_NOT_EXISTS
GETGLOB 14
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; map.exists
;; push identifier targetID
PUSH S7
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
;; get member sender
GETGLOB 9
;; decl: relay
NEWDICT
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 2
TUPLE 6
;; decl: update
; expValue
DUP
; end expValue
;; push identifier targetID
PUSH S9
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S8
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier basicInitData
PUSH S7
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier ethereumInitData
PUSH S6
; colValue
SETINDEX 4
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier tonInitData
PUSH S5
; colValue
SETINDEX 5
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier relay
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 31
;; push identifier id
PUSH S10
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s6
BLKDROP 6
STBREFR
PUSH S2
UNTUPLE 3
NEWC
PUSH S3
STUR 160
PUSH S2
STUR 16
PUSH S1
STSLICER
XCHG s3
BLKDROP 3
STBREFR
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STUR 160
NIP
NIP
STBREFR
XCHG s6
BLKDROP 6
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 31
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x607d1fce
;; id
;; push identifier id
PUSH S10
STUR 256
;; relay
;; push identifier relay
PUSH S2
STSLICER
;; vote
TRUE
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function initializeUpdateEventConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
BLKDROP 6
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	initializeUpdateEventConfiguration_internal
.type	initializeUpdateEventConfiguration_internal, @function
;; param: id
;; param: targetID
;; param: addr
;; param: basicInitData
;; param: ethereumInitData
;; param: tonInitData
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function initializeUpdateEventConfiguration
;; push identifier EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; !
;; map.exists
;; push identifier id
PUSH S8
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
;; push identifier EVENT_CONFIGURATION_NOT_EXISTS
GETGLOB 14
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; map.exists
;; push identifier targetID
PUSH S7
;; push identifier eventConfigurations
GETGLOB 30
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
;; get member sender
GETGLOB 9
;; decl: relay
NEWDICT
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 2
TUPLE 6
;; decl: update
; expValue
DUP
; end expValue
;; push identifier targetID
PUSH S9
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S8
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier basicInitData
PUSH S7
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier ethereumInitData
PUSH S6
; colValue
SETINDEX 4
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier tonInitData
PUSH S5
; colValue
SETINDEX 5
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier relay
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 31
;; push identifier id
PUSH S10
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s6
BLKDROP 6
STBREFR
PUSH S2
UNTUPLE 3
NEWC
PUSH S3
STUR 160
PUSH S2
STUR 16
PUSH S1
STSLICER
XCHG s3
BLKDROP 3
STBREFR
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STUR 160
NIP
NIP
STBREFR
XCHG s6
BLKDROP 6
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 31
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x607d1fce
;; id
;; push identifier id
PUSH S10
STUR 256
;; relay
;; push identifier relay
PUSH S2
STSLICER
;; vote
TRUE
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function initializeUpdateEventConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
BLKDROP 6
; end modifier onlyActive

.globl	voteForUpdateEventConfiguration
.public	voteForUpdateEventConfiguration
.type	voteForUpdateEventConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode vote
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
ENDS
;; param: id
;; param: vote
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function voteForUpdateEventConfiguration
;; push identifier EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
GETGLOB 16
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; map.exists
;; push identifier id
PUSH S4
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
;; get member sender
GETGLOB 9
;; decl: relay
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	LDDICT
	LDU 256
	LDMSGADDR
	LDREFRTOS
	LDREF
	LDU 16
	LDU 16
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 6
	SWAP
	LDREFRTOS
	LDU 160
	LDU 16
	TUPLE 3
	SWAP
	LDREFRTOS
	NIP
	LDMSGADDR
	PLDU 160
	TUPLE 2
	TUPLE 6
}
PUSHCONT {
	NEWDICT
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	NEWC
	ENDC
	PUSHINT 0
	PUSHINT 0
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 6
	PUSHINT 0
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 3
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 2
	TUPLE 6
}
IFELSE
;; decl: update
; expValue
DUP
DUP
INDEX 0
;; push identifier relay
PUSH S3
SWAP
; end expValue
;; push identifier vote
PUSH S7
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 31
;; push identifier id
PUSH S6
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s6
BLKDROP 6
STBREFR
PUSH S2
UNTUPLE 3
NEWC
PUSH S3
STUR 160
PUSH S2
STUR 16
PUSH S1
STSLICER
XCHG s3
BLKDROP 3
STBREFR
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STUR 160
NIP
NIP
STBREFR
XCHG s6
BLKDROP 6
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 31
; end colValue
;; emit EventConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x6dba1d49
;; id
;; push identifier id
PUSH S6
STUR 256
;; relay
;; push identifier relay
PUSH S2
STSLICER
;; vote
;; push identifier vote
PUSH S5
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier id
PUSH S5
CALL $getUpdateEventConfigurationDetails_internal$
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S6
INDEX 0
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 1
;; ==
EQUAL
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	GETGLOB 30
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	SWAP
	PUSH2 S1, S0
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	NIP
	; end expValue
	;; get member addr
	;; push identifier update
	PUSH S11
	INDEX 2
	; colValue
	ROT
	NEWC
	STSLICE
	STSLICE
	STSLICE
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 30
	; end colValue
	;; if
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S7
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	;; get member Ethereum
	PUSHINT 0
	;; ==
	EQUAL
	PUSHCONT {
		;; Remote call EthereumEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x298eed1b
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 6
		BLKSWAP 1, 6
		PUSH S6
		STREFR
		PUSH S5
		STUR 16
		PUSH S4
		STUR 16
		PUSH S3
		STREFR
		PUSH S2
		STSLICER
		PUSH S1
		STUR 128
		XCHG s6
		BLKDROP 6
		;; _initData
		;; get member ethereumInitData
		;; push identifier update
		PUSH S9
		INDEX 4
		UNTUPLE 3
		BLKSWAP 1, 3
		PUSH S3
		STUR 160
		PUSH S2
		STUR 16
		PUSH S1
		STSLICER
		XCHG s3
		BLKDROP 3
		STBREFR
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	PUSHCONT {
		;; Remote call TonEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x412592f4
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 6
		BLKSWAP 1, 6
		PUSH S6
		STREFR
		PUSH S5
		STUR 16
		PUSH S4
		STUR 16
		PUSH S3
		STREFR
		PUSH S2
		STSLICER
		PUSH S1
		STUR 128
		XCHG s6
		BLKDROP 6
		;; _initData
		;; get member tonInitData
		;; push identifier update
		PUSH S9
		INDEX 5
		UNTUPLE 2
		ROT
		PUSH S2
		STSLICER
		PUSH S1
		STUR 160
		NIP
		NIP
		STBREFR
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	IFELSE
	;; end if
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x30358c20
	;; id
	;; push identifier id
	PUSH S13
	STUR 256
	;; active
	TRUE
	STIR 1
	;; addr
	;; get member addr
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	DROP
	STSLICER
	;; _type
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
	;; push identifier id
	PUSH S12
	CALL $_removeUpdateEventConfiguration_internal$
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectRelays
PUSH S5
INDEX 0
;; get member bridgeUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 2
;; ==
EQUAL
PUSHCONT {
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x30358c20
	;; id
	;; push identifier id
	PUSH S13
	STUR 256
	;; active
	FALSE
	STIR 1
	;; addr
	;; get member addr
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	DROP
	STSLICER
	;; _type
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
	;; push identifier id
	PUSH S12
	CALL $_removeUpdateEventConfiguration_internal$
}
IF
;; end if
BLKDROP 9
; end function voteForUpdateEventConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	voteForUpdateEventConfiguration_internal
.type	voteForUpdateEventConfiguration_internal, @function
;; param: id
;; param: vote
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 3
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function voteForUpdateEventConfiguration
;; push identifier EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
GETGLOB 16
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; map.exists
;; push identifier id
PUSH S4
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
;; get member sender
GETGLOB 9
;; decl: relay
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	LDDICT
	LDU 256
	LDMSGADDR
	LDREFRTOS
	LDREF
	LDU 16
	LDU 16
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 6
	SWAP
	LDREFRTOS
	LDU 160
	LDU 16
	TUPLE 3
	SWAP
	LDREFRTOS
	NIP
	LDMSGADDR
	PLDU 160
	TUPLE 2
	TUPLE 6
}
PUSHCONT {
	NEWDICT
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	NEWC
	ENDC
	PUSHINT 0
	PUSHINT 0
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 6
	PUSHINT 0
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 3
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 2
	TUPLE 6
}
IFELSE
;; decl: update
; expValue
DUP
DUP
INDEX 0
;; push identifier relay
PUSH S3
SWAP
; end expValue
;; push identifier vote
PUSH S7
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 31
;; push identifier id
PUSH S6
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s6
BLKDROP 6
STBREFR
PUSH S2
UNTUPLE 3
NEWC
PUSH S3
STUR 160
PUSH S2
STUR 16
PUSH S1
STSLICER
XCHG s3
BLKDROP 3
STBREFR
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STSLICER
PUSH S1
STUR 160
NIP
NIP
STBREFR
XCHG s6
BLKDROP 6
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 31
; end colValue
;; emit EventConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x6dba1d49
;; id
;; push identifier id
PUSH S6
STUR 256
;; relay
;; push identifier relay
PUSH S2
STSLICER
;; vote
;; push identifier vote
PUSH S5
STIR 1
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier id
PUSH S5
CALL $getUpdateEventConfigurationDetails_internal$
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S6
INDEX 0
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 1
;; ==
EQUAL
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	GETGLOB 30
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	SWAP
	PUSH2 S1, S0
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	NIP
	; end expValue
	;; get member addr
	;; push identifier update
	PUSH S11
	INDEX 2
	; colValue
	ROT
	NEWC
	STSLICE
	STSLICE
	STSLICE
	ROTREV
	PUSHINT 256
	DICTUSETB
	SETGLOB 30
	; end colValue
	;; if
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S7
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	;; get member Ethereum
	PUSHINT 0
	;; ==
	EQUAL
	PUSHCONT {
		;; Remote call EthereumEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x298eed1b
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 6
		BLKSWAP 1, 6
		PUSH S6
		STREFR
		PUSH S5
		STUR 16
		PUSH S4
		STUR 16
		PUSH S3
		STREFR
		PUSH S2
		STSLICER
		PUSH S1
		STUR 128
		XCHG s6
		BLKDROP 6
		;; _initData
		;; get member ethereumInitData
		;; push identifier update
		PUSH S9
		INDEX 4
		UNTUPLE 3
		BLKSWAP 1, 3
		PUSH S3
		STUR 160
		PUSH S2
		STUR 16
		PUSH S1
		STSLICER
		XCHG s3
		BLKDROP 3
		STBREFR
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	PUSHCONT {
		;; Remote call TonEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		GETGLOB 30
		PUSHINT 256
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x412592f4
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 6
		BLKSWAP 1, 6
		PUSH S6
		STREFR
		PUSH S5
		STUR 16
		PUSH S4
		STUR 16
		PUSH S3
		STREFR
		PUSH S2
		STSLICER
		PUSH S1
		STUR 128
		XCHG s6
		BLKDROP 6
		;; _initData
		;; get member tonInitData
		;; push identifier update
		PUSH S9
		INDEX 5
		UNTUPLE 2
		ROT
		PUSH S2
		STSLICER
		PUSH S1
		STUR 160
		NIP
		NIP
		STBREFR
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	IFELSE
	;; end if
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x30358c20
	;; id
	;; push identifier id
	PUSH S13
	STUR 256
	;; active
	TRUE
	STIR 1
	;; addr
	;; get member addr
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	DROP
	STSLICER
	;; _type
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
	;; push identifier id
	PUSH S12
	CALL $_removeUpdateEventConfiguration_internal$
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectRelays
PUSH S5
INDEX 0
;; get member bridgeUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 2
;; ==
EQUAL
PUSHCONT {
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x30358c20
	;; id
	;; push identifier id
	PUSH S13
	STUR 256
	;; active
	FALSE
	STIR 1
	;; addr
	;; get member addr
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	DROP
	STSLICER
	;; _type
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	GETGLOB 30
	PUSHINT 256
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
	;; push identifier id
	PUSH S12
	CALL $_removeUpdateEventConfiguration_internal$
}
IF
;; end if
BLKDROP 9
; end function voteForUpdateEventConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2
; end modifier onlyActive

.globl	getUpdateEventConfigurationDetails
.public	getUpdateEventConfigurationDetails
.type	getUpdateEventConfigurationDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode id
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: id
; function getUpdateEventConfigurationDetails
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: targetID
PUSHINT 0
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: basicInitData
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
;; ret param: ethereumInitData
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
;; ret param: tonInitData
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 2
;; get member votes
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S10
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S11
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S9
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S10
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member basicInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
LDREFRTOS
NIP
LDREF
LDU 16
LDU 16
LDREF
LDMSGADDR
PLDU 128
TUPLE 6
; colValue
POP S3
; end colValue
; expValue
; end expValue
;; get member ethereumInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
LDREF
NIP
LDREFRTOS
NIP
LDU 160
LDU 16
TUPLE 3
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member tonInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
PUSHINT 0
PUSHINT 2
SSKIPFIRST
LDREFRTOS
NIP
LDMSGADDR
PLDU 160
TUPLE 2
; colValue
NIP
; end colValue
; expValue
; end expValue
;; get member targetID
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
PLDU 256
; colValue
POP S5
; end colValue
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
DROP
; colValue
POP S4
; end colValue
;; returning named params
BLKSWAP 1, 7
DROP
;; emitting 7 value(s)
PUSH S7
EQINT -1
PUSHCONT {
	PUSH S9
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x9fd82e58
	PUSH S8
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S7
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S6
	STUR 256
	PUSH S5
	STSLICER
	PUSH S4
	UNTUPLE 6
	BLKSWAP 1, 6
	PUSH S6
	STREFR
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	NEWC
	PUSH S4
	STREFR
	PUSH S3
	STSLICER
	PUSH S2
	STUR 128
	BLKDROP2 6, 2
	PUSH S4
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STUR 160
	PUSH S2
	STUR 16
	PUSH S1
	STSLICER
	XCHG s3
	BLKDROP 3
	PUSH S3
	UNTUPLE 2
	ROT
	NEWC
	PUSH S3
	STSLICER
	PUSH S2
	STUR 160
	BLKDROP2 2, 2
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 7
; end function getUpdateEventConfigurationDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getUpdateEventConfigurationDetails_internal
.type	getUpdateEventConfigurationDetails_internal, @function
;; param: id
; function getUpdateEventConfigurationDetails
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: targetID
PUSHINT 0
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: basicInitData
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
;; ret param: ethereumInitData
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
;; ret param: tonInitData
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 2
;; get member votes
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S10
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S11
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S9
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S10
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member basicInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
LDREFRTOS
NIP
LDREF
LDU 16
LDU 16
LDREF
LDMSGADDR
PLDU 128
TUPLE 6
; colValue
POP S3
; end colValue
; expValue
; end expValue
;; get member ethereumInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
LDREF
NIP
LDREFRTOS
NIP
LDU 160
LDU 16
TUPLE 3
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member tonInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
NIP
PUSHINT 0
PUSHINT 2
SSKIPFIRST
LDREFRTOS
NIP
LDMSGADDR
PLDU 160
TUPLE 2
; colValue
NIP
; end colValue
; expValue
; end expValue
;; get member targetID
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
PLDU 256
; colValue
POP S5
; end colValue
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
GETGLOB 31
PUSHINT 256
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 257
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 160
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 256
NIP
LDMSGADDR
DROP
; colValue
POP S4
; end colValue
;; returning named params
BLKSWAP 1, 7
DROP
; end function getUpdateEventConfigurationDetails

.globl	_removeUpdateEventConfiguration_internal
.type	_removeUpdateEventConfiguration_internal, @function
;; param: id
; function _removeUpdateEventConfiguration
;; delete
; expValue
;; fetch eventConfigurationsUpdate
GETGLOB 31
;; push identifier id
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 256
DICTUDEL
DROP
; colValue
NIP
SETGLOB 31
; end colValue
DROP
; end function _removeUpdateEventConfiguration

.globl	updateBridgeRelays
.public	updateBridgeRelays
.type	updateBridgeRelays, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode target
;; decode struct BridgeRelay target
;; decode BridgeRelay.nonce
LDU 16
;; decode BridgeRelay.wid
LDI 8
;; decode BridgeRelay.addr
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeRelay.ethereumAccount
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; decode BridgeRelay.action
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeRelay ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; build struct Vote ss:3
SWAP
TUPLE 1
SWAP
ENDS
;; param: target
;; param: _vote
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function updateBridgeRelays
;; emit BridgeRelaysUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x449e79c3
;; target
;; push identifier target
PUSH S4
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
XCHG s5
BLKDROP 5
;; relay
;; get member sender
GETGLOB 9
STSLICER
;; vote
;; push identifier _vote
PUSH S3
UNTUPLE 1
SWAP
PUSH S1
STREFR
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S2
CALL $getVotingDirection_internal$
;; decl: vote
; expValue
;; fetch bridgeRelayVotes
PUSHINT 33
GETGLOBVAR
;; push identifier target
PUSH S5
UNTUPLE 5
NEWC
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
XCHG s5
BLKDROP 5
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 441
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier vote
PUSH S4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
NEWC
STDICT
ROTREV
PUSHINT 441
DICTSETB
PUSHINT 33
SETGLOBVAR
; end colValue
;; push identifier target
PUSH S4
CALL $getBridgeRelayVotes_internal$
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S1
INDEX 0
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 1
;; ==
EQUAL
PUSHCONT {
	;; address.makeAddrStd()
	;; get member addr
	;; push identifier target
	PUSH S6
	INDEX 2
	;; get member wid
	;; push identifier target
	PUSH S7
	INDEX 1
	NEWC
	STSLICECONST x9_
	STI 8
	STU 256
	ENDC
	CTOS
	;; decl: targetAccount
	;; if
	;; get member action
	;; push identifier target
	PUSH S7
	INDEX 4
	PUSHCONT {
		;; push identifier targetAccount
		DUP
		;; get member ethereumAccount
		;; push identifier target
		PUSH S8
		INDEX 3
		CALL $_grantOwnership_internal$
	}
	PUSHCONT {
		;; push identifier targetAccount
		DUP
		CALL $_removeOwnership_internal$
	}
	IFELSE
	;; end if
	;; push identifier target
	PUSH S7
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x41fc51a0
	;; target
	;; push identifier target
	PUSH S8
	UNTUPLE 5
	BLKSWAP 1, 5
	PUSH S5
	STUR 16
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 160
	PUSH S1
	STIR 1
	XCHG s5
	BLKDROP 5
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
	DROP
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectRelays
DUP
INDEX 0
;; get member bridgeUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 2
;; ==
EQUAL
PUSHCONT {
	;; push identifier target
	PUSH S6
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x41fc51a0
	;; target
	;; push identifier target
	PUSH S7
	UNTUPLE 5
	BLKSWAP 1, 5
	PUSH S5
	STUR 16
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 160
	PUSH S1
	STIR 1
	XCHG s5
	BLKDROP 5
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeRelays
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
BLKDROP 3
; end modifier onlyOwnerAddress
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	updateBridgeRelays_internal
.type	updateBridgeRelays_internal, @function
;; param: target
;; param: _vote
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function updateBridgeRelays
;; emit BridgeRelaysUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x449e79c3
;; target
;; push identifier target
PUSH S4
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
XCHG s5
BLKDROP 5
;; relay
;; get member sender
GETGLOB 9
STSLICER
;; vote
;; push identifier _vote
PUSH S3
UNTUPLE 1
SWAP
PUSH S1
STREFR
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S2
CALL $getVotingDirection_internal$
;; decl: vote
; expValue
;; fetch bridgeRelayVotes
PUSHINT 33
GETGLOBVAR
;; push identifier target
PUSH S5
UNTUPLE 5
NEWC
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
XCHG s5
BLKDROP 5
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 441
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier vote
PUSH S4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
NEWC
STDICT
ROTREV
PUSHINT 441
DICTSETB
PUSHINT 33
SETGLOBVAR
; end colValue
;; push identifier target
PUSH S4
CALL $getBridgeRelayVotes_internal$
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S1
INDEX 0
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 1
;; ==
EQUAL
PUSHCONT {
	;; address.makeAddrStd()
	;; get member addr
	;; push identifier target
	PUSH S6
	INDEX 2
	;; get member wid
	;; push identifier target
	PUSH S7
	INDEX 1
	NEWC
	STSLICECONST x9_
	STI 8
	STU 256
	ENDC
	CTOS
	;; decl: targetAccount
	;; if
	;; get member action
	;; push identifier target
	PUSH S7
	INDEX 4
	PUSHCONT {
		;; push identifier targetAccount
		DUP
		;; get member ethereumAccount
		;; push identifier target
		PUSH S8
		INDEX 3
		CALL $_grantOwnership_internal$
	}
	PUSHCONT {
		;; push identifier targetAccount
		DUP
		CALL $_removeOwnership_internal$
	}
	IFELSE
	;; end if
	;; push identifier target
	PUSH S7
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x41fc51a0
	;; target
	;; push identifier target
	PUSH S8
	UNTUPLE 5
	BLKSWAP 1, 5
	PUSH S5
	STUR 16
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 160
	PUSH S1
	STIR 1
	XCHG s5
	BLKDROP 5
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
	DROP
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectRelays
DUP
INDEX 0
;; get member bridgeUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 29
INDEX 2
;; ==
EQUAL
PUSHCONT {
	;; push identifier target
	PUSH S6
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x41fc51a0
	;; target
	;; push identifier target
	PUSH S7
	UNTUPLE 5
	BLKSWAP 1, 5
	PUSH S5
	STUR 16
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 160
	PUSH S1
	STIR 1
	XCHG s5
	BLKDROP 5
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeRelays
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
BLKDROP 3
; end modifier onlyOwnerAddress

.globl	getBridgeRelayVotes
.public	getBridgeRelayVotes
.type	getBridgeRelayVotes, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode target
;; decode struct BridgeRelay target
;; decode BridgeRelay.nonce
LDU 16
;; decode BridgeRelay.wid
LDI 8
;; decode BridgeRelay.addr
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeRelay.ethereumAccount
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; decode BridgeRelay.action
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeRelay ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
ENDS
;; param: target
; function getBridgeRelayVotes
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier target
PUSH S2
UNTUPLE 5
NEWC
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
XCHG s5
BLKDROP 5
ENDC
CTOS
;; push identifier bridgeRelayVotes
PUSHINT 33
GETGLOBVAR
PUSHINT 441
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb812482d
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function getBridgeRelayVotes
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getBridgeRelayVotes_internal
.type	getBridgeRelayVotes_internal, @function
;; param: target
; function getBridgeRelayVotes
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier target
PUSH S2
UNTUPLE 5
NEWC
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
XCHG s5
BLKDROP 5
ENDC
CTOS
;; push identifier bridgeRelayVotes
PUSHINT 33
GETGLOBVAR
PUSHINT 441
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
; end function getBridgeRelayVotes

.globl	_removeBridgeRelayVoting_internal
.type	_removeBridgeRelayVoting_internal, @function
;; param: target
; function _removeBridgeRelayVoting
;; delete
; expValue
;; fetch bridgeRelayVotes
PUSHINT 33
GETGLOBVAR
;; push identifier target
PUSH S1
UNTUPLE 5
NEWC
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
XCHG s5
BLKDROP 5
ENDC
CTOS
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 441
DICTDEL
DROP
; colValue
NIP
PUSHINT 33
SETGLOBVAR
; end colValue
DROP
; end function _removeBridgeRelayVoting

.globl	getDetails
.public	getDetails
.type	getDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getDetails
;; ret param: _bridgeConfiguration
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 4
;; return
;; push identifier bridgeConfiguration
GETGLOB 29
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xdb2f0d90
	PUSH S1
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s4
	BLKDROP 4
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getDetails_internal
.type	getDetails_internal, @function
; function getDetails
;; ret param: _bridgeConfiguration
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 4
;; return
;; push identifier bridgeConfiguration
GETGLOB 29
NIP
; end function getDetails

.globl	transferAll
.public	transferAll
.type	transferAll, @function
; Decode input parameters
; Decode receiver
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: receiver
; function transferAll
ACCEPT
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function transferAll
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	transferAll_internal
.type	transferAll_internal, @function
;; param: receiver
; function transferAll
ACCEPT
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function transferAll

.globl	transfer
.public	transfer
.type	transfer, @function
; Decode input parameters
; Decode receiver
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: receiver
; function transfer
ACCEPT
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function transfer
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	transfer_internal
.type	transfer_internal, @function
;; param: receiver
; function transfer
ACCEPT
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function transfer

.globl	getAccountStatus
.public	getAccountStatus
.type	getAccountStatus, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: addr
; function getAccountStatus
;; ret param: _status
PUSHINT 0
;; return
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xc862288c
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getAccountStatus
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getAccountStatus_internal
.type	getAccountStatus_internal, @function
;; param: addr
; function getAccountStatus
;; ret param: _status
PUSHINT 0
;; return
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 26
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
; end function getAccountStatus

.globl	getEthereumAccount
.public	getEthereumAccount
.type	getEthereumAccount, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: addr
; function getEthereumAccount
;; ret param: ethereumAccount
PUSHINT 0
;; return
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerEthereumAccounts
GETGLOB 27
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 160
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbd88ea00
	PUSH S1
	STUR 160
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getEthereumAccount
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getEthereumAccount_internal
.type	getEthereumAccount_internal, @function
;; param: addr
; function getEthereumAccount
;; ret param: ethereumAccount
PUSHINT 0
;; return
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerEthereumAccounts
GETGLOB 27
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 160
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
; end function getEthereumAccount

.globl	_grantOwnership_internal
.type	_grantOwnership_internal, @function
;; param: addr
;; param: ethereumAccount
; function _grantOwnership
; expValue
;; fetch ownerAccounts
GETGLOB 26
;; push identifier addr
PUSH S2
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 26
; end colValue
; expValue
;; fetch ownerEthereumAccounts
GETGLOB 27
;; push identifier addr
PUSH S2
SWAP
; end expValue
;; push identifier ethereumAccount
PUSH S2
; colValue
NEWC
STU 160
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 27
; end colValue
;; emit OwnershipGranted
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x107857aa
;; addr
;; push identifier addr
PUSH S2
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function _grantOwnership

.globl	_removeOwnership_internal
.type	_removeOwnership_internal, @function
;; param: addr
; function _removeOwnership
;; delete
; expValue
;; fetch ownerAccounts
GETGLOB 26
;; push identifier addr
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 267
DICTDEL
DROP
; colValue
NIP
SETGLOB 26
; end colValue
;; delete
; expValue
;; fetch ownerEthereumAccounts
GETGLOB 27
;; push identifier addr
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 267
DICTDEL
DROP
; colValue
NIP
SETGLOB 27
; end colValue
;; emit OwnershipRemoved
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x461ab0ce
;; addr
;; push identifier addr
PUSH S1
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP
; end function _removeOwnership

.globl	getAccounts
.public	getAccounts
.type	getAccounts, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getAccounts
;; ret param: accounts
PUSHINT 0
NEWDICT
PAIR
;; ret param: ethereumAccounts
PUSHINT 0
NEWDICT
PAIR
;; push identifier ownerAccounts
GETGLOB 26
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier status
	PUSH S1
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier addr
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
		; expValue
		PUSH S4
		; end expValue
		;; index
		;; push identifier addr
		PUSH S3
		;; push identifier ownerEthereumAccounts
		GETGLOB 27
		PUSHINT 267
		DICTGET
		PUSHCONT {
			PLDU 160
		}
		PUSHCONT {
			PUSHINT 0
		}
		IFELSE
		;; array.push(..)
		NEWC
		STU 160
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbdf10e72
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function getAccounts
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getAccounts_internal
.type	getAccounts_internal, @function
; function getAccounts
;; ret param: accounts
PUSHINT 0
NEWDICT
PAIR
;; ret param: ethereumAccounts
PUSHINT 0
NEWDICT
PAIR
;; push identifier ownerAccounts
GETGLOB 26
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier status
	PUSH S1
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier addr
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
		; expValue
		PUSH S4
		; end expValue
		;; index
		;; push identifier addr
		PUSH S3
		;; push identifier ownerEthereumAccounts
		GETGLOB 27
		PUSHINT 267
		DICTGET
		PUSHCONT {
			PLDU 160
		}
		PUSHCONT {
			PUSHINT 0
		}
		IFELSE
		;; array.push(..)
		NEWC
		STU 160
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
; end function getAccounts

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 29
GETGLOB 30
GETGLOB 31
PUSHINT 33
GETGLOBVAR
REVERSE 5, 0
SWAP
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s4
BLKDROP 4
STBREFR
STDICT
STDICT
STDICT
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 15
GETGLOB 16
GETGLOB 17
GETGLOB 18
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 22
GETGLOB 23
GETGLOB 24
GETGLOB 25
GETGLOB 26
GETGLOB 27
GETGLOB 28
PUSHINT 32
GETGLOBVAR
PUSHINT 22
PUSHINT 0
REVX
STBREF
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STDICT
STDICT
STU 16
STDICT
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDREFRTOS
LDU 16
LDU 16
LDU 16
PLDI 1
TUPLE 4
SETGLOB 29
LDDICT
LDDICT
PLDDICT
PUSHINT 33
SETGLOBVAR
SETGLOB 31
SETGLOB 30
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDDICT
LDDICT
LDU 16
PLDDICT
PUSHINT 32
SETGLOBVAR
SETGLOB 28
SETGLOB 27
SETGLOB 26
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDREFRTOS
	LDU 16
	LDU 16
	LDU 16
	PLDI 1
	TUPLE 4
	SETGLOB 29
	LDDICT
	LDDICT
	PLDDICT
	PUSHINT 33
	SETGLOBVAR
	SETGLOB 31
	SETGLOB 30
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDDICT
	LDDICT
	LDU 16
	PLDDICT
	PUSHINT 32
	SETGLOBVAR
	SETGLOB 28
	SETGLOB 27
	SETGLOB 26
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _randomNonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 28
	; init bridgeConfiguration
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	TUPLE 4
	SETGLOB 29
	; init eventConfigurations
	NEWDICT
	SETGLOB 30
	; init eventConfigurationsUpdate
	NEWDICT
	SETGLOB 31
	; init bridgeConfigurationVotes
	NEWDICT
	PUSHINT 32
	SETGLOBVAR
	; init bridgeRelayVotes
	NEWDICT
	PUSHINT 33
	SETGLOBVAR
	; init ownerAccounts
	NEWDICT
	SETGLOB 26
	; init ownerEthereumAccounts
	NEWDICT
	SETGLOB 27
	; init ADDRESS_IS_NOT_OWNER
	PUSHINT 0
	SETGLOB 10
	; init BRIDGE_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 11
	; init EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 12
	; init KEYS_DIFFERENT_SHAPE
	PUSHINT 0
	SETGLOB 13
	; init EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 0
	SETGLOB 14
	; init EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 15
	; init EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 0
	SETGLOB 16
	; init EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 17
	; init SENDER_NOT_BRIDGE
	PUSHINT 0
	SETGLOB 18
	; init EVENT_NOT_IN_PROGRESS
	PUSHINT 0
	SETGLOB 19
	; init SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 0
	SETGLOB 20
	; init KEY_ALREADY_CONFIRMED
	PUSHINT 0
	SETGLOB 21
	; init KEY_ALREADY_REJECTED
	PUSHINT 0
	SETGLOB 22
	; init EVENT_NOT_CONFIRMED
	PUSHINT 0
	SETGLOB 23
	; init TOO_LOW_MSG_VALUE
	PUSHINT 0
	SETGLOB 24
	; init WRONG_TVM_KEY
	PUSHINT 0
	SETGLOB 25
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: ADDRESS_IS_NOT_OWNER
	PUSHINT 5001
	SETGLOB 10
	;; init state var: BRIDGE_NOT_ACTIVE
	PUSHINT 5002
	SETGLOB 11
	;; init state var: EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 5003
	SETGLOB 12
	;; init state var: KEYS_DIFFERENT_SHAPE
	PUSHINT 5004
	SETGLOB 13
	;; init state var: EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 5005
	SETGLOB 14
	;; init state var: EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 5006
	SETGLOB 15
	;; init state var: EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 5007
	SETGLOB 16
	;; init state var: EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 5008
	SETGLOB 17
	;; init state var: SENDER_NOT_BRIDGE
	PUSHINT 5101
	SETGLOB 18
	;; init state var: EVENT_NOT_IN_PROGRESS
	PUSHINT 5201
	SETGLOB 19
	;; init state var: SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 5202
	SETGLOB 20
	;; init state var: KEY_ALREADY_CONFIRMED
	PUSHINT 5203
	SETGLOB 21
	;; init state var: KEY_ALREADY_REJECTED
	PUSHINT 5204
	SETGLOB 22
	;; init state var: EVENT_NOT_CONFIRMED
	PUSHINT 5205
	SETGLOB 23
	;; init state var: TOO_LOW_MSG_VALUE
	PUSHINT 5206
	SETGLOB 24
	;; init state var: WRONG_TVM_KEY
	PUSHINT 5301
	SETGLOB 25
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

