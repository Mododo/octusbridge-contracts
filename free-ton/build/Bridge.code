.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _relayAccounts
LDU 32
LDDICT
ROTREV
PAIR
SWAP
; Decode _relayEthereumAccounts
LDU 32
LDDICT
ROTREV
PAIR
SWAP
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.nonce
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:7
BLKSWAP 4, 1
TUPLE 4
SWAP
ENDS
;; param: _relayAccounts
;; param: _relayEthereumAccounts
;; param: _bridgeConfiguration
; constructor Bridge
;; push identifier WRONG_TVM_KEY
GETGLOB 27
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWANYIFNOT
;; push identifier KEYS_DIFFERENT_SHAPE
GETGLOB 13
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member length
;; push identifier _relayAccounts
PUSH S3
INDEX 0
;; ==
;; get member length
;; push identifier _relayEthereumAccounts
PUSH S3
INDEX 0
EQUAL
THROWANYIFNOT
ACCEPT
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; <
	;; get member length
	;; push identifier _relayAccounts
	PUSH S4
	INDEX 0
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier _relayAccounts
	PUSH S4
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	;; index
	;; push identifier i
	PUSH S1
	;; push identifier _relayEthereumAccounts
	PUSH S4
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 160
	CALLREF {
		CALL $_grantOwnership_internal_macro$
	}
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
; end expValue
;; push identifier _bridgeConfiguration
DUP
; colValue
SETGLOB 31
; end colValue
; expValue
;; fetch bridgeConfiguration
GETGLOB 31
; end expValue
TRUE
; colValue
SETINDEX 3
SETGLOB 31
; end colValue
; end constructor Bridge
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro initializeEventConfigurationCreation
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 32
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode _type
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
ENDS
;; param: id
;; param: addr
;; param: _type
CALLREF {
	CALL $initializeEventConfigurationCreation_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	initializeEventConfigurationCreation_internal
.type	initializeEventConfigurationCreation_internal, @function
CALL $initializeEventConfigurationCreation_internal_macro$

.macro initializeEventConfigurationCreation_internal_macro
;; param: id
;; param: addr
;; param: _type
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 3
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function initializeEventConfigurationCreation
;; push identifier EVENT_CONFIGURATION_ALREADY_EXISTS
GETGLOB 15
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; !
;; map.exists
;; push identifier id
PUSH S5
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
;; get member sender
GETGLOB 9
;; decl: relay
NEWDICT
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
TUPLE 4
;; decl: _eventConfiguration
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S6
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier _type
PUSH S5
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier relay
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
PUSHINT 32
GETGLOBVAR
;; push identifier id
PUSH S7
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
BLKDROP2 4, 1
ROTREV
PUSHINT 32
DICTUSETB
PUSHINT 32
SETGLOBVAR
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x01c42c86
;; id
;; push identifier id
PUSH S7
STUR 32
;; relay
;; push identifier relay
PUSH S2
STSLICER
;; vote
TRUE
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
DROP2
; end function initializeEventConfigurationCreation
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
; end modifier onlyActive
BLKDROP 3

.macro voteForEventConfigurationCreation
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 32
; Decode vote
LDI 1
ENDS
;; param: id
;; param: vote
CALLREF {
	CALL $voteForEventConfigurationCreation_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	voteForEventConfigurationCreation_internal
.type	voteForEventConfigurationCreation_internal, @function
CALL $voteForEventConfigurationCreation_internal_macro$

.macro voteForEventConfigurationCreation_internal_macro
;; param: id
;; param: vote
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 3
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function voteForEventConfigurationCreation
;; push identifier EVENT_CONFIGURATION_NOT_EXISTS
GETGLOB 14
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; map.exists
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
;; index
;; push identifier id
PUSH S3
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
}
PUSHCONT {
	NEWDICT
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHINT 0
	TUPLE 4
}
IFELSE
;; decl: _eventConfiguration
; expValue
DUP
DUP
INDEX 0
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier vote
PUSH S6
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurations
PUSHINT 32
GETGLOBVAR
;; push identifier id
PUSH S5
SWAP
; end expValue
;; push identifier _eventConfiguration
PUSH S2
; colValue
UNTUPLE 4
NEWC
PUSH S4
SWAP
STDICT
PUSH S3
STSLICER
PUSH S2
STIR 1
PUSH S1
STUR 8
BLKDROP2 4, 1
ROTREV
PUSHINT 32
DICTUSETB
PUSHINT 32
SETGLOBVAR
; end colValue
;; push identifier id
PUSH S4
CALLREF {
	CALL $getEventConfigurationDetails_internal_macro$
}
BLKSWAP 3, 1
BLKSWAP 3, 1
BLKSWAP 3, 1
BLKSWAP 3, 1
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S3
INDEX 0
;; >=
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 1
GEQ
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier vote
	PUSH S7
	;; ==
	TRUE
	EQUAL
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member status
		;; index
		;; push identifier id
		PUSH S8
		;; push identifier eventConfigurations
		PUSHINT 32
		GETGLOBVAR
		PUSHINT 32
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		PLDI 1
		;; ==
		FALSE
		EQUAL
	}
	IF
}
IF
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	PUSHINT 32
	GETGLOBVAR
	;; push identifier id
	PUSH S9
	SWAP
	PUSH2 S1, S0
	PUSHINT 32
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	LDSLICE 1
	NIP
	; end expValue
	TRUE
	; colValue
	SWAP
	REVERSE 4, 0
	NEWC
	STSLICE
	STSLICE
	STI 1
	STSLICE
	ROTREV
	PUSHINT 32
	DICTUSETB
	PUSHINT 32
	SETGLOBVAR
	; end colValue
	;; emit EventConfigurationCreationEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x7e2e3ce8
	;; id
	;; push identifier id
	PUSH S9
	STUR 32
	;; active
	TRUE
	STIR 1
	;; addr
	;; get member addr
	;; index
	;; push identifier id
	PUSH S9
	;; push identifier eventConfigurations
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 32
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	DROP
	STSLICER
	;; _type
	;; get member _type
	;; index
	;; push identifier id
	PUSH S9
	;; push identifier eventConfigurations
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 32
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	;; if
	;; get member length
	;; push identifier rejectRelays
	PUSH S2
	INDEX 0
	;; >=
	;; get member bridgeUpdateRequiredRejects
	;; push identifier bridgeConfiguration
	GETGLOB 31
	INDEX 2
	GEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier vote
		PUSH S7
		;; ==
		FALSE
		EQUAL
	}
	IF
	PUSHCONT {
		;; emit EventConfigurationCreationEnd
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x7e2e3ce8
		;; id
		;; push identifier id
		PUSH S9
		STUR 32
		;; active
		FALSE
		STIR 1
		;; addr
		;; get member addr
		;; index
		;; push identifier id
		PUSH S9
		;; push identifier eventConfigurations
		PUSHINT 32
		GETGLOBVAR
		PUSHINT 32
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		STSLICER
		;; _type
		;; get member _type
		;; index
		;; push identifier id
		PUSH S9
		;; push identifier eventConfigurations
		PUSHINT 32
		GETGLOBVAR
		PUSHINT 32
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		NIP
		LDSLICE 1
		NIP
		PLDU 8
		STUR 8
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; delete
		; expValue
		;; fetch eventConfigurations
		PUSHINT 32
		GETGLOBVAR
		;; push identifier id
		PUSH S9
		SWAP
		; end expValue
		PUSH S1
		SWAP
		PUSHINT 32
		DICTUDEL
		DROP
		; colValue
		NIP
		PUSHINT 32
		SETGLOBVAR
		; end colValue
	}
	IF
	;; end if
}
IFELSE
;; end if
BLKDROP 5
; end function voteForEventConfigurationCreation
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
; end modifier onlyActive
DROP2

.macro getEventConfigurationDetails
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 32
ENDS
;; param: id
CALLREF {
	CALL $getEventConfigurationDetails_internal_macro$
}
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xec9e9835
	PUSH S4
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S3
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S2
	STSLICER
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 4
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getEventConfigurationDetails_internal
.type	getEventConfigurationDetails_internal, @function
CALL $getEventConfigurationDetails_internal_macro$

.macro getEventConfigurationDetails_internal_macro
;; param: id
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: status
PUSHINT 0
; function getEventConfigurationDetails
;; get member votes
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	;; ==
	TRUE
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S7
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S8
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S7
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member status
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
; colValue
NIP
; end colValue
; end function getEventConfigurationDetails
BLKDROP2 1, 4

.macro getActiveEventConfigurations
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getActiveEventConfigurations_internal_macro$
}
;; emitting 3 value(s)
PUSH S3
EQINT -1
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xc935abd2
	PUSH S3
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 3
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getActiveEventConfigurations_internal
.type	getActiveEventConfigurations_internal, @function
CALL $getActiveEventConfigurations_internal_macro$

.macro getActiveEventConfigurations_internal_macro
;; ret param: ids
PUSHINT 0
NEWDICT
PAIR
;; ret param: addrs
PUSHINT 0
NEWDICT
PAIR
;; ret param: _types
PUSHINT 0
NEWDICT
PAIR
; function getActiveEventConfigurations
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
DUP
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; get member status
	;; push identifier configuration
	PUSH S1
	INDEX 2
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier id
		PUSH S3
		;; array.push(..)
		NEWC
		STU 32
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
		; expValue
		PUSH S5
		; end expValue
		;; get member addr
		;; push identifier configuration
		PUSH S2
		INDEX 1
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
		; expValue
		PUSH S4
		; end expValue
		;; get member _type
		;; push identifier configuration
		PUSH S2
		INDEX 3
		;; array.push(..)
		NEWC
		STU 8
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		LDDICT
		LDMSGADDR
		LDI 1
		PLDU 8
		TUPLE 4
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; end function getActiveEventConfigurations

.macro getEventConfigurations
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getEventConfigurations_internal_macro$
}
;; emitting 4 value(s)
PUSH S4
EQINT -1
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xbb62ff1b
	PUSH S5
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S4
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S3
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	NEWC
	PUSH S3
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 4
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getEventConfigurations_internal
.type	getEventConfigurations_internal, @function
CALL $getEventConfigurations_internal_macro$

.macro getEventConfigurations_internal_macro
;; ret param: ids
PUSHINT 0
NEWDICT
PAIR
;; ret param: addrs
PUSHINT 0
NEWDICT
PAIR
;; ret param: statuses
PUSHINT 0
NEWDICT
PAIR
;; ret param: _types
PUSHINT 0
NEWDICT
PAIR
; function getEventConfigurations
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
DUP
PUSHINT 32
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	LDDICT
	LDMSGADDR
	LDI 1
	PLDU 8
	TUPLE 4
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	; expValue
	PUSH S7
	; end expValue
	;; push identifier id
	PUSH S3
	;; array.push(..)
	NEWC
	STU 32
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S8
	; end colValue
	; expValue
	PUSH S6
	; end expValue
	;; get member addr
	;; push identifier configuration
	PUSH S2
	INDEX 1
	;; array.push(..)
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSET
	PAIR
	; colValue
	POP S7
	; end colValue
	; expValue
	PUSH S5
	; end expValue
	;; get member status
	;; push identifier configuration
	PUSH S2
	INDEX 2
	;; array.push(..)
	NEWC
	STI 1
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S6
	; end colValue
	; expValue
	PUSH S4
	; end expValue
	;; get member _type
	;; push identifier configuration
	PUSH S2
	INDEX 3
	;; array.push(..)
	NEWC
	STU 8
	SWAP
	UNPAIR
	PUSH S1
	INC
	XCHG s3
	ROTREV
	PUSHINT 32
	DICTUSETB
	PAIR
	; colValue
	POP S5
	; end colValue
	DUP
	PUSH S4
	PUSHINT 32
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		LDDICT
		LDMSGADDR
		LDI 1
		PLDU 8
		TUPLE 4
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; end function getEventConfigurations

.macro confirmEthereumEvent
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode eventVoteData
;; decode struct EthereumEventVoteData eventVoteData
;; decode EthereumEventVoteData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventVoteData.eventIndex
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode EthereumEventVoteData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode EthereumEventVoteData.eventBlockNumber
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode EthereumEventVoteData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; build struct EthereumEventVoteData ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode configurationID
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
ENDS
;; param: eventVoteData
;; param: configurationID
CALLREF {
	CALL $confirmEthereumEvent_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	confirmEthereumEvent_internal
.type	confirmEthereumEvent_internal, @function
CALL $confirmEthereumEvent_internal_macro$

.macro confirmEthereumEvent_internal_macro
;; param: eventVoteData
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 3
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
;; ==
TRUE
EQUAL
THROWANYIFNOT
; function confirmEthereumEvent
;; Remote call EthereumEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x53191b33
;; eventVoteData
;; push identifier eventVoteData
PUSH S6
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 256
PUSH S4
STUR 32
PUSH S3
STREFR
PUSH S2
STUR 32
PUSH S1
STUR 256
BLKDROP2 5, 1
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function confirmEthereumEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
; end modifier onlyActive
DROP2

.macro rejectEthereumEvent
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode eventVoteData
;; decode struct EthereumEventVoteData eventVoteData
;; decode EthereumEventVoteData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventVoteData.eventIndex
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode EthereumEventVoteData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode EthereumEventVoteData.eventBlockNumber
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode EthereumEventVoteData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; build struct EthereumEventVoteData ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode configurationID
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
ENDS
;; param: eventVoteData
;; param: configurationID
CALLREF {
	CALL $rejectEthereumEvent_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	rejectEthereumEvent_internal
.type	rejectEthereumEvent_internal, @function
CALL $rejectEthereumEvent_internal_macro$

.macro rejectEthereumEvent_internal_macro
;; param: eventVoteData
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 3
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
;; ==
TRUE
EQUAL
THROWANYIFNOT
; function rejectEthereumEvent
;; Remote call EthereumEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x33152a59
;; eventVoteData
;; push identifier eventVoteData
PUSH S6
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 256
PUSH S4
STUR 32
PUSH S3
STREFR
PUSH S2
STUR 32
PUSH S1
STUR 256
BLKDROP2 5, 1
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function rejectEthereumEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
; end modifier onlyActive
DROP2

.macro confirmTonEvent
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode eventVoteData
;; decode struct TonEventVoteData eventVoteData
;; decode TonEventVoteData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventVoteData.eventTransactionLt
LDUQ 64
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 64
}
IFNOT
;; decode TonEventVoteData.eventTimestamp
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode TonEventVoteData.eventIndex
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode TonEventVoteData.eventData
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; build struct TonEventVoteData ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode eventDataSignature
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode configurationID
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
ENDS
;; param: eventVoteData
;; param: eventDataSignature
;; param: configurationID
CALLREF {
	CALL $confirmTonEvent_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	confirmTonEvent_internal
.type	confirmTonEvent_internal, @function
CALL $confirmTonEvent_internal_macro$

.macro confirmTonEvent_internal_macro
;; param: eventVoteData
;; param: eventDataSignature
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 3
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
;; ==
TRUE
EQUAL
THROWANYIFNOT
; function confirmTonEvent
;; Remote call TonEventConfiguration.confirmEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x57e967c4
;; eventVoteData
;; push identifier eventVoteData
PUSH S7
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 256
PUSH S4
STUR 64
PUSH S3
STUR 32
PUSH S2
STUR 32
PUSH S1
STREFR
BLKDROP2 5, 1
;; eventDataSignature
;; push identifier eventDataSignature
PUSH S6
STREFR
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function confirmTonEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
; end modifier onlyActive
BLKDROP 3

.macro rejectTonEvent
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode eventVoteData
;; decode struct TonEventVoteData eventVoteData
;; decode TonEventVoteData.eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode TonEventVoteData.eventTransactionLt
LDUQ 64
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 64
}
IFNOT
;; decode TonEventVoteData.eventTimestamp
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode TonEventVoteData.eventIndex
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; decode TonEventVoteData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; build struct TonEventVoteData ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode configurationID
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
ENDS
;; param: eventVoteData
;; param: configurationID
CALLREF {
	CALL $rejectTonEvent_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	rejectTonEvent_internal
.type	rejectTonEvent_internal, @function
CALL $rejectTonEvent_internal_macro$

.macro rejectTonEvent_internal_macro
;; param: eventVoteData
;; param: configurationID
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 3
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; modifier onlyActiveConfiguration
;; push identifier configurationID
PUSH S2
;; push identifier EVENT_CONFIGURATION_NOT_ACTIVE
GETGLOB 12
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member status
;; index
;; push identifier id
PUSH S1
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
NIP
PLDI 1
;; ==
TRUE
EQUAL
THROWANYIFNOT
; function rejectTonEvent
;; Remote call TonEventConfiguration.rejectEvent
;; get member addr
;; index
;; push identifier configurationID
PUSH S3
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 1
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 9
	STZEROES
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDMSGADDR
DROP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x147e4d57
;; eventVoteData
;; push identifier eventVoteData
PUSH S6
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 256
PUSH S4
STUR 64
PUSH S3
STUR 32
PUSH S2
STUR 32
PUSH S1
STREFR
BLKDROP2 5, 1
;; relay
;; get member sender
GETGLOB 9
STSLICER
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function rejectTonEvent
DROP
; end modifier onlyActiveConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
; end modifier onlyActive
DROP2

.macro getVotingDirection
DROP
; Decode input parameters
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; build struct Vote ss:2
SWAP
TUPLE 1
SWAP
ENDS
;; param: _vote
CALLREF {
	CALL $getVotingDirection_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xdb2c770b
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getVotingDirection_internal
.type	getVotingDirection_internal, @function
CALL $getVotingDirection_internal_macro$

.macro getVotingDirection_internal_macro
;; param: _vote
;; ret param: vote
PUSHINT 0
; function getVotingDirection
;; if
;; get member length
;; get member signature
;; push identifier _vote
PUSH S1
INDEX 0
PUSHINT 4294967295
CDATASIZE
DROP
NIP
RSHIFT 3
EQINT 0
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
; end function getVotingDirection
NIP

.macro updateBridgeConfiguration
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.nonce
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:5
BLKSWAP 4, 1
TUPLE 4
SWAP
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; build struct Vote ss:3
SWAP
TUPLE 1
SWAP
ENDS
;; param: _bridgeConfiguration
;; param: _vote
CALLREF {
	CALL $updateBridgeConfiguration_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	updateBridgeConfiguration_internal
.type	updateBridgeConfiguration_internal, @function
CALL $updateBridgeConfiguration_internal_macro$

.macro updateBridgeConfiguration_internal_macro
;; param: _bridgeConfiguration
;; param: _vote
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function updateBridgeConfiguration
;; emit BridgeConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x1ee7d3b4
;; _bridgeConfiguration
;; push identifier _bridgeConfiguration
PUSH S4
UNTUPLE 4
BLKSWAP 1, 4
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
BLKDROP2 4, 1
;; relay
;; get member sender
GETGLOB 9
STSLICER
;; vote
;; push identifier _vote
PUSH S3
UNTUPLE 1
SWAP
PUSH S1
STREFR
NIP
ENDC
PUSHINT 0
SENDRAWMSG
;; push identifier _vote
PUSH S2
CALLREF {
	CALL $getVotingDirection_internal_macro$
}
;; decl: vote
; expValue
;; fetch bridgeConfigurationVotes
PUSHINT 34
GETGLOBVAR
;; push identifier _bridgeConfiguration
PUSH S5
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
BLKDROP2 4, 1
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 49
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier vote
PUSH S4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
NEWC
STDICT
ROTREV
PUSHINT 49
DICTSETB
PUSHINT 34
SETGLOBVAR
; end colValue
;; push identifier _bridgeConfiguration
PUSH S4
CALLREF {
	CALL $getBridgeConfigurationVotes_internal_macro$
}
SWAP
SWAP
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S1
INDEX 0
;; ==
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 1
EQUAL
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier _bridgeConfiguration
	PUSH S6
	; colValue
	SETGLOB 31
	; end colValue
	;; push identifier _bridgeConfiguration
	PUSH S6
	CALLREF {
		CALL $_removeBridgeConfigurationVoting_internal_macro$
	}
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x26d07d59
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S7
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	BLKDROP2 4, 1
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectRelays
DUP
INDEX 0
;; ==
;; get member bridgeUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 2
EQUAL
PUSHCONT {
	;; push identifier _bridgeConfiguration
	PUSH S6
	CALLREF {
		CALL $_removeBridgeConfigurationVoting_internal_macro$
	}
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x26d07d59
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S7
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	BLKDROP2 4, 1
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2

.globl	_removeBridgeConfigurationVoting_internal
.type	_removeBridgeConfigurationVoting_internal, @function
CALL $_removeBridgeConfigurationVoting_internal_macro$

.macro _removeBridgeConfigurationVoting_internal_macro
;; param: _bridgeConfiguration
; function _removeBridgeConfigurationVoting
;; delete
; expValue
;; fetch bridgeConfigurationVotes
PUSHINT 34
GETGLOBVAR
;; push identifier _bridgeConfiguration
PUSH S1
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
BLKDROP2 4, 1
ENDC
CTOS
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 49
DICTDEL
DROP
; colValue
NIP
PUSHINT 34
SETGLOBVAR
; end colValue
; end function _removeBridgeConfigurationVoting
DROP

.macro getBridgeConfigurationVotes
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.nonce
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:5
BLKSWAP 4, 1
TUPLE 4
SWAP
ENDS
;; param: _bridgeConfiguration
CALLREF {
	CALL $getBridgeConfigurationVotes_internal_macro$
}
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xf3214726
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getBridgeConfigurationVotes_internal
.type	getBridgeConfigurationVotes_internal, @function
CALL $getBridgeConfigurationVotes_internal_macro$

.macro getBridgeConfigurationVotes_internal_macro
;; param: _bridgeConfiguration
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
; function getBridgeConfigurationVotes
;; index
;; push identifier _bridgeConfiguration
PUSH S2
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
BLKDROP2 4, 1
ENDC
CTOS
;; push identifier bridgeConfigurationVotes
PUSHINT 34
GETGLOBVAR
PUSHINT 49
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	;; ==
	TRUE
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; end function getBridgeConfigurationVotes
BLKDROP2 1, 2

.macro initializeUpdateEventConfiguration
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 32
; Decode targetID
LDU 32
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode basicInitData
;; decode struct BasicConfigurationInitData basicInitData
;; decode BasicConfigurationInitData.eventABI
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BasicConfigurationInitData.eventRequiredConfirmations
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode BasicConfigurationInitData.eventRequiredRejects
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode BasicConfigurationInitData.eventCode
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode BasicConfigurationInitData.bridgeAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode BasicConfigurationInitData.eventInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode BasicConfigurationInitData.meta
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; build struct BasicConfigurationInitData ss:11
BLKSWAP 7, 1
TUPLE 7
SWAP
; Decode ethereumInitData
;; decode struct EthereumEventConfigurationInitData ethereumInitData
;; decode EthereumEventConfigurationInitData.eventAddress
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; decode EthereumEventConfigurationInitData.eventBlocksToConfirm
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode EthereumEventConfigurationInitData.proxyAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode EthereumEventConfigurationInitData.startBlockNumber
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; build struct EthereumEventConfigurationInitData ss:9
BLKSWAP 4, 1
TUPLE 4
SWAP
; Decode tonInitData
;; decode struct TonEventConfigurationInitData tonInitData
;; decode TonEventConfigurationInitData.eventAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode TonEventConfigurationInitData.proxyAddress
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; decode TonEventConfigurationInitData.startTimestamp
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
;; build struct TonEventConfigurationInitData ss:9
BLKSWAP 3, 1
TUPLE 3
SWAP
ENDS
;; param: id
;; param: targetID
;; param: addr
;; param: basicInitData
;; param: ethereumInitData
;; param: tonInitData
CALLREF {
	CALL $initializeUpdateEventConfiguration_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	initializeUpdateEventConfiguration_internal
.type	initializeUpdateEventConfiguration_internal, @function
CALL $initializeUpdateEventConfiguration_internal_macro$

.macro initializeUpdateEventConfiguration_internal_macro
;; param: id
;; param: targetID
;; param: addr
;; param: basicInitData
;; param: ethereumInitData
;; param: tonInitData
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 3
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function initializeUpdateEventConfiguration
;; push identifier EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
GETGLOB 17
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; !
;; map.exists
;; push identifier id
PUSH S8
;; push identifier eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
PUSHINT 32
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWANYIFNOT
;; push identifier EVENT_CONFIGURATION_NOT_EXISTS
GETGLOB 14
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; map.exists
;; push identifier targetID
PUSH S7
;; push identifier eventConfigurations
PUSHINT 32
GETGLOBVAR
PUSHINT 32
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
;; get member sender
GETGLOB 9
;; decl: relay
NEWDICT
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
NEWC
ENDC
TUPLE 7
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 4
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
TUPLE 3
TUPLE 6
;; decl: update
; expValue
DUP
; end expValue
;; push identifier targetID
PUSH S9
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier addr
PUSH S8
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier basicInitData
PUSH S7
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier ethereumInitData
PUSH S6
; colValue
SETINDEX 4
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier tonInitData
PUSH S5
; colValue
SETINDEX 5
NIP
; end colValue
; expValue
DUP
DUP
INDEX 0
;; push identifier relay
PUSH S3
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
;; push identifier id
PUSH S10
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 32
PUSH S4
STSLICER
PUSH S3
UNTUPLE 7
NEWC
PUSH S7
STREFR
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STREFR
PUSH S3
STSLICER
PUSH S2
STUR 128
PUSH S1
STREFR
BLKDROP2 7, 1
STBREFR
PUSH S2
UNTUPLE 4
NEWC
PUSH S4
STUR 160
PUSH S3
STUR 16
PUSH S2
STSLICER
PUSH S1
STUR 32
BLKDROP2 4, 1
STBREFR
PUSH S1
UNTUPLE 3
NEWC
PUSH S3
STSLICER
PUSH S2
STUR 160
PUSH S1
STUR 32
BLKDROP2 3, 1
STBREFR
BLKDROP2 6, 1
ROTREV
PUSHINT 32
DICTUSETB
PUSHINT 33
SETGLOBVAR
; end colValue
;; emit EventConfigurationCreationVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x01c42c86
;; id
;; push identifier id
PUSH S10
STUR 32
;; relay
;; push identifier relay
PUSH S2
STSLICER
;; vote
TRUE
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
DROP2
; end function initializeUpdateEventConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
; end modifier onlyActive
BLKDROP 6

.macro voteForUpdateEventConfiguration
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 32
; Decode vote
LDI 1
ENDS
;; param: id
;; param: vote
CALLREF {
	CALL $voteForUpdateEventConfiguration_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	voteForUpdateEventConfiguration_internal
.type	voteForUpdateEventConfiguration_internal, @function
CALL $voteForUpdateEventConfiguration_internal_macro$

.macro voteForUpdateEventConfiguration_internal_macro
;; param: id
;; param: vote
; modifier onlyActive
;; push identifier BRIDGE_NOT_ACTIVE
GETGLOB 11
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 3
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function voteForUpdateEventConfiguration
;; push identifier EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
GETGLOB 16
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; map.exists
;; push identifier id
PUSH S4
;; push identifier eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
PUSHINT 32
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWANYIFNOT
;; get member sender
GETGLOB 9
;; decl: relay
;; index
;; push identifier id
PUSH S4
;; push identifier eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	LDDICT
	LDU 32
	LDMSGADDR
	LDREFRTOS
	LDREF
	LDU 16
	LDU 16
	LDREF
	LDMSGADDR
	LDU 128
	PLDREF
	TUPLE 7
	SWAP
	LDREFRTOS
	LDU 160
	LDU 16
	LDMSGADDR
	PLDU 32
	TUPLE 4
	SWAP
	LDREFRTOS
	NIP
	LDMSGADDR
	LDU 160
	PLDU 32
	TUPLE 3
	TUPLE 6
}
PUSHCONT {
	NEWDICT
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	NEWC
	ENDC
	PUSHINT 0
	PUSHINT 0
	NEWC
	ENDC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	NEWC
	ENDC
	TUPLE 7
	PUSHINT 0
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	TUPLE 4
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHINT 0
	TUPLE 3
	TUPLE 6
}
IFELSE
;; decl: update
; expValue
DUP
DUP
INDEX 0
;; push identifier relay
PUSH S3
SWAP
; end expValue
;; push identifier vote
PUSH S7
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETINDEX 0
NIP
; end colValue
; expValue
;; fetch eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
;; push identifier id
PUSH S6
SWAP
; end expValue
;; push identifier update
PUSH S2
; colValue
UNTUPLE 6
NEWC
PUSH S6
SWAP
STDICT
PUSH S5
STUR 32
PUSH S4
STSLICER
PUSH S3
UNTUPLE 7
NEWC
PUSH S7
STREFR
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STREFR
PUSH S3
STSLICER
PUSH S2
STUR 128
PUSH S1
STREFR
BLKDROP2 7, 1
STBREFR
PUSH S2
UNTUPLE 4
NEWC
PUSH S4
STUR 160
PUSH S3
STUR 16
PUSH S2
STSLICER
PUSH S1
STUR 32
BLKDROP2 4, 1
STBREFR
PUSH S1
UNTUPLE 3
NEWC
PUSH S3
STSLICER
PUSH S2
STUR 160
PUSH S1
STUR 32
BLKDROP2 3, 1
STBREFR
BLKDROP2 6, 1
ROTREV
PUSHINT 32
DICTUSETB
PUSHINT 33
SETGLOBVAR
; end colValue
;; emit EventConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x3210ca12
;; id
;; push identifier id
PUSH S6
STUR 32
;; relay
;; push identifier relay
PUSH S2
STSLICER
;; vote
;; push identifier vote
PUSH S5
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
;; push identifier id
PUSH S5
CALLREF {
	CALL $getUpdateEventConfigurationDetails_internal_macro$
}
BLKSWAP 6, 1
BLKSWAP 6, 1
BLKSWAP 6, 1
BLKSWAP 6, 1
BLKSWAP 6, 1
BLKSWAP 6, 1
BLKSWAP 6, 1
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S6
INDEX 0
;; ==
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 1
EQUAL
PUSHCONT {
	; expValue
	;; fetch eventConfigurations
	PUSHINT 32
	GETGLOBVAR
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	SWAP
	PUSH2 S1, S0
	PUSHINT 32
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	LDDICTS
	LDMSGADDR
	NIP
	; end expValue
	;; get member addr
	;; push identifier update
	PUSH S11
	INDEX 2
	; colValue
	ROT
	NEWC
	STSLICE
	STSLICE
	STSLICE
	ROTREV
	PUSHINT 32
	DICTUSETB
	PUSHINT 32
	SETGLOBVAR
	; end colValue
	;; if
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S7
	INDEX 1
	;; push identifier eventConfigurations
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 32
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	;; ==
	;; get member Ethereum
	PUSHINT 0
	EQUAL
	PUSHCONT {
		;; Remote call EthereumEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		PUSHINT 32
		GETGLOBVAR
		PUSHINT 32
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x09f706b8
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 7
		BLKSWAP 1, 7
		PUSH S7
		STREFR
		PUSH S6
		STUR 16
		PUSH S5
		STUR 16
		PUSH S4
		STREFR
		PUSH S3
		STSLICER
		PUSH S2
		STUR 128
		PUSH S1
		STREFR
		BLKDROP2 7, 1
		;; _initData
		;; get member ethereumInitData
		;; push identifier update
		PUSH S9
		INDEX 4
		UNTUPLE 4
		BLKSWAP 1, 4
		PUSH S4
		STUR 160
		PUSH S3
		STUR 16
		PUSH S2
		STSLICER
		PUSH S1
		STUR 32
		BLKDROP2 4, 1
		STBREFR
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	PUSHCONT {
		;; Remote call TonEventConfiguration.updateInitData
		;; get member addr
		;; index
		;; get member targetID
		;; push identifier update
		PUSH S7
		INDEX 1
		;; push identifier eventConfigurations
		PUSHINT 32
		GETGLOBVAR
		PUSHINT 32
		DICTUGET
		PUSHCONT {
			NEWC
			PUSHINT 1
			STZEROES
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			STSLICER
			PUSHINT 9
			STZEROES
			ENDC
			CTOS
		}
		IFNOT
		SKIPDICT
		LDMSGADDR
		DROP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x43b9aca00000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x74b627de
		;; _basicInitData
		;; get member basicInitData
		;; push identifier update
		PUSH S9
		INDEX 3
		UNTUPLE 7
		BLKSWAP 1, 7
		PUSH S7
		STREFR
		PUSH S6
		STUR 16
		PUSH S5
		STUR 16
		PUSH S4
		STREFR
		PUSH S3
		STSLICER
		PUSH S2
		STUR 128
		PUSH S1
		STREFR
		BLKDROP2 7, 1
		;; _initData
		;; get member tonInitData
		;; push identifier update
		PUSH S9
		INDEX 5
		UNTUPLE 3
		BLKSWAP 1, 3
		PUSH S3
		STSLICER
		PUSH S2
		STUR 160
		PUSH S1
		STUR 32
		BLKDROP2 3, 1
		STBREFR
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	IFELSE
	;; end if
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x660dc298
	;; id
	;; push identifier id
	PUSH S13
	STUR 32
	;; active
	TRUE
	STIR 1
	;; addr
	;; get member addr
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 32
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	DROP
	STSLICER
	;; _type
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 32
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; push identifier id
	PUSH S12
	CALLREF {
		CALL $_removeUpdateEventConfiguration_internal_macro$
	}
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectRelays
PUSH S5
INDEX 0
;; ==
;; get member bridgeUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 2
EQUAL
PUSHCONT {
	;; emit EventConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x660dc298
	;; id
	;; push identifier id
	PUSH S13
	STUR 32
	;; active
	FALSE
	STIR 1
	;; addr
	;; get member addr
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 32
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	DROP
	STSLICER
	;; _type
	;; get member _type
	;; index
	;; get member targetID
	;; push identifier update
	PUSH S8
	INDEX 1
	;; push identifier eventConfigurations
	PUSHINT 32
	GETGLOBVAR
	PUSHINT 32
	DICTUGET
	PUSHCONT {
		NEWC
		PUSHINT 1
		STZEROES
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		STSLICER
		PUSHINT 9
		STZEROES
		ENDC
		CTOS
	}
	IFNOT
	SKIPDICT
	LDMSGADDR
	NIP
	LDSLICE 1
	NIP
	PLDU 8
	STUR 8
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; push identifier id
	PUSH S12
	CALLREF {
		CALL $_removeUpdateEventConfiguration_internal_macro$
	}
}
IF
;; end if
BLKDROP 9
; end function voteForUpdateEventConfiguration
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
; end modifier onlyActive
DROP2

.macro getUpdateEventConfigurationDetails
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 32
ENDS
;; param: id
CALLREF {
	CALL $getUpdateEventConfigurationDetails_internal_macro$
}
;; emitting 7 value(s)
PUSH S7
EQINT -1
PUSHCONT {
	PUSH S9
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xe2eb6931
	PUSH S8
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S7
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S6
	STUR 256
	PUSH S5
	STSLICER
	PUSH S4
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STREFR
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	NEWC
	PUSH S5
	STREFR
	PUSH S4
	STSLICER
	PUSH S3
	STUR 128
	PUSH S2
	STREFR
	BLKDROP2 7, 2
	PUSH S4
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STUR 160
	PUSH S3
	STUR 16
	PUSH S2
	STSLICER
	PUSH S1
	STUR 32
	BLKDROP2 4, 1
	PUSH S3
	UNTUPLE 3
	BLKSWAP 1, 3
	NEWC
	PUSH S4
	STSLICER
	PUSH S3
	STUR 160
	PUSH S2
	STUR 32
	BLKDROP2 3, 2
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
BLKDROP 7
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getUpdateEventConfigurationDetails_internal
.type	getUpdateEventConfigurationDetails_internal, @function
CALL $getUpdateEventConfigurationDetails_internal_macro$

.macro getUpdateEventConfigurationDetails_internal_macro
;; param: id
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: targetID
PUSHINT 0
;; ret param: addr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: basicInitData
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
NEWC
ENDC
TUPLE 7
;; ret param: ethereumInitData
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 4
;; ret param: tonInitData
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
TUPLE 3
; function getUpdateEventConfigurationDetails
;; get member votes
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 33
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	NEWC
	ENDC
	STREFR
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 32
	STZEROES
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 192
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
PLDDICT
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	;; ==
	TRUE
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S10
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S11
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S9
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S10
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; expValue
; end expValue
;; get member basicInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 33
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	NEWC
	ENDC
	STREFR
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 32
	STZEROES
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 192
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 32
NIP
LDMSGADDR
NIP
LDREFRTOS
NIP
LDREF
LDU 16
LDU 16
LDREF
LDMSGADDR
LDU 128
PLDREF
TUPLE 7
; colValue
POP S3
; end colValue
; expValue
; end expValue
;; get member ethereumInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 33
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	NEWC
	ENDC
	STREFR
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 32
	STZEROES
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 192
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 32
NIP
LDMSGADDR
NIP
LDREF
NIP
LDREFRTOS
NIP
LDU 160
LDU 16
LDMSGADDR
PLDU 32
TUPLE 4
; colValue
POP S2
; end colValue
; expValue
; end expValue
;; get member tonInitData
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 33
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	NEWC
	ENDC
	STREFR
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 32
	STZEROES
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 192
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 32
NIP
LDMSGADDR
NIP
PUSHINT 0
PUSHINT 2
SSKIPFIRST
LDREFRTOS
NIP
LDMSGADDR
LDU 160
PLDU 32
TUPLE 3
; colValue
NIP
; end colValue
; expValue
; end expValue
;; get member targetID
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 33
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	NEWC
	ENDC
	STREFR
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 32
	STZEROES
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 192
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
PLDU 32
; colValue
POP S5
; end colValue
; expValue
; end expValue
;; get member addr
;; index
;; push identifier id
PUSH S7
;; push identifier eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
PUSHINT 32
DICTUGET
PUSHCONT {
	NEWC
	PUSHINT 33
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	NEWC
	NEWC
	ENDC
	STREFR
	PUSHINT 32
	STZEROES
	NEWC
	ENDC
	STREFR
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 128
	STZEROES
	NEWC
	ENDC
	STREFR
	STBREFR
	NEWC
	PUSHINT 176
	STZEROES
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 32
	STZEROES
	STBREFR
	NEWC
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	STSLICER
	PUSHINT 192
	STZEROES
	STBREFR
	ENDC
	CTOS
}
IFNOT
SKIPDICT
LDSLICE 32
NIP
LDMSGADDR
DROP
; colValue
POP S4
; end colValue
; end function getUpdateEventConfigurationDetails
BLKDROP2 1, 7

.globl	_removeUpdateEventConfiguration_internal
.type	_removeUpdateEventConfiguration_internal, @function
CALL $_removeUpdateEventConfiguration_internal_macro$

.macro _removeUpdateEventConfiguration_internal_macro
;; param: id
; function _removeUpdateEventConfiguration
;; delete
; expValue
;; fetch eventConfigurationsUpdate
PUSHINT 33
GETGLOBVAR
;; push identifier id
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 32
DICTUDEL
DROP
; colValue
NIP
PUSHINT 33
SETGLOBVAR
; end colValue
; end function _removeUpdateEventConfiguration
DROP

.macro updateBridgeRelays
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode target
;; decode struct BridgeRelay target
;; decode BridgeRelay.nonce
LDU 16
;; decode BridgeRelay.wid
LDI 8
;; decode BridgeRelay.addr
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeRelay.ethereumAccount
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; decode BridgeRelay.action
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeRelay ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; build struct Vote ss:3
SWAP
TUPLE 1
SWAP
ENDS
;; param: target
;; param: _vote
CALLREF {
	CALL $updateBridgeRelays_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	updateBridgeRelays_internal
.type	updateBridgeRelays_internal, @function
CALL $updateBridgeRelays_internal_macro$

.macro updateBridgeRelays_internal_macro
;; param: target
;; param: _vote
; modifier onlyOwnerAddress
;; get member sender
GETGLOB 9
;; push identifier ADDRESS_IS_NOT_OWNER
GETGLOB 10
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; ==
TRUE
EQUAL
THROWANYIFNOT
; modifier transferAfterRest
;; get member sender
GETGLOB 9
; function updateBridgeRelays
;; emit BridgeRelaysUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x449e79c3
;; target
;; push identifier target
PUSH S4
UNTUPLE 5
BLKSWAP 1, 5
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
BLKDROP2 5, 1
;; relay
;; get member sender
GETGLOB 9
STSLICER
;; vote
;; push identifier _vote
PUSH S3
UNTUPLE 1
SWAP
PUSH S1
STREFR
NIP
ENDC
PUSHINT 0
SENDRAWMSG
;; push identifier _vote
PUSH S2
CALLREF {
	CALL $getVotingDirection_internal_macro$
}
;; decl: vote
; expValue
;; fetch bridgeRelayVotes
PUSHINT 35
GETGLOBVAR
;; push identifier target
PUSH S5
UNTUPLE 5
NEWC
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
BLKDROP2 5, 1
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 441
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
;; get member sender
GETGLOB 9
SWAP
; end expValue
;; push identifier vote
PUSH S4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
NEWC
STDICT
ROTREV
PUSHINT 441
DICTSETB
PUSHINT 35
SETGLOBVAR
; end colValue
;; push identifier target
PUSH S4
CALLREF {
	CALL $getBridgeRelayVotes_internal_macro$
}
SWAP
SWAP
;; decl: confirmRelays
;; decl: rejectRelays
;; if
;; get member length
;; push identifier confirmRelays
PUSH S1
INDEX 0
;; ==
;; get member bridgeUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 1
EQUAL
PUSHCONT {
	;; address.makeAddrStd()
	;; get member addr
	;; push identifier target
	PUSH S6
	INDEX 2
	;; get member wid
	;; push identifier target
	PUSH S7
	INDEX 1
	NEWC
	STSLICECONST x9_
	STI 8
	STU 256
	ENDC
	CTOS
	;; decl: targetAccount
	;; if
	;; get member action
	;; push identifier target
	PUSH S7
	INDEX 4
	PUSHCONT {
		;; push identifier targetAccount
		DUP
		;; get member ethereumAccount
		;; push identifier target
		PUSH S8
		INDEX 3
		CALLREF {
			CALL $_grantOwnership_internal_macro$
		}
	}
	PUSHCONT {
		;; push identifier targetAccount
		DUP
		CALLREF {
			CALL $_removeOwnership_internal_macro$
		}
	}
	IFELSE
	;; end if
	;; push identifier target
	PUSH S7
	CALLREF {
		CALL $_removeBridgeRelayVoting_internal_macro$
	}
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x41fc51a0
	;; target
	;; push identifier target
	PUSH S8
	UNTUPLE 5
	BLKSWAP 1, 5
	PUSH S5
	STUR 16
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 160
	PUSH S1
	STIR 1
	BLKDROP2 5, 1
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
	DROP
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectRelays
DUP
INDEX 0
;; ==
;; get member bridgeUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 31
INDEX 2
EQUAL
PUSHCONT {
	;; push identifier target
	PUSH S6
	CALLREF {
		CALL $_removeBridgeRelayVoting_internal_macro$
	}
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x41fc51a0
	;; target
	;; push identifier target
	PUSH S7
	UNTUPLE 5
	BLKSWAP 1, 5
	PUSH S5
	STUR 16
	PUSH S4
	STIR 8
	PUSH S3
	STUR 256
	PUSH S2
	STUR 160
	PUSH S1
	STIR 1
	BLKDROP2 5, 1
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeRelays
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end modifier transferAfterRest
DROP
; end modifier onlyOwnerAddress
DROP2

.macro getBridgeRelayVotes
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode target
;; decode struct BridgeRelay target
;; decode BridgeRelay.nonce
LDU 16
;; decode BridgeRelay.wid
LDI 8
;; decode BridgeRelay.addr
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeRelay.ethereumAccount
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; decode BridgeRelay.action
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeRelay ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
ENDS
;; param: target
CALLREF {
	CALL $getBridgeRelayVotes_internal_macro$
}
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb812482d
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getBridgeRelayVotes_internal
.type	getBridgeRelayVotes_internal, @function
CALL $getBridgeRelayVotes_internal_macro$

.macro getBridgeRelayVotes_internal_macro
;; param: target
;; ret param: confirmRelays
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectRelays
PUSHINT 0
NEWDICT
PAIR
; function getBridgeRelayVotes
;; index
;; push identifier target
PUSH S2
UNTUPLE 5
NEWC
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
BLKDROP2 5, 1
ENDC
CTOS
;; push identifier bridgeRelayVotes
PUSHINT 35
GETGLOBVAR
PUSHINT 441
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	;; ==
	TRUE
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier relay
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; end function getBridgeRelayVotes
BLKDROP2 1, 2

.globl	_removeBridgeRelayVoting_internal
.type	_removeBridgeRelayVoting_internal, @function
CALL $_removeBridgeRelayVoting_internal_macro$

.macro _removeBridgeRelayVoting_internal_macro
;; param: target
; function _removeBridgeRelayVoting
;; delete
; expValue
;; fetch bridgeRelayVotes
PUSHINT 35
GETGLOBVAR
;; push identifier target
PUSH S1
UNTUPLE 5
NEWC
PUSH S5
STUR 16
PUSH S4
STIR 8
PUSH S3
STUR 256
PUSH S2
STUR 160
PUSH S1
STIR 1
BLKDROP2 5, 1
ENDC
CTOS
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 441
DICTDEL
DROP
; colValue
NIP
PUSHINT 35
SETGLOBVAR
; end colValue
; end function _removeBridgeRelayVoting
DROP

.macro getDetails
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getDetails_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xdb2f0d90
	PUSH S1
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	BLKDROP2 4, 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDetails_internal
.type	getDetails_internal, @function
CALL $getDetails_internal_macro$

.macro getDetails_internal_macro
;; ret param: _bridgeConfiguration
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 4
; function getDetails
;; return
;; push identifier bridgeConfiguration
GETGLOB 31
NIP
; end function getDetails

.globl	transferAll_internal
.type	transferAll_internal, @function
CALL $transferAll_internal_macro$

.macro transferAll_internal_macro
;; param: receiver
; function transferAll
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 129
SENDRAWMSG
; end function transferAll
DROP

.macro getAccountStatus
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: addr
CALLREF {
	CALL $getAccountStatus_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xc862288c
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getAccountStatus_internal
.type	getAccountStatus_internal, @function
CALL $getAccountStatus_internal_macro$

.macro getAccountStatus_internal_macro
;; param: addr
;; ret param: _status
PUSHINT 0
; function getAccountStatus
;; return
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerAccounts
GETGLOB 28
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
; end function getAccountStatus
NIP

.macro getEthereumAccount
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode addr
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: addr
CALLREF {
	CALL $getEthereumAccount_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbd88ea00
	PUSH S1
	STUR 160
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getEthereumAccount_internal
.type	getEthereumAccount_internal, @function
CALL $getEthereumAccount_internal_macro$

.macro getEthereumAccount_internal_macro
;; param: addr
;; ret param: ethereumAccount
PUSHINT 0
; function getEthereumAccount
;; return
;; index
;; push identifier addr
PUSH S1
;; push identifier ownerEthereumAccounts
GETGLOB 29
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 160
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
; end function getEthereumAccount
NIP

.globl	_grantOwnership_internal
.type	_grantOwnership_internal, @function
CALL $_grantOwnership_internal_macro$

.macro _grantOwnership_internal_macro
;; param: addr
;; param: ethereumAccount
; function _grantOwnership
; expValue
;; fetch ownerAccounts
GETGLOB 28
;; push identifier addr
PUSH S2
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 28
; end colValue
; expValue
;; fetch ownerEthereumAccounts
GETGLOB 29
;; push identifier addr
PUSH S2
SWAP
; end expValue
;; push identifier ethereumAccount
PUSH S2
; colValue
NEWC
STU 160
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 29
; end colValue
;; emit OwnershipGranted
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x107857aa
;; addr
;; push identifier addr
PUSH S2
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function _grantOwnership
DROP2

.globl	_removeOwnership_internal
.type	_removeOwnership_internal, @function
CALL $_removeOwnership_internal_macro$

.macro _removeOwnership_internal_macro
;; param: addr
; function _removeOwnership
;; delete
; expValue
;; fetch ownerAccounts
GETGLOB 28
;; push identifier addr
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 267
DICTDEL
DROP
; colValue
NIP
SETGLOB 28
; end colValue
;; delete
; expValue
;; fetch ownerEthereumAccounts
GETGLOB 29
;; push identifier addr
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 267
DICTDEL
DROP
; colValue
NIP
SETGLOB 29
; end colValue
;; emit OwnershipRemoved
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x461ab0ce
;; addr
;; push identifier addr
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
; end function _removeOwnership
DROP

.macro getAccounts
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $getAccounts_internal_macro$
}
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbdf10e72
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getAccounts_internal
.type	getAccounts_internal, @function
CALL $getAccounts_internal_macro$

.macro getAccounts_internal_macro
;; ret param: accounts
PUSHINT 0
NEWDICT
PAIR
;; ret param: ethereumAccounts
PUSHINT 0
NEWDICT
PAIR
; function getAccounts
;; push identifier ownerAccounts
GETGLOB 28
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier status
	PUSH S1
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier addr
		PUSH S3
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S6
		; end colValue
		; expValue
		PUSH S4
		; end expValue
		;; index
		;; push identifier addr
		PUSH S3
		;; push identifier ownerEthereumAccounts
		GETGLOB 29
		PUSHINT 267
		DICTGET
		PUSHCONT {
			PLDU 160
		}
		PUSHCONT {
			PUSHINT 0
		}
		IFELSE
		;; array.push(..)
		NEWC
		STU 160
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
; end function getAccounts

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 31
PUSHINT 32
GETGLOBVAR
PUSHINT 33
GETGLOBVAR
PUSHINT 35
GETGLOBVAR
REVERSE 5, 0
SWAP
UNTUPLE 4
NEWC
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
BLKDROP2 4, 1
STBREFR
STDICT
STDICT
STDICT
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 15
GETGLOB 16
GETGLOB 17
GETGLOB 18
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 22
GETGLOB 23
GETGLOB 24
GETGLOB 25
GETGLOB 26
GETGLOB 27
GETGLOB 28
GETGLOB 29
GETGLOB 30
PUSHINT 34
GETGLOBVAR
PUSHINT 24
PUSHINT 0
REVX
STBREF
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STDICT
STDICT
STU 16
STDICT
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDREFRTOS
LDU 16
LDU 16
LDU 16
PLDI 1
TUPLE 4
SETGLOB 31
LDDICT
LDDICT
PLDDICT
PUSHINT 35
SETGLOBVAR
PUSHINT 33
SETGLOBVAR
PUSHINT 32
SETGLOBVAR
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDDICT
LDDICT
LDU 16
PLDDICT
PUSHINT 34
SETGLOBVAR
SETGLOB 30
SETGLOB 29
SETGLOB 28
SETGLOB 27
SETGLOB 26
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDREFRTOS
	LDU 16
	LDU 16
	LDU 16
	PLDI 1
	TUPLE 4
	SETGLOB 31
	LDDICT
	LDDICT
	PLDDICT
	PUSHINT 35
	SETGLOBVAR
	PUSHINT 33
	SETGLOBVAR
	PUSHINT 32
	SETGLOBVAR
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDDICT
	LDDICT
	LDU 16
	PLDDICT
	PUSHINT 34
	SETGLOBVAR
	SETGLOB 30
	SETGLOB 29
	SETGLOB 28
	SETGLOB 27
	SETGLOB 26
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init ADDRESS_IS_NOT_OWNER
	PUSHINT 0
	SETGLOB 10
	; init BRIDGE_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 11
	; init EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 12
	; init KEYS_DIFFERENT_SHAPE
	PUSHINT 0
	SETGLOB 13
	; init EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 0
	SETGLOB 14
	; init EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 15
	; init EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 0
	SETGLOB 16
	; init EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 17
	; init SENDER_NOT_BRIDGE
	PUSHINT 0
	SETGLOB 18
	; init EVENT_BLOCK_NUMBER_LESS_THAN_START
	PUSHINT 0
	SETGLOB 19
	; init EVENT_TIMESTAMP_LESS_THAN_START
	PUSHINT 0
	SETGLOB 20
	; init EVENT_NOT_IN_PROGRESS
	PUSHINT 0
	SETGLOB 21
	; init SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 0
	SETGLOB 22
	; init KEY_ALREADY_CONFIRMED
	PUSHINT 0
	SETGLOB 23
	; init KEY_ALREADY_REJECTED
	PUSHINT 0
	SETGLOB 24
	; init EVENT_NOT_CONFIRMED
	PUSHINT 0
	SETGLOB 25
	; init TOO_LOW_MSG_VALUE
	PUSHINT 0
	SETGLOB 26
	; init WRONG_TVM_KEY
	PUSHINT 0
	SETGLOB 27
	; init ownerAccounts
	NEWDICT
	SETGLOB 28
	; init ownerEthereumAccounts
	NEWDICT
	SETGLOB 29
	; init _randomNonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 16
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 30
	; init bridgeConfiguration
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	TUPLE 4
	SETGLOB 31
	; init eventConfigurations
	NEWDICT
	PUSHINT 32
	SETGLOBVAR
	; init eventConfigurationsUpdate
	NEWDICT
	PUSHINT 33
	SETGLOBVAR
	; init bridgeConfigurationVotes
	NEWDICT
	PUSHINT 34
	SETGLOBVAR
	; init bridgeRelayVotes
	NEWDICT
	PUSHINT 35
	SETGLOBVAR
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: ADDRESS_IS_NOT_OWNER
	PUSHINT 5001
	SETGLOB 10
	;; init state var: BRIDGE_NOT_ACTIVE
	PUSHINT 5002
	SETGLOB 11
	;; init state var: EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 5003
	SETGLOB 12
	;; init state var: KEYS_DIFFERENT_SHAPE
	PUSHINT 5004
	SETGLOB 13
	;; init state var: EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 5005
	SETGLOB 14
	;; init state var: EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 5006
	SETGLOB 15
	;; init state var: EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 5007
	SETGLOB 16
	;; init state var: EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 5008
	SETGLOB 17
	;; init state var: SENDER_NOT_BRIDGE
	PUSHINT 5101
	SETGLOB 18
	;; init state var: EVENT_BLOCK_NUMBER_LESS_THAN_START
	PUSHINT 5102
	SETGLOB 19
	;; init state var: EVENT_TIMESTAMP_LESS_THAN_START
	PUSHINT 5103
	SETGLOB 20
	;; init state var: EVENT_NOT_IN_PROGRESS
	PUSHINT 5201
	SETGLOB 21
	;; init state var: SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 5202
	SETGLOB 22
	;; init state var: KEY_ALREADY_CONFIRMED
	PUSHINT 5203
	SETGLOB 23
	;; init state var: KEY_ALREADY_REJECTED
	PUSHINT 5204
	SETGLOB 24
	;; init state var: EVENT_NOT_CONFIRMED
	PUSHINT 5205
	SETGLOB 25
	;; init state var: TOO_LOW_MSG_VALUE
	PUSHINT 5206
	SETGLOB 26
	;; init state var: WRONG_TVM_KEY
	PUSHINT 5301
	SETGLOB 27
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro public_function_selector
DUP
PUSHINT 940722221
LEQ
PUSHCONT {
	DUP
	PUSHINT 429197966
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 208169667
		EQUAL
		IFJMPREF {
			CALL $confirmEthereumEvent$
		}
		DUP
		PUSHINT 429197966
		EQUAL
		IFJMPREF {
			CALL $voteForUpdateEventConfiguration$
		}
	}
	IFJMP
	DUP
	PUSHINT 626276299
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 575530251
		EQUAL
		IFJMPREF {
			CALL $rejectEthereumEvent$
		}
		DUP
		PUSHINT 626276299
		EQUAL
		IFJMPREF {
			CALL $updateBridgeRelays$
		}
	}
	IFJMP
	DUP
	PUSHINT 940722221
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 709303666
		EQUAL
		IFJMPREF {
			CALL $confirmTonEvent$
		}
		DUP
		PUSHINT 940722221
		EQUAL
		IFJMPREF {
			CALL $getBridgeRelayVotes$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 1281301921
LEQ
PUSHCONT {
	DUP
	PUSHINT 1032382976
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 996343579
		EQUAL
		IFJMPREF {
			CALL $getEventConfigurations$
		}
		DUP
		PUSHINT 1032382976
		EQUAL
		IFJMPREF {
			CALL $getEthereumAccount$
		}
	}
	IFJMP
	DUP
	PUSHINT 1214392460
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1039208050
		EQUAL
		IFJMPREF {
			CALL $getAccounts$
		}
		DUP
		PUSHINT 1214392460
		EQUAL
		IFJMPREF {
			CALL $getAccountStatus$
		}
	}
	IFJMP
	DUP
	PUSHINT 1281301921
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1228254162
		EQUAL
		IFJMPREF {
			CALL $getActiveEventConfigurations$
		}
		DUP
		PUSHINT 1281301921
		EQUAL
		IFJMPREF {
			CALL $updateBridgeConfiguration$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 1761263903
LEQ
PUSHCONT {
	DUP
	PUSHINT 1529810320
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1529640715
		EQUAL
		IFJMPREF {
			CALL $getVotingDirection$
		}
		DUP
		PUSHINT 1529810320
		EQUAL
		IFJMPREF {
			CALL $getDetails$
		}
	}
	IFJMP
	DUP
	PUSHINT 1619966787
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1561963270
		EQUAL
		IFJMPREF {
			CALL $voteForEventConfigurationCreation$
		}
		DUP
		PUSHINT 1619966787
		EQUAL
		IFJMPREF {
			CALL $rejectTonEvent$
		}
	}
	IFJMP
	DUP
	PUSHINT 1761263903
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1659595057
		EQUAL
		IFJMPREF {
			CALL $getUpdateEventConfigurationDetails$
		}
		DUP
		PUSHINT 1761263903
		EQUAL
		IFJMPREF {
			CALL $initializeEventConfigurationCreation$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 2073855199
LEQ
PUSHCONT {
	DUP
	PUSHINT 1807559574
	EQUAL
	IFJMPREF {
		CALL $initializeUpdateEventConfiguration$
	}
	DUP
	PUSHINT 1822332981
	EQUAL
	IFJMPREF {
		CALL $getEventConfigurationDetails$
	}
	DUP
	PUSHINT 1931560742
	EQUAL
	IFJMPREF {
		CALL $getBridgeConfigurationVotes$
	}
	DUP
	PUSHINT 2073855199
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
}
IFJMP
