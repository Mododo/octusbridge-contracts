.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _relayKeys
LDU 32
LDDICT
ROTREV
PAIR
SWAP
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.eventConfigurationRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.eventConfigurationRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredRejects
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode BridgeConfiguration.active
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeConfiguration ss:9
BLKSWAP 7, 1
TUPLE 7
SWAP
ENDS
;; param: _relayKeys
;; param: _bridgeConfiguration
; constructor Bridge
GETGLOB 2
NEQINT 0
THROWIFNOT 100
ACCEPT
; for
PUSHINT 0
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	;; get member length
	;; push identifier _relayKeys
	PUSH S3
	INDEX 0
	;; <
	LESS
}
PUSHCONT {
	;; index
	;; push identifier i
	DUP
	;; push identifier _relayKeys
	PUSH S3
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 256
	CALL $_grantOwnership_internal$
	;; ++
	; expValue
	; end expValue
	INC
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
; end expValue
;; push identifier _bridgeConfiguration
DUP
; colValue
SETGLOB 12
; end colValue
; expValue
;; fetch bridgeConfiguration
GETGLOB 12
; end expValue
TRUE
; colValue
SETINDEX 6
SETGLOB 12
; end colValue
DROP2
; end constructor Bridge
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	_requireOnlyActiveEventConfiguration_internal
.type	_requireOnlyActiveEventConfiguration_internal, @function
;; param: eventConfiguration
; function _requireOnlyActiveEventConfiguration
PUSHINT 0
;; decl: total
PUSHINT 0
;; decl: confirmations
;; index
;; push identifier eventConfiguration
PUSH S2
;; push identifier eventConfigurationVotes
GETGLOB 13
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	PUSHINT 1
	; expValue
	PUSH S6
	; end expValue
	SWAP
	ADD
	UFITS 16
	; colValue
	POP S6
	; end colValue
	;; if
	;; push identifier vote
	PUSH S1
	PUSHCONT {
		PUSHINT 1
		; expValue
		PUSH S5
		; end expValue
		SWAP
		ADD
		UFITS 16
		; colValue
		POP S5
		; end colValue
	}
	IF
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
PUSHINT 12313
;; push identifier confirmations
PUSH S1
;; get member eventConfigurationRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 0
;; >=
GEQ
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier total
	PUSH S2
	;; push identifier confirmations
	PUSH S2
	;; -
	SUB
	UFITS 16
	;; get member eventConfigurationRequiredRejects
	;; push identifier bridgeConfiguration
	GETGLOB 12
	INDEX 1
	;; <
	LESS
}
IF
THROWANYIFNOT
BLKDROP 3
; end function _requireOnlyActiveEventConfiguration

.globl	updateEventConfiguration
.public	updateEventConfiguration
.type	updateEventConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode vote
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
ENDS
;; param: eventConfiguration
;; param: vote
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateEventConfiguration
PUSHCONT {
	ACCEPT
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	;; decl: key
	;; get member eventConfigurationRequiredConfirmations
	;; push identifier bridgeConfiguration
	GETGLOB 12
	INDEX 0
	;; decl: requiredConfirmations
	;; get member eventConfigurationRequiredRejects
	;; push identifier bridgeConfiguration
	GETGLOB 12
	INDEX 1
	;; decl: requiredRejects
	FALSE
	;; decl: hasAlreadyFinished
	PUSHINT 0
	;; decl: total
	PUSHINT 0
	;; decl: confirmations
	PUSHINT 0
	;; decl: rejects
	;; index
	;; push identifier eventConfiguration
	PUSH S9
	;; push identifier eventConfigurationVotes
	GETGLOB 13
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	DUP
	PUSHINT 256
	DICTUMIN
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		NULL
		NULL
	}
	PUSHCONT {
		UNTUPLE 2
		PUSH S1
	}
	IFELSE
	FALSE ; decl return flag
	PUSHCONT {
		DUP
		LESSINT 2
		DUP
		PUSHCONT {
			DROP
			PUSH S1
			ISNULL
			NOT
		}
		IF
	}
	PUSHCONT {
		PUSHCONT {
			;; if
			;; push identifier existingKey
			PUSH S3
			;; push identifier key
			PUSH S12
			;; ==
			EQUAL
			PUSHCONT {
				;; return
				BLKDROP 12
				PUSHINT 4
				RET
			}
			IFJMP
			;; end if
			PUSHINT 1
			; expValue
			PUSH S8
			; end expValue
			SWAP
			ADD
			UFITS 16
			; colValue
			POP S8
			; end colValue
			;; if
			;; push identifier existingVote
			PUSH S2
			PUSHCONT {
				PUSHINT 1
				; expValue
				PUSH S7
				; end expValue
				SWAP
				ADD
				UFITS 16
				; colValue
				POP S7
				; end colValue
			}
			IF
			;; end if
		}
		CALLX
		DUP
		GTINT 1
		IFRET
		PUSH S1
		PUSH S5
		PUSHINT 256
		DICTUGETNEXT
		NULLSWAPIFNOT
		PUSHCONT {
			SWAP
			PLDI 1
			TUPLE 2
		}
		IF
		DUP
		ISNULL
		PUSHCONT {
			POP S2
		}
		PUSHCONT {
			UNTUPLE 2
			POP S4
			DUP
			POP S5
			POP S2
		}
		IFELSE
	}
	WHILE
	EQINT 4
	IFRET
	BLKDROP 4
	; end for
	; expValue
	; end expValue
	;; push identifier total
	PUSH S2
	;; push identifier confirmations
	PUSH S2
	;; -
	SUB
	UFITS 16
	; colValue
	NIP
	; end colValue
	;; push identifier vote
	PUSH S8
	; expValue
	;; fetch eventConfigurationVotes
	GETGLOB 13
	;; push identifier eventConfiguration
	PUSH S11
	SWAP
	PUSH2 S1, S0
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	SWAP
	; end expValue
	BLKSWAP 1, 4
	; colValue
	NEWC
	STI 1
	ROTREV
	PUSHINT 256
	DICTUSETB
	NEWC
	STDICT
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 13
	; end colValue
	;; emit EventConfigurationCreationVote
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x38f1975f
	;; addr
	;; push identifier eventConfiguration
	PUSH S10
	STSLICER
	;; relayKey
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	STUR 256
	;; vote
	;; push identifier vote
	PUSH S9
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
	; expValue
	; end expValue
	;; push identifier confirmations
	PUSH S1
	;; push identifier requiredConfirmations
	PUSH S6
	;; >=
	GEQ
	;; short-circuiting ||
	DUP
	PUSHCONT {
		DROP
		;; push identifier rejects
		DUP
		;; push identifier requiredRejects
		PUSH S5
		;; >=
		GEQ
	}
	IFNOT
	; colValue
	POP S4
	; end colValue
	;; if
	;; !
	;; push identifier hasAlreadyFinished
	PUSH S3
	NOT
	;; push identifier vote
	PUSH S9
	AND
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier confirmations
		PUSH S1
		PUSHINT 1
		;; +
		ADD
		UFITS 16
		;; push identifier requiredConfirmations
		PUSH S6
		;; >=
		GEQ
	}
	IF
	PUSHCONT {
		;; emit EventConfigurationCreationEnd
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x052b7c38
		;; addr
		;; push identifier eventConfiguration
		PUSH S10
		STSLICER
		;; active
		TRUE
		STIR 1
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	PUSHCONT {
		;; if
		;; !
		;; push identifier hasAlreadyFinished
		PUSH S3
		NOT
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; !
			;; push identifier vote
			PUSH S8
			NOT
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier rejects
				DUP
				PUSHINT 1
				;; +
				ADD
				UFITS 16
				;; push identifier requiredRejects
				PUSH S5
				;; >=
				GEQ
			}
			IF
		}
		IF
		PUSHCONT {
			;; emit EventConfigurationCreationEnd
			NEWC
			PUSHSLICE xc0000000000000000000000002_
			STSLICER
			STSLICECONST 0
			STSLICECONST 0
			STSLICECONST x052b7c38
			;; addr
			;; push identifier eventConfiguration
			PUSH S10
			STSLICER
			;; active
			FALSE
			STIR 1
			ENDC
			PUSHINT 1
			SENDRAWMSG
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
	BLKDROP 7
}
CALLX
; end function updateEventConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	updateEventConfiguration_internal
.type	updateEventConfiguration_internal, @function
;; param: eventConfiguration
;; param: vote
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateEventConfiguration
PUSHCONT {
	ACCEPT
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	;; decl: key
	;; get member eventConfigurationRequiredConfirmations
	;; push identifier bridgeConfiguration
	GETGLOB 12
	INDEX 0
	;; decl: requiredConfirmations
	;; get member eventConfigurationRequiredRejects
	;; push identifier bridgeConfiguration
	GETGLOB 12
	INDEX 1
	;; decl: requiredRejects
	FALSE
	;; decl: hasAlreadyFinished
	PUSHINT 0
	;; decl: total
	PUSHINT 0
	;; decl: confirmations
	PUSHINT 0
	;; decl: rejects
	;; index
	;; push identifier eventConfiguration
	PUSH S9
	;; push identifier eventConfigurationVotes
	GETGLOB 13
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	DUP
	PUSHINT 256
	DICTUMIN
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		NULL
		NULL
	}
	PUSHCONT {
		UNTUPLE 2
		PUSH S1
	}
	IFELSE
	FALSE ; decl return flag
	PUSHCONT {
		DUP
		LESSINT 2
		DUP
		PUSHCONT {
			DROP
			PUSH S1
			ISNULL
			NOT
		}
		IF
	}
	PUSHCONT {
		PUSHCONT {
			;; if
			;; push identifier existingKey
			PUSH S3
			;; push identifier key
			PUSH S12
			;; ==
			EQUAL
			PUSHCONT {
				;; return
				BLKDROP 12
				PUSHINT 4
				RET
			}
			IFJMP
			;; end if
			PUSHINT 1
			; expValue
			PUSH S8
			; end expValue
			SWAP
			ADD
			UFITS 16
			; colValue
			POP S8
			; end colValue
			;; if
			;; push identifier existingVote
			PUSH S2
			PUSHCONT {
				PUSHINT 1
				; expValue
				PUSH S7
				; end expValue
				SWAP
				ADD
				UFITS 16
				; colValue
				POP S7
				; end colValue
			}
			IF
			;; end if
		}
		CALLX
		DUP
		GTINT 1
		IFRET
		PUSH S1
		PUSH S5
		PUSHINT 256
		DICTUGETNEXT
		NULLSWAPIFNOT
		PUSHCONT {
			SWAP
			PLDI 1
			TUPLE 2
		}
		IF
		DUP
		ISNULL
		PUSHCONT {
			POP S2
		}
		PUSHCONT {
			UNTUPLE 2
			POP S4
			DUP
			POP S5
			POP S2
		}
		IFELSE
	}
	WHILE
	EQINT 4
	IFRET
	BLKDROP 4
	; end for
	; expValue
	; end expValue
	;; push identifier total
	PUSH S2
	;; push identifier confirmations
	PUSH S2
	;; -
	SUB
	UFITS 16
	; colValue
	NIP
	; end colValue
	;; push identifier vote
	PUSH S8
	; expValue
	;; fetch eventConfigurationVotes
	GETGLOB 13
	;; push identifier eventConfiguration
	PUSH S11
	SWAP
	PUSH2 S1, S0
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDDICT
	}
	PUSHCONT {
		NEWDICT
	}
	IFELSE
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	SWAP
	; end expValue
	BLKSWAP 1, 4
	; colValue
	NEWC
	STI 1
	ROTREV
	PUSHINT 256
	DICTUSETB
	NEWC
	STDICT
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 13
	; end colValue
	;; emit EventConfigurationCreationVote
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x38f1975f
	;; addr
	;; push identifier eventConfiguration
	PUSH S10
	STSLICER
	;; relayKey
	GETGLOB 5
	DUP
	ISNULL
	PUSHCONT {
		DROP
		PUSHINT 0
	}
	IF
	STUR 256
	;; vote
	;; push identifier vote
	PUSH S9
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
	; expValue
	; end expValue
	;; push identifier confirmations
	PUSH S1
	;; push identifier requiredConfirmations
	PUSH S6
	;; >=
	GEQ
	;; short-circuiting ||
	DUP
	PUSHCONT {
		DROP
		;; push identifier rejects
		DUP
		;; push identifier requiredRejects
		PUSH S5
		;; >=
		GEQ
	}
	IFNOT
	; colValue
	POP S4
	; end colValue
	;; if
	;; !
	;; push identifier hasAlreadyFinished
	PUSH S3
	NOT
	;; push identifier vote
	PUSH S9
	AND
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier confirmations
		PUSH S1
		PUSHINT 1
		;; +
		ADD
		UFITS 16
		;; push identifier requiredConfirmations
		PUSH S6
		;; >=
		GEQ
	}
	IF
	PUSHCONT {
		;; emit EventConfigurationCreationEnd
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x052b7c38
		;; addr
		;; push identifier eventConfiguration
		PUSH S10
		STSLICER
		;; active
		TRUE
		STIR 1
		ENDC
		PUSHINT 1
		SENDRAWMSG
	}
	PUSHCONT {
		;; if
		;; !
		;; push identifier hasAlreadyFinished
		PUSH S3
		NOT
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; !
			;; push identifier vote
			PUSH S8
			NOT
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier rejects
				DUP
				PUSHINT 1
				;; +
				ADD
				UFITS 16
				;; push identifier requiredRejects
				PUSH S5
				;; >=
				GEQ
			}
			IF
		}
		IF
		PUSHCONT {
			;; emit EventConfigurationCreationEnd
			NEWC
			PUSHSLICE xc0000000000000000000000002_
			STSLICER
			STSLICECONST 0
			STSLICECONST 0
			STSLICECONST x052b7c38
			;; addr
			;; push identifier eventConfiguration
			PUSH S10
			STSLICER
			;; active
			FALSE
			STIR 1
			ENDC
			PUSHINT 1
			SENDRAWMSG
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
	BLKDROP 7
}
CALLX
; end function updateEventConfiguration
DROP
; end modifier onlyOwnerKey
DROP2
; end modifier onlyActive

.globl	getDetails
.public	getDetails
.type	getDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getDetails
;; ret param: _bridgeConfiguration
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 7
;; return
;; push identifier bridgeConfiguration
GETGLOB 12
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x9b6d48eb
	PUSH S1
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getDetails_internal
.type	getDetails_internal, @function
; function getDetails
;; ret param: _bridgeConfiguration
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 7
;; return
;; push identifier bridgeConfiguration
GETGLOB 12
NIP
; end function getDetails

.globl	getEventConfigurationStatus
.public	getEventConfigurationStatus
.type	getEventConfigurationStatus, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: eventConfiguration
; function getEventConfigurationStatus
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: status
PUSHINT 0
;; index
;; push identifier eventConfiguration
PUSH S3
;; push identifier eventConfigurationVotes
GETGLOB 13
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; if
;; get member length
;; push identifier rejectKeys
PUSH S1
INDEX 0
;; get member eventConfigurationRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 1
;; >=
GEQ
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	;; if
	;; get member length
	;; push identifier confirmKeys
	PUSH S2
	INDEX 0
	;; get member eventConfigurationRequiredConfirmations
	;; push identifier bridgeConfiguration
	GETGLOB 12
	INDEX 0
	;; >=
	GEQ
	PUSHCONT {
		; expValue
		; end expValue
		TRUE
		; colValue
		NIP
		; end colValue
	}
	IF
	;; end if
}
IFELSE
;; end if
;; returning named params
BLKSWAP 1, 3
DROP
;; emitting 3 value(s)
PUSH S3
EQINT -1
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xfdaad743
	PUSH S3
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 3
; end function getEventConfigurationStatus
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getEventConfigurationStatus_internal
.type	getEventConfigurationStatus_internal, @function
;; param: eventConfiguration
; function getEventConfigurationStatus
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: status
PUSHINT 0
;; index
;; push identifier eventConfiguration
PUSH S3
;; push identifier eventConfigurationVotes
GETGLOB 13
PUSHINT 267
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S6
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S7
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; if
;; get member length
;; push identifier rejectKeys
PUSH S1
INDEX 0
;; get member eventConfigurationRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 1
;; >=
GEQ
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	;; if
	;; get member length
	;; push identifier confirmKeys
	PUSH S2
	INDEX 0
	;; get member eventConfigurationRequiredConfirmations
	;; push identifier bridgeConfiguration
	GETGLOB 12
	INDEX 0
	;; >=
	GEQ
	PUSHCONT {
		; expValue
		; end expValue
		TRUE
		; colValue
		NIP
		; end colValue
	}
	IF
	;; end if
}
IFELSE
;; end if
;; returning named params
BLKSWAP 1, 3
DROP
; end function getEventConfigurationStatus

.globl	getActiveEventConfigurations
.public	getActiveEventConfigurations
.type	getActiveEventConfigurations, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getActiveEventConfigurations
;; ret param: contracts
PUSHINT 0
NEWDICT
PAIR
;; get member eventConfigurationRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 1
;; decl: requiredRejects
;; get member eventConfigurationRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 0
;; decl: requiredConfirmations
;; push identifier eventConfigurationVotes
GETGLOB 13
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDDICT
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	PUSHINT 0
	;; decl: total
	PUSHINT 0
	;; decl: confirmations
	;; push identifier votes
	PUSH S3
	DUP
	PUSHINT 256
	DICTUMIN
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		NULL
		NULL
	}
	PUSHCONT {
		UNTUPLE 2
		PUSH S1
	}
	IFELSE
	PUSHCONT {
		DUP
		ISNULL
		NOT
	}
	PUSHCONT {
		PUSHINT 1
		; expValue
		PUSH S6
		; end expValue
		SWAP
		ADD
		UFITS 16
		; colValue
		POP S6
		; end colValue
		;; if
		;; push identifier vote
		PUSH S1
		PUSHCONT {
			PUSHINT 1
			; expValue
			PUSH S5
			; end expValue
			SWAP
			ADD
			UFITS 16
			; colValue
			POP S5
			; end colValue
		}
		IF
		;; end if
		DUP
		PUSH S4
		PUSHINT 256
		DICTUGETNEXT
		NULLSWAPIFNOT
		PUSHCONT {
			SWAP
			PLDI 1
			TUPLE 2
		}
		IF
		DUP
		ISNULL
		PUSHCONT {
			POP S1
		}
		PUSHCONT {
			UNTUPLE 2
			POP S3
			DUP
			POP S4
			POP S1
		}
		IFELSE
	}
	WHILE
	BLKDROP 4
	; end for
	;; if
	;; push identifier confirmations
	DUP
	;; push identifier requiredConfirmations
	PUSH S7
	;; >=
	GEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier total
		PUSH S1
		;; push identifier confirmations
		PUSH S1
		;; -
		SUB
		UFITS 16
		;; push identifier requiredRejects
		PUSH S8
		;; <
		LESS
	}
	IF
	PUSHCONT {
		; expValue
		PUSH S8
		; end expValue
		;; push identifier addr
		PUSH S5
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S9
		; end colValue
	}
	IF
	;; end if
	DROP2
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDDICT
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
DROP2
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xabf4c988
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getActiveEventConfigurations
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getActiveEventConfigurations_internal
.type	getActiveEventConfigurations_internal, @function
; function getActiveEventConfigurations
;; ret param: contracts
PUSHINT 0
NEWDICT
PAIR
;; get member eventConfigurationRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 1
;; decl: requiredRejects
;; get member eventConfigurationRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 0
;; decl: requiredConfirmations
;; push identifier eventConfigurationVotes
GETGLOB 13
DUP
PUSHINT 267
DICTMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDDICT
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	PUSHINT 0
	;; decl: total
	PUSHINT 0
	;; decl: confirmations
	;; push identifier votes
	PUSH S3
	DUP
	PUSHINT 256
	DICTUMIN
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		NULL
		NULL
	}
	PUSHCONT {
		UNTUPLE 2
		PUSH S1
	}
	IFELSE
	PUSHCONT {
		DUP
		ISNULL
		NOT
	}
	PUSHCONT {
		PUSHINT 1
		; expValue
		PUSH S6
		; end expValue
		SWAP
		ADD
		UFITS 16
		; colValue
		POP S6
		; end colValue
		;; if
		;; push identifier vote
		PUSH S1
		PUSHCONT {
			PUSHINT 1
			; expValue
			PUSH S5
			; end expValue
			SWAP
			ADD
			UFITS 16
			; colValue
			POP S5
			; end colValue
		}
		IF
		;; end if
		DUP
		PUSH S4
		PUSHINT 256
		DICTUGETNEXT
		NULLSWAPIFNOT
		PUSHCONT {
			SWAP
			PLDI 1
			TUPLE 2
		}
		IF
		DUP
		ISNULL
		PUSHCONT {
			POP S1
		}
		PUSHCONT {
			UNTUPLE 2
			POP S3
			DUP
			POP S4
			POP S1
		}
		IFELSE
	}
	WHILE
	BLKDROP 4
	; end for
	;; if
	;; push identifier confirmations
	DUP
	;; push identifier requiredConfirmations
	PUSH S7
	;; >=
	GEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier total
		PUSH S1
		;; push identifier confirmations
		PUSH S1
		;; -
		SUB
		UFITS 16
		;; push identifier requiredRejects
		PUSH S8
		;; <
		LESS
	}
	IF
	PUSHCONT {
		; expValue
		PUSH S8
		; end expValue
		;; push identifier addr
		PUSH S5
		;; array.push(..)
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSET
		PAIR
		; colValue
		POP S9
		; end colValue
	}
	IF
	;; end if
	DROP2
	DUP
	PUSH S4
	PUSHINT 267
	DICTGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDDICT
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
DROP2
; end function getActiveEventConfigurations

.globl	confirmEthereumEvent
.public	confirmEthereumEvent
.type	confirmEthereumEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: eventConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmEthereumEvent
ACCEPT
;; push identifier eventConfiguration
PUSH S1
CALL $_requireOnlyActiveEventConfiguration_internal$
;; Remote call EthereumEventConfiguration.confirmEvent
;; push identifier eventConfiguration
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x246a9cbc
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STUR 256
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
NEWC
;; eventBlock
;; push identifier eventBlock
PUSH S5
STUR 256
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	confirmEthereumEvent_internal
.type	confirmEthereumEvent_internal, @function
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: eventConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmEthereumEvent
ACCEPT
;; push identifier eventConfiguration
PUSH S1
CALL $_requireOnlyActiveEventConfiguration_internal$
;; Remote call EthereumEventConfiguration.confirmEvent
;; push identifier eventConfiguration
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x246a9cbc
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STUR 256
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
NEWC
;; eventBlock
;; push identifier eventBlock
PUSH S5
STUR 256
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmEthereumEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive

.globl	rejectEthereumEvent
.public	rejectEthereumEvent
.type	rejectEthereumEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: eventConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function rejectEthereumEvent
ACCEPT
;; push identifier eventConfiguration
PUSH S1
CALL $_requireOnlyActiveEventConfiguration_internal$
;; Remote call EthereumEventConfiguration.rejectEvent
;; push identifier eventConfiguration
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x3b26aa04
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STUR 256
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
NEWC
;; eventBlock
;; push identifier eventBlock
PUSH S5
STUR 256
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	rejectEthereumEvent_internal
.type	rejectEthereumEvent_internal, @function
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: eventConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function rejectEthereumEvent
ACCEPT
;; push identifier eventConfiguration
PUSH S1
CALL $_requireOnlyActiveEventConfiguration_internal$
;; Remote call EthereumEventConfiguration.rejectEvent
;; push identifier eventConfiguration
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x3b26aa04
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STUR 256
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
NEWC
;; eventBlock
;; push identifier eventBlock
PUSH S5
STUR 256
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectEthereumEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive

.globl	confirmTonEvent
.public	confirmTonEvent
.type	confirmTonEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventData
;; decode TvmCell
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventDataSignature
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode eventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: eventDataSignature
;; param: eventConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmTonEvent
ACCEPT
;; push identifier eventConfiguration
PUSH S1
CALL $_requireOnlyActiveEventConfiguration_internal$
;; Remote call TonEventConfiguration.confirmEvent
;; push identifier eventConfiguration
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x1c4c8ff0
;; eventTransaction
;; push identifier eventTransaction
PUSH S9
STUR 256
;; eventIndex
;; push identifier eventIndex
PUSH S8
STUR 256
;; eventData
;; push identifier eventData
PUSH S7
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S6
STUR 256
NEWC
;; eventBlock
;; push identifier eventBlock
PUSH S6
STUR 256
;; eventDataSignature
;; push identifier eventDataSignature
PUSH S5
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmTonEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 7
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	confirmTonEvent_internal
.type	confirmTonEvent_internal, @function
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: eventDataSignature
;; param: eventConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function confirmTonEvent
ACCEPT
;; push identifier eventConfiguration
PUSH S1
CALL $_requireOnlyActiveEventConfiguration_internal$
;; Remote call TonEventConfiguration.confirmEvent
;; push identifier eventConfiguration
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x1c4c8ff0
;; eventTransaction
;; push identifier eventTransaction
PUSH S9
STUR 256
;; eventIndex
;; push identifier eventIndex
PUSH S8
STUR 256
;; eventData
;; push identifier eventData
PUSH S7
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S6
STUR 256
NEWC
;; eventBlock
;; push identifier eventBlock
PUSH S6
STUR 256
;; eventDataSignature
;; push identifier eventDataSignature
PUSH S5
STREFR
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function confirmTonEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 7
; end modifier onlyActive

.globl	rejectTonEvent
.public	rejectTonEvent
.type	rejectTonEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventTransaction
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode eventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: eventConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function rejectTonEvent
ACCEPT
;; push identifier eventConfiguration
PUSH S1
CALL $_requireOnlyActiveEventConfiguration_internal$
;; Remote call TonEventConfiguration.rejectEvent
;; push identifier eventConfiguration
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x3b26aa04
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STUR 256
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
NEWC
;; eventBlock
;; push identifier eventBlock
PUSH S5
STUR 256
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectTonEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	rejectTonEvent_internal
.type	rejectTonEvent_internal, @function
;; param: eventTransaction
;; param: eventIndex
;; param: eventData
;; param: eventBlockNumber
;; param: eventBlock
;; param: eventConfiguration
; modifier onlyActive
PUSHINT 12312
;; get member active
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 6
TRUE
;; ==
EQUAL
THROWANYIFNOT
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function rejectTonEvent
ACCEPT
;; push identifier eventConfiguration
PUSH S1
CALL $_requireOnlyActiveEventConfiguration_internal$
;; Remote call TonEventConfiguration.rejectEvent
;; push identifier eventConfiguration
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x3b26aa04
;; eventTransaction
;; push identifier eventTransaction
PUSH S8
STUR 256
;; eventIndex
;; push identifier eventIndex
PUSH S7
STUR 256
;; eventData
;; push identifier eventData
PUSH S6
STREFR
;; eventBlockNumber
;; push identifier eventBlockNumber
PUSH S5
STUR 256
NEWC
;; eventBlock
;; push identifier eventBlock
PUSH S5
STUR 256
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function rejectTonEvent
DROP
; end modifier onlyOwnerKey
BLKDROP 6
; end modifier onlyActive

.globl	getVotingDirection
.public	getVotingDirection
.type	getVotingDirection, @function
; Decode input parameters
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; decode Vote.payload
LDREF
;; build struct Vote ss:3
ROTREV
TUPLE 2
SWAP
ENDS
;; param: _vote
; function getVotingDirection
;; ret param: vote
PUSHINT 0
;; if
;; get member length
;; get member signature
;; push identifier _vote
PUSH S1
INDEX 0
CTOS
SBITS
RSHIFT 3
EQINT 0
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; returning named params
SWAP
DROP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xc41839ac
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getVotingDirection
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getVotingDirection_internal
.type	getVotingDirection_internal, @function
;; param: _vote
; function getVotingDirection
;; ret param: vote
PUSHINT 0
;; if
;; get member length
;; get member signature
;; push identifier _vote
PUSH S1
INDEX 0
CTOS
SBITS
RSHIFT 3
EQINT 0
PUSHCONT {
	; expValue
	; end expValue
	FALSE
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; returning named params
SWAP
DROP
; end function getVotingDirection

.globl	updateBridgeConfiguration
.public	updateBridgeConfiguration
.type	updateBridgeConfiguration, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.eventConfigurationRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.eventConfigurationRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:8
BLKSWAP 7, 1
TUPLE 7
SWAP
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
LDREF
;; decode Vote.payload
LDREF
;; build struct Vote ss:4
ROTREV
TUPLE 2
SWAP
ENDS
;; param: _bridgeConfiguration
;; param: _vote
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateBridgeConfiguration
ACCEPT
;; emit BridgeConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x60ef2009
;; _bridgeConfiguration
;; push identifier _bridgeConfiguration
PUSH S3
UNTUPLE 7
BLKSWAP 1, 7
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; vote
;; push identifier _vote
PUSH S2
UNTUPLE 2
ROT
PUSH S2
STREFR
PUSH S1
STREFR
NIP
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S1
CALL $getVotingDirection_internal$
;; decl: vote
;; push identifier vote
DUP
; expValue
;; fetch bridgeConfigurationVotes
GETGLOB 14
;; push identifier _bridgeConfiguration
PUSH S5
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 97
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
NEWC
STDICT
ROTREV
PUSHINT 97
DICTSETB
SETGLOB 14
; end colValue
;; push identifier _bridgeConfiguration
PUSH S3
CALL $getBridgeConfigurationVotes_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S1
INDEX 0
;; get member bridgeConfigurationUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 2
;; ==
EQUAL
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier _bridgeConfiguration
	PUSH S5
	; colValue
	SETGLOB 12
	; end colValue
	;; push identifier _bridgeConfiguration
	PUSH S5
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x1b2e837c
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S6
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
DUP
INDEX 0
;; get member bridgeConfigurationUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 3
;; ==
EQUAL
PUSHCONT {
	;; push identifier _bridgeConfiguration
	PUSH S5
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x1b2e837c
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S6
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeConfiguration
BLKDROP 3
; end modifier onlyOwnerKey
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	updateBridgeConfiguration_internal
.type	updateBridgeConfiguration_internal, @function
;; param: _bridgeConfiguration
;; param: _vote
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateBridgeConfiguration
ACCEPT
;; emit BridgeConfigurationUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x60ef2009
;; _bridgeConfiguration
;; push identifier _bridgeConfiguration
PUSH S3
UNTUPLE 7
BLKSWAP 1, 7
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; vote
;; push identifier _vote
PUSH S2
UNTUPLE 2
ROT
PUSH S2
STREFR
PUSH S1
STREFR
NIP
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S1
CALL $getVotingDirection_internal$
;; decl: vote
;; push identifier vote
DUP
; expValue
;; fetch bridgeConfigurationVotes
GETGLOB 14
;; push identifier _bridgeConfiguration
PUSH S5
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 97
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
NEWC
STDICT
ROTREV
PUSHINT 97
DICTSETB
SETGLOB 14
; end colValue
;; push identifier _bridgeConfiguration
PUSH S3
CALL $getBridgeConfigurationVotes_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S1
INDEX 0
;; get member bridgeConfigurationUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 2
;; ==
EQUAL
PUSHCONT {
	; expValue
	; end expValue
	;; push identifier _bridgeConfiguration
	PUSH S5
	; colValue
	SETGLOB 12
	; end colValue
	;; push identifier _bridgeConfiguration
	PUSH S5
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x1b2e837c
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S6
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
DUP
INDEX 0
;; get member bridgeConfigurationUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 3
;; ==
EQUAL
PUSHCONT {
	;; push identifier _bridgeConfiguration
	PUSH S5
	CALL $_removeBridgeConfigurationVoting_internal$
	;; emit BridgeConfigurationUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x1b2e837c
	;; _bridgeConfiguration
	;; push identifier _bridgeConfiguration
	PUSH S6
	UNTUPLE 7
	BLKSWAP 1, 7
	PUSH S7
	STUR 16
	PUSH S6
	STUR 16
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STUR 16
	PUSH S2
	STUR 16
	PUSH S1
	STIR 1
	XCHG s7
	BLKDROP 7
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeConfiguration
BLKDROP 3
; end modifier onlyOwnerKey

.globl	_removeBridgeConfigurationVoting_internal
.type	_removeBridgeConfigurationVoting_internal, @function
;; param: _bridgeConfiguration
; function _removeBridgeConfigurationVoting
;; delete
; expValue
;; fetch bridgeConfigurationVotes
GETGLOB 14
;; push identifier _bridgeConfiguration
PUSH S1
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 97
DICTDEL
DROP
; colValue
NIP
SETGLOB 14
; end colValue
DROP
; end function _removeBridgeConfigurationVoting

.globl	getBridgeConfigurationVotes
.public	getBridgeConfigurationVotes
.type	getBridgeConfigurationVotes, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _bridgeConfiguration
;; decode struct BridgeConfiguration _bridgeConfiguration
;; decode BridgeConfiguration.eventConfigurationRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.eventConfigurationRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeConfigurationUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredConfirmations
LDU 16
;; decode BridgeConfiguration.bridgeRelayUpdateRequiredRejects
LDU 16
;; decode BridgeConfiguration.active
LDI 1
;; build struct BridgeConfiguration ss:8
BLKSWAP 7, 1
TUPLE 7
SWAP
ENDS
;; param: _bridgeConfiguration
; function getBridgeConfigurationVotes
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier _bridgeConfiguration
PUSH S2
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
;; push identifier bridgeConfigurationVotes
GETGLOB 14
PUSHINT 97
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xe2b6670a
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function getBridgeConfigurationVotes
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getBridgeConfigurationVotes_internal
.type	getBridgeConfigurationVotes_internal, @function
;; param: _bridgeConfiguration
; function getBridgeConfigurationVotes
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier _bridgeConfiguration
PUSH S2
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
ENDC
CTOS
;; push identifier bridgeConfigurationVotes
GETGLOB 14
PUSHINT 97
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
; end function getBridgeConfigurationVotes

.globl	updateBridgeRelays
.public	updateBridgeRelays
.type	updateBridgeRelays, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode target
;; decode struct BridgeRelay target
;; decode BridgeRelay.key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeRelay.action
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeRelay ss:3
ROTREV
TUPLE 2
SWAP
; Decode _vote
;; decode struct Vote _vote
;; decode Vote.signature
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode Vote.payload
LDREF
;; build struct Vote ss:4
ROTREV
TUPLE 2
SWAP
ENDS
;; param: target
;; param: _vote
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateBridgeRelays
ACCEPT
;; emit BridgeRelaysUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7f8982ca
;; target
;; push identifier target
PUSH S3
UNTUPLE 2
ROT
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; vote
;; push identifier _vote
PUSH S2
UNTUPLE 2
ROT
PUSH S2
STREFR
PUSH S1
STREFR
NIP
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S1
CALL $getVotingDirection_internal$
;; decl: vote
;; push identifier vote
DUP
; expValue
;; fetch bridgeRelayVotes
GETGLOB 15
;; push identifier target
PUSH S5
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 257
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
NEWC
STDICT
ROTREV
PUSHINT 257
DICTSETB
SETGLOB 15
; end colValue
;; push identifier target
PUSH S3
CALL $getBridgeRelayVotes_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S1
INDEX 0
;; get member bridgeRelayUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 4
;; ==
EQUAL
PUSHCONT {
	;; if
	;; get member action
	;; push identifier target
	PUSH S5
	INDEX 1
	PUSHCONT {
		;; get member key
		;; push identifier target
		PUSH S5
		INDEX 0
		CALL $_grantOwnership_internal$
	}
	PUSHCONT {
		;; get member key
		;; push identifier target
		PUSH S5
		INDEX 0
		CALL $_removeOwnership_internal$
	}
	IFELSE
	;; end if
	;; push identifier target
	PUSH S5
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6f5bc3fe
	;; target
	;; push identifier target
	PUSH S6
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 256
	PUSH S1
	STIR 1
	NIP
	NIP
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
DUP
INDEX 0
;; get member bridgeRelayUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 5
;; ==
EQUAL
PUSHCONT {
	;; push identifier target
	PUSH S5
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6f5bc3fe
	;; target
	;; push identifier target
	PUSH S6
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 256
	PUSH S1
	STIR 1
	NIP
	NIP
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeRelays
BLKDROP 3
; end modifier onlyOwnerKey
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	updateBridgeRelays_internal
.type	updateBridgeRelays_internal, @function
;; param: target
;; param: _vote
; modifier onlyOwnerKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; index
;; push identifier key
DUP
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
TRUE
;; ==
EQUAL
THROWIFNOT 303
; function updateBridgeRelays
ACCEPT
;; emit BridgeRelaysUpdateVote
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7f8982ca
;; target
;; push identifier target
PUSH S3
UNTUPLE 2
ROT
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
;; relayKey
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
STUR 256
;; vote
;; push identifier _vote
PUSH S2
UNTUPLE 2
ROT
PUSH S2
STREFR
PUSH S1
STREFR
NIP
NIP
ENDC
PUSHINT 1
SENDRAWMSG
;; push identifier _vote
PUSH S1
CALL $getVotingDirection_internal$
;; decl: vote
;; push identifier vote
DUP
; expValue
;; fetch bridgeRelayVotes
GETGLOB 15
;; push identifier target
PUSH S5
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
SWAP
PUSH2 S1, S0
PUSHINT 257
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
SWAP
; end expValue
BLKSWAP 1, 4
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
NEWC
STDICT
ROTREV
PUSHINT 257
DICTSETB
SETGLOB 15
; end colValue
;; push identifier target
PUSH S3
CALL $getBridgeRelayVotes_internal$
;; decl: confirmKeys
;; decl: rejectKeys
;; if
;; get member length
;; push identifier confirmKeys
PUSH S1
INDEX 0
;; get member bridgeRelayUpdateRequiredConfirmations
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 4
;; ==
EQUAL
PUSHCONT {
	;; if
	;; get member action
	;; push identifier target
	PUSH S5
	INDEX 1
	PUSHCONT {
		;; get member key
		;; push identifier target
		PUSH S5
		INDEX 0
		CALL $_grantOwnership_internal$
	}
	PUSHCONT {
		;; get member key
		;; push identifier target
		PUSH S5
		INDEX 0
		CALL $_removeOwnership_internal$
	}
	IFELSE
	;; end if
	;; push identifier target
	PUSH S5
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6f5bc3fe
	;; target
	;; push identifier target
	PUSH S6
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 256
	PUSH S1
	STIR 1
	NIP
	NIP
	;; status
	TRUE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; get member length
;; push identifier rejectKeys
DUP
INDEX 0
;; get member bridgeRelayUpdateRequiredRejects
;; push identifier bridgeConfiguration
GETGLOB 12
INDEX 5
;; ==
EQUAL
PUSHCONT {
	;; push identifier target
	PUSH S5
	CALL $_removeBridgeRelayVoting_internal$
	;; emit BridgeRelaysUpdateEnd
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6f5bc3fe
	;; target
	;; push identifier target
	PUSH S6
	UNTUPLE 2
	ROT
	PUSH S2
	STUR 256
	PUSH S1
	STIR 1
	NIP
	NIP
	;; status
	FALSE
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
BLKDROP 3
; end function updateBridgeRelays
BLKDROP 3
; end modifier onlyOwnerKey

.globl	getBridgeRelayVotes
.public	getBridgeRelayVotes
.type	getBridgeRelayVotes, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode target
;; decode struct BridgeRelay target
;; decode BridgeRelay.key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode BridgeRelay.action
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
;; build struct BridgeRelay ss:3
ROTREV
TUPLE 2
SWAP
ENDS
;; param: target
; function getBridgeRelayVotes
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier target
PUSH S2
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
;; push identifier bridgeRelayVotes
GETGLOB 15
PUSHINT 257
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xb4759f7e
	PUSH S2
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	PUSH S1
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function getBridgeRelayVotes
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getBridgeRelayVotes_internal
.type	getBridgeRelayVotes_internal, @function
;; param: target
; function getBridgeRelayVotes
;; ret param: confirmKeys
PUSHINT 0
NEWDICT
PAIR
;; ret param: rejectKeys
PUSHINT 0
NEWDICT
PAIR
;; index
;; push identifier target
PUSH S2
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
;; push identifier bridgeRelayVotes
GETGLOB 15
PUSHINT 257
DICTGET
PUSHCONT {
	PLDDICT
}
PUSHCONT {
	NEWDICT
}
IFELSE
DUP
PUSHINT 256
DICTUMIN
NULLSWAPIFNOT
PUSHCONT {
	SWAP
	PLDI 1
	TUPLE 2
}
IF
DUP
ISNULL
PUSHCONT {
	NULL
	NULL
}
PUSHCONT {
	UNTUPLE 2
	PUSH S1
}
IFELSE
PUSHCONT {
	DUP
	ISNULL
	NOT
}
PUSHCONT {
	;; if
	;; push identifier vote
	PUSH S1
	TRUE
	;; ==
	EQUAL
	PUSHCONT {
		; expValue
		PUSH S5
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S6
		; end colValue
	}
	PUSHCONT {
		; expValue
		PUSH S4
		; end expValue
		;; push identifier key
		PUSH S3
		;; array.push(..)
		NEWC
		STU 256
		SWAP
		UNPAIR
		PUSH S1
		INC
		XCHG s3
		ROTREV
		PUSHINT 32
		DICTUSETB
		PAIR
		; colValue
		POP S5
		; end colValue
	}
	IFELSE
	;; end if
	DUP
	PUSH S4
	PUSHINT 256
	DICTUGETNEXT
	NULLSWAPIFNOT
	PUSHCONT {
		SWAP
		PLDI 1
		TUPLE 2
	}
	IF
	DUP
	ISNULL
	PUSHCONT {
		POP S1
	}
	PUSHCONT {
		UNTUPLE 2
		POP S3
		DUP
		POP S4
		POP S1
	}
	IFELSE
}
WHILE
BLKDROP 4
; end for
;; returning named params
ROT
DROP
; end function getBridgeRelayVotes

.globl	_removeBridgeRelayVoting_internal
.type	_removeBridgeRelayVoting_internal, @function
;; param: target
; function _removeBridgeRelayVoting
;; delete
; expValue
;; fetch bridgeRelayVotes
GETGLOB 15
;; push identifier target
PUSH S1
UNTUPLE 2
NEWC
PUSH S2
STUR 256
PUSH S1
STIR 1
NIP
NIP
ENDC
CTOS
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 257
DICTDEL
DROP
; colValue
NIP
SETGLOB 15
; end colValue
DROP
; end function _removeBridgeRelayVoting

.globl	getKeyStatus
.public	getKeyStatus
.type	getKeyStatus, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: key
; function getKeyStatus
;; ret param: _status
PUSHINT 0
;; return
;; index
;; push identifier key
PUSH S1
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x957003d0
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getKeyStatus
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getKeyStatus_internal
.type	getKeyStatus_internal, @function
;; param: key
; function getKeyStatus
;; ret param: _status
PUSHINT 0
;; return
;; index
;; push identifier key
PUSH S1
;; push identifier ownerKeys
GETGLOB 10
PUSHINT 256
DICTUGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
NIP
NIP
; end function getKeyStatus

.globl	_grantOwnership_internal
.type	_grantOwnership_internal, @function
;; param: key
; function _grantOwnership
; expValue
;; fetch ownerKeys
GETGLOB 10
;; push identifier key
PUSH S1
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 10
; end colValue
DROP
; end function _grantOwnership

.globl	_removeOwnership_internal
.type	_removeOwnership_internal, @function
;; param: key
; function _removeOwnership
; expValue
;; fetch ownerKeys
GETGLOB 10
;; push identifier key
PUSH S1
SWAP
; end expValue
FALSE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 256
DICTUSETB
SETGLOB 10
; end colValue
DROP
; end function _removeOwnership

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 13
GETGLOB 14
XCHG s2
STDICT
STDICT
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 15
REVERSE 6, 0
STBREF
STDICT
STU 256
SWAP
UNTUPLE 7
NEWC
PUSH S7
STUR 16
PUSH S6
STUR 16
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STUR 16
PUSH S2
STUR 16
PUSH S1
STIR 1
XCHG s7
BLKDROP 7
STBREFR
STDICT
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDDICT
PLDDICT
SETGLOB 14
SETGLOB 13
LDDICT
LDU 256
LDREFRTOS
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
PLDI 1
TUPLE 7
SETGLOB 12
PLDDICT
SETGLOB 15
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDDICT
	PLDDICT
	SETGLOB 14
	SETGLOB 13
	LDDICT
	LDU 256
	LDREFRTOS
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	PLDI 1
	TUPLE 7
	SETGLOB 12
	PLDDICT
	SETGLOB 15
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init truffleNonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 11
	; init bridgeConfiguration
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	TUPLE 7
	SETGLOB 12
	; init eventConfigurationVotes
	NEWDICT
	SETGLOB 13
	; init bridgeConfigurationVotes
	NEWDICT
	SETGLOB 14
	; init bridgeRelayVotes
	NEWDICT
	SETGLOB 15
	; init ownerKeys
	NEWDICT
	SETGLOB 10
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

