.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode _ethereumEventConfiguration
LDMSGADDR
; Decode _ethereumEventCode
;; decode TvmCell
LDREF
; Decode _ethereumEventPubKey
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: _ethereumEventConfiguration
;; param: _ethereumEventCode
;; param: _ethereumEventPubKey
; constructor EventProxySimple
GETGLOB 2
NEQINT 0
THROWIFNOT 100
ACCEPT
; expValue
; end expValue
;; push identifier _ethereumEventConfiguration
PUSH S2
; colValue
SETGLOB 12
; end colValue
; expValue
; end expValue
;; push identifier _ethereumEventCode
PUSH S1
; colValue
SETGLOB 13
; end colValue
; expValue
; end expValue
;; push identifier _ethereumEventPubKey
DUP
; colValue
SETGLOB 14
; end colValue
BLKDROP 3
; end constructor EventProxySimple
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	buildEventProxyAddress
.public	buildEventProxyAddress
.type	buildEventProxyAddress, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _eventData
;; decode struct EthereumEventInitData _eventData
;; decode EthereumEventInitData.eventTransaction
LDU 256
;; decode EthereumEventInitData.eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode EthereumEventInitData.eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.ethereumEventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode EthereumEventInitData.requiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.requiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.proxyAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct EthereumEventInitData ss:10
BLKSWAP 9, 1
TUPLE 9
SWAP
ENDS
;; param: _eventData
; function buildEventProxyAddress
NEWDICT
;; push identifier ethereumEventPubKey
GETGLOB 14
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier _eventData
PUSH S1
UNTUPLE 9
NEWC
NEWC
PUSH S6
STUR 256
PUSH S5
STSLICER
PUSH S4
STUR 256
STBREFR
NEWC
PUSH S3
STUR 256
PUSH S2
STSLICER
STBREFR
PUSH S9
STUR 256
PUSH S8
STUR 256
PUSH S7
STREFR
PUSH S6
STUR 256
XCHG s9
BLKDROP 9
ENDC
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier ethereumEventCode
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
;; decl: stateInit
;; return
;; push identifier stateInit
DUP
DUP
HASHCU
PUSHINT 0
NEWC
STSLICECONST x9_
STI 8
STU 256
ENDC
CTOS
PUSHINT 0
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
;; push identifier stateInit
PUSH S3
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
NIP
NIP
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xfe7c8bd5
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function buildEventProxyAddress
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	buildEventProxyAddress_internal
.type	buildEventProxyAddress_internal, @function
;; param: _eventData
; function buildEventProxyAddress
NEWDICT
;; push identifier ethereumEventPubKey
GETGLOB 14
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier _eventData
PUSH S1
UNTUPLE 9
NEWC
NEWC
PUSH S6
STUR 256
PUSH S5
STSLICER
PUSH S4
STUR 256
STBREFR
NEWC
PUSH S3
STUR 256
PUSH S2
STSLICER
STBREFR
PUSH S9
STUR 256
PUSH S8
STUR 256
PUSH S7
STREFR
PUSH S6
STUR 256
XCHG s9
BLKDROP 9
ENDC
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier ethereumEventCode
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
;; decl: stateInit
;; return
;; push identifier stateInit
DUP
DUP
HASHCU
PUSHINT 0
NEWC
STSLICECONST x9_
STI 8
STU 256
ENDC
CTOS
PUSHINT 0
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
;; push identifier stateInit
PUSH S3
STREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
NIP
NIP
; end function buildEventProxyAddress

.globl	broxusBridgeCallback
.public	broxusBridgeCallback
.type	broxusBridgeCallback, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _eventData
;; decode struct EthereumEventInitData _eventData
;; decode EthereumEventInitData.eventTransaction
LDU 256
;; decode EthereumEventInitData.eventIndex
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventData
;; decode TvmCell
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode EthereumEventInitData.eventBlockNumber
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.ethereumEventConfiguration
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode EthereumEventInitData.requiredConfirmations
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.requiredRejects
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode EthereumEventInitData.proxyAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct EthereumEventInitData ss:10
BLKSWAP 9, 1
TUPLE 9
SWAP
ENDS
;; param: _eventData
; function broxusBridgeCallback
PUSHINT 19173
;; get member ethereumEventConfiguration
;; push identifier _eventData
PUSH S1
INDEX 5
;; push identifier ethereumEventConfiguration
GETGLOB 12
SDEQ
THROWANYIFNOT
PUSHINT 19172
;; get member proxyAddress
;; push identifier _eventData
PUSH S1
INDEX 8
MYADDR
SDEQ
THROWANYIFNOT
PUSHINT 19171
;; push identifier _eventData
PUSH S1
CALL $buildEventProxyAddress_internal$
;; get member sender
GETGLOB 9
SDEQ
THROWANYIFNOT
; expValue
; end expValue
TRUE
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; push identifier _eventData
DUP
; colValue
SETGLOB 16
; end colValue
;; get member eventData
;; push identifier _eventData
DUP
INDEX 2
CTOS
LDU 256
; colValue
DROP
; expValue
; end expValue
; colValue
SETGLOB 15
; end colValue
DROP
; end function broxusBridgeCallback
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	broxusBridgeCallback_internal
.type	broxusBridgeCallback_internal, @function
;; param: _eventData
; function broxusBridgeCallback
PUSHINT 19173
;; get member ethereumEventConfiguration
;; push identifier _eventData
PUSH S1
INDEX 5
;; push identifier ethereumEventConfiguration
GETGLOB 12
SDEQ
THROWANYIFNOT
PUSHINT 19172
;; get member proxyAddress
;; push identifier _eventData
PUSH S1
INDEX 8
MYADDR
SDEQ
THROWANYIFNOT
PUSHINT 19171
;; push identifier _eventData
PUSH S1
CALL $buildEventProxyAddress_internal$
;; get member sender
GETGLOB 9
SDEQ
THROWANYIFNOT
; expValue
; end expValue
TRUE
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; push identifier _eventData
DUP
; colValue
SETGLOB 16
; end colValue
;; get member eventData
;; push identifier _eventData
DUP
INDEX 2
CTOS
LDU 256
; colValue
DROP
; expValue
; end expValue
; colValue
SETGLOB 15
; end colValue
DROP
; end function broxusBridgeCallback

.globl	getDetails
.public	getDetails
.type	getDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getDetails
;; ret param: _callbackReceived
PUSHINT 0
;; ret param: _ethereumEventConfiguration
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: _ethereumEventCode
NEWC
ENDC
;; ret param: _eventData
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 9
;; ret param: _state
PUSHINT 0
;; return
;; push identifier callbackReceived
GETGLOB 11
;; push identifier ethereumEventConfiguration
GETGLOB 12
;; push identifier ethereumEventCode
GETGLOB 13
;; push identifier eventData
GETGLOB 16
;; push identifier state
GETGLOB 15
BLKDROP2 5, 5
;; emitting 5 value(s)
PUSH S5
EQINT -1
PUSHCONT {
	PUSH S7
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xf9c9aa51
	PUSH S6
	STIR 1
	PUSH S5
	STSLICER
	PUSH S4
	STREFR
	PUSH S3
	UNTUPLE 9
	BLKSWAP 1, 9
	PUSH S9
	STUR 256
	PUSH S8
	STUR 256
	PUSH S7
	STREFR
	NEWC
	PUSH S7
	STUR 256
	PUSH S6
	STUR 256
	PUSH S5
	STSLICER
	NEWC
	PUSH S5
	STUR 256
	PUSH S4
	STUR 256
	PUSH S3
	STSLICER
	BLKDROP2 9, 3
	NEWC
	PUSH S5
	STUR 256
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
BLKDROP 5
; end function getDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getDetails_internal
.type	getDetails_internal, @function
; function getDetails
;; ret param: _callbackReceived
PUSHINT 0
;; ret param: _ethereumEventConfiguration
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: _ethereumEventCode
NEWC
ENDC
;; ret param: _eventData
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 9
;; ret param: _state
PUSHINT 0
;; return
;; push identifier callbackReceived
GETGLOB 11
;; push identifier ethereumEventConfiguration
GETGLOB 12
;; push identifier ethereumEventCode
GETGLOB 13
;; push identifier eventData
GETGLOB 16
;; push identifier state
GETGLOB 15
BLKDROP2 5, 5
; end function getDetails

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 14
GETGLOB 15
XCHG s2
STU 256
STU 256
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 16
REVERSE 7, 0
STBREF
STU 256
STI 1
STSLICE
STREF
SWAP
UNTUPLE 9
NEWC
NEWC
PUSH S6
STUR 256
PUSH S5
STSLICER
PUSH S4
STUR 256
STBREFR
NEWC
PUSH S3
STUR 256
PUSH S2
STSLICER
STBREFR
PUSH S9
STUR 256
PUSH S8
STUR 256
PUSH S7
STREFR
PUSH S6
STUR 256
XCHG s9
BLKDROP 9
STBREFR
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDU 256
PLDU 256
SETGLOB 15
SETGLOB 14
LDU 256
LDI 1
LDMSGADDR
LDREF
LDREFRTOS
NIP
LDREF
LDREF
LDU 256
LDU 256
LDREF
PLDU 256
BLKSWAP 1, 5
CTOS
LDU 256
LDMSGADDR
PLDU 256
BLKSWAP 1, 7
CTOS
LDU 256
TUPLE 9
SETGLOB 16
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDU 256
	PLDU 256
	SETGLOB 15
	SETGLOB 14
	LDU 256
	LDI 1
	LDMSGADDR
	LDREF
	LDREFRTOS
	NIP
	LDREF
	LDREF
	LDU 256
	LDU 256
	LDREF
	PLDU 256
	BLKSWAP 1, 5
	CTOS
	LDU 256
	LDMSGADDR
	PLDU 256
	BLKSWAP 1, 7
	CTOS
	LDU 256
	TUPLE 9
	SETGLOB 16
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _randomNonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 256
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 10
	; init callbackReceived
	PUSHINT 0
	SETGLOB 11
	; init ethereumEventConfiguration
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 12
	; init ethereumEventCode
	NEWC
	ENDC
	SETGLOB 13
	; init ethereumEventPubKey
	PUSHINT 0
	SETGLOB 14
	; init state
	PUSHINT 0
	SETGLOB 15
	; init eventData
	PUSHINT 0
	PUSHINT 0
	NEWC
	ENDC
	PUSHINT 0
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	PUSHINT 0
	PUSHINT 0
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	TUPLE 9
	SETGLOB 16
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: callbackReceived
	FALSE
	SETGLOB 11
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

