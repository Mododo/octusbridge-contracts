.globl	constructor
.public	constructor
.type	constructor, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7_with_init_storage$
}
IF
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
ENDS
; constructor EthereumEventConfiguration
;; push identifier WRONG_TVM_KEY
GETGLOB 25
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
GETGLOB 2
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
EQUAL
THROWANYIFNOT
ACCEPT
; end constructor EthereumEventConfiguration
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	buildEventInitData_internal
.type	buildEventInitData_internal, @function
;; param: eventVoteData
; function buildEventInitData
;; ret param: eventInitData
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 9
; expValue
DUP
; end expValue
;; get member eventTransaction
;; push identifier eventVoteData
PUSH S2
INDEX 0
; colValue
SETINDEX 0
NIP
; end colValue
; expValue
DUP
; end expValue
;; get member eventIndex
;; push identifier eventVoteData
PUSH S2
INDEX 1
; colValue
SETINDEX 1
NIP
; end colValue
; expValue
DUP
; end expValue
;; get member eventData
;; push identifier eventVoteData
PUSH S2
INDEX 2
; colValue
SETINDEX 2
NIP
; end colValue
; expValue
DUP
; end expValue
;; get member eventBlockNumber
;; push identifier eventVoteData
PUSH S2
INDEX 3
; colValue
SETINDEX 3
NIP
; end colValue
; expValue
DUP
; end expValue
;; get member eventBlock
;; push identifier eventVoteData
PUSH S2
INDEX 4
; colValue
SETINDEX 4
NIP
; end colValue
MYADDR
; expValue
PUSH S1
; end expValue
SWAP
; colValue
SETINDEX 5
NIP
; end colValue
; expValue
DUP
; end expValue
;; get member eventRequiredConfirmations
;; push identifier basicInitData
GETGLOB 26
INDEX 1
; colValue
SETINDEX 6
NIP
; end colValue
; expValue
DUP
; end expValue
;; get member eventRequiredConfirmations
;; push identifier basicInitData
GETGLOB 26
INDEX 1
; colValue
SETINDEX 7
NIP
; end colValue
; expValue
DUP
; end expValue
;; get member proxyAddress
;; push identifier initData
GETGLOB 27
INDEX 2
; colValue
SETINDEX 8
NIP
; end colValue
;; returning named params
SWAP
DROP
; end function buildEventInitData

.globl	confirmEvent
.public	confirmEvent
.type	confirmEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventVoteData
;; decode struct EthereumEventVoteData eventVoteData
;; decode EthereumEventVoteData.eventTransaction
LDU 256
;; decode EthereumEventVoteData.eventIndex
LDU 32
;; decode EthereumEventVoteData.eventData
;; decode TvmCell
LDREF
;; decode EthereumEventVoteData.eventBlockNumber
LDU 32
;; decode EthereumEventVoteData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; build struct EthereumEventVoteData ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode relay
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: eventVoteData
;; param: relay
; modifier onlyBridge
;; push identifier SENDER_NOT_BRIDGE
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
SDEQ
THROWANYIFNOT
; modifier transferAfter
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
;; get member value
CALL $message_balance_macro$
; function confirmEvent
;; push identifier eventVoteData
PUSH S3
CALL $buildEventInitData_internal$
;; decl: eventInitData
NEWDICT
GETGLOB 2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier eventInitData
PUSH S1
UNTUPLE 9
NEWC
NEWC
PUSH S2
STSLICER
STBREFR
PUSH S9
STUR 256
PUSH S8
STUR 32
PUSH S7
STREFR
PUSH S6
STUR 32
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
STUR 16
PUSH S2
STUR 16
XCHG s9
BLKDROP 9
ENDC
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; get member eventCode
;; push identifier basicInitData
GETGLOB 26
INDEX 3
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; get member eventInitialBalance
;; push identifier basicInitData
GETGLOB 26
INDEX 5
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 0
STSLICECONST x475654dc
;; relay
;; push identifier relay
PUSH S6
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: ethereumEventAddress
;; Remote call EthereumEvent.confirm
;; push identifier ethereumEventAddress
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x798abd68
;; relay
;; push identifier relay
PUSH S5
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
;; emit EventConfirmation
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x55939077
;; addr
;; push identifier ethereumEventAddress
PUSH S1
STSLICER
;; relay
;; push identifier relay
PUSH S5
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function confirmEvent
;; transfer()
;; push identifier value
DUP
;; push identifier receiver
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end modifier transferAfter
DROP2
; end modifier onlyBridge
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	confirmEvent_internal
.type	confirmEvent_internal, @function
;; param: eventVoteData
;; param: relay
; modifier onlyBridge
;; push identifier SENDER_NOT_BRIDGE
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
SDEQ
THROWANYIFNOT
; modifier transferAfter
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
;; get member value
CALL $message_balance_macro$
; function confirmEvent
;; push identifier eventVoteData
PUSH S3
CALL $buildEventInitData_internal$
;; decl: eventInitData
NEWDICT
GETGLOB 2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier eventInitData
PUSH S1
UNTUPLE 9
NEWC
NEWC
PUSH S2
STSLICER
STBREFR
PUSH S9
STUR 256
PUSH S8
STUR 32
PUSH S7
STREFR
PUSH S6
STUR 32
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
STUR 16
PUSH S2
STUR 16
XCHG s9
BLKDROP 9
ENDC
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; get member eventCode
;; push identifier basicInitData
GETGLOB 26
INDEX 3
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; get member eventInitialBalance
;; push identifier basicInitData
GETGLOB 26
INDEX 5
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 0
STSLICECONST x475654dc
;; relay
;; push identifier relay
PUSH S6
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: ethereumEventAddress
;; Remote call EthereumEvent.confirm
;; push identifier ethereumEventAddress
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x798abd68
;; relay
;; push identifier relay
PUSH S5
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
;; emit EventConfirmation
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x55939077
;; addr
;; push identifier ethereumEventAddress
PUSH S1
STSLICER
;; relay
;; push identifier relay
PUSH S5
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function confirmEvent
;; transfer()
;; push identifier value
DUP
;; push identifier receiver
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end modifier transferAfter
DROP2
; end modifier onlyBridge

.globl	rejectEvent
.public	rejectEvent
.type	rejectEvent, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode eventVoteData
;; decode struct EthereumEventVoteData eventVoteData
;; decode EthereumEventVoteData.eventTransaction
LDU 256
;; decode EthereumEventVoteData.eventIndex
LDU 32
;; decode EthereumEventVoteData.eventData
;; decode TvmCell
LDREF
;; decode EthereumEventVoteData.eventBlockNumber
LDU 32
;; decode EthereumEventVoteData.eventBlock
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; build struct EthereumEventVoteData ss:6
BLKSWAP 5, 1
TUPLE 5
SWAP
; Decode relay
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: eventVoteData
;; param: relay
; modifier onlyBridge
;; push identifier SENDER_NOT_BRIDGE
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
SDEQ
THROWANYIFNOT
; modifier transferAfter
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
;; get member value
CALL $message_balance_macro$
; function rejectEvent
;; push identifier eventVoteData
PUSH S3
CALL $buildEventInitData_internal$
;; decl: eventInitData
NEWDICT
GETGLOB 2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier eventInitData
PUSH S1
UNTUPLE 9
NEWC
NEWC
PUSH S2
STSLICER
STBREFR
PUSH S9
STUR 256
PUSH S8
STUR 32
PUSH S7
STREFR
PUSH S6
STUR 32
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
STUR 16
PUSH S2
STUR 16
XCHG s9
BLKDROP 9
ENDC
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; get member eventCode
;; push identifier basicInitData
GETGLOB 26
INDEX 3
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
PUSHINT 0
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 0
STSLICECONST x475654dc
;; relay
;; push identifier relay
PUSH S6
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: ethereumEventAddress
;; Remote call EthereumEvent.reject
;; push identifier ethereumEventAddress
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x3e754abf
;; relay
;; push identifier relay
PUSH S5
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
;; emit EventReject
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x43649f88
;; addr
;; push identifier ethereumEventAddress
PUSH S1
STSLICER
;; relay
;; push identifier relay
PUSH S5
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function rejectEvent
;; transfer()
;; push identifier value
DUP
;; push identifier receiver
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end modifier transferAfter
DROP2
; end modifier onlyBridge
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	rejectEvent_internal
.type	rejectEvent_internal, @function
;; param: eventVoteData
;; param: relay
; modifier onlyBridge
;; push identifier SENDER_NOT_BRIDGE
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
SDEQ
THROWANYIFNOT
; modifier transferAfter
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
;; get member value
CALL $message_balance_macro$
; function rejectEvent
;; push identifier eventVoteData
PUSH S3
CALL $buildEventInitData_internal$
;; decl: eventInitData
NEWDICT
GETGLOB 2
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier eventInitData
PUSH S1
UNTUPLE 9
NEWC
NEWC
PUSH S2
STSLICER
STBREFR
PUSH S9
STUR 256
PUSH S8
STUR 32
PUSH S7
STREFR
PUSH S6
STUR 32
PUSH S5
STUR 256
PUSH S4
STSLICER
PUSH S3
STUR 16
PUSH S2
STUR 16
XCHG s9
BLKDROP 9
ENDC
PUSHINT 1
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; get member eventCode
;; push identifier basicInitData
GETGLOB 26
INDEX 3
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
PUSHINT 0
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 0
STSLICECONST x475654dc
;; relay
;; push identifier relay
PUSH S6
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: ethereumEventAddress
;; Remote call EthereumEvent.reject
;; push identifier ethereumEventAddress
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x43b9aca00000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x3e754abf
;; relay
;; push identifier relay
PUSH S5
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
;; emit EventReject
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x43649f88
;; addr
;; push identifier ethereumEventAddress
PUSH S1
STSLICER
;; relay
;; push identifier relay
PUSH S5
STSLICER
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end function rejectEvent
;; transfer()
;; push identifier value
DUP
;; push identifier receiver
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end modifier transferAfter
DROP2
; end modifier onlyBridge

.globl	getDetails
.public	getDetails
.type	getDetails, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
ENDS
; function getDetails
;; ret param: _basicInitData
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
;; ret param: _initData
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
;; return
;; push identifier basicInitData
GETGLOB 26
;; push identifier initData
GETGLOB 27
BLKDROP2 2, 2
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xa711f776
	PUSH S3
	UNTUPLE 6
	BLKSWAP 1, 6
	PUSH S6
	STREFR
	PUSH S5
	STUR 16
	PUSH S4
	STUR 16
	PUSH S3
	STREFR
	PUSH S2
	STSLICER
	PUSH S1
	STUR 128
	XCHG s6
	BLKDROP 6
	PUSH S2
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STUR 160
	PUSH S2
	STUR 16
	PUSH S1
	STSLICER
	XCHG s3
	BLKDROP 3
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP2
; end function getDetails
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getDetails_internal
.type	getDetails_internal, @function
; function getDetails
;; ret param: _basicInitData
NEWC
ENDC
PUSHINT 0
PUSHINT 0
NEWC
ENDC
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
PUSHINT 0
TUPLE 6
;; ret param: _initData
PUSHINT 0
PUSHINT 0
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
TUPLE 3
;; return
;; push identifier basicInitData
GETGLOB 26
;; push identifier initData
GETGLOB 27
BLKDROP2 2, 2
; end function getDetails

.globl	getType
.public	getType
.type	getType, @function
; Decode input parameters
ENDS
; function getType
;; ret param: _type
PUSHINT 0
;; return
DROP
;; get member Ethereum
PUSHINT 0
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xece8faf2
	PUSH S1
	STUR 8
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
DROP
; end function getType
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	getType_internal
.type	getType_internal, @function
; function getType
;; ret param: _type
PUSHINT 0
;; return
DROP
;; get member Ethereum
PUSHINT 0
; end function getType

.globl	updateInitData
.public	updateInitData
.type	updateInitData, @function
GETGLOB 1
ISNULL
PUSHCONT {
	CALL $c4_to_c7$
}
IF
; Decode input parameters
; Decode _basicInitData
;; decode struct BasicConfigurationInitData _basicInitData
;; decode BasicConfigurationInitData.eventABI
LDREF
;; decode BasicConfigurationInitData.eventRequiredConfirmations
LDU 16
;; decode BasicConfigurationInitData.eventRequiredRejects
LDU 16
;; decode BasicConfigurationInitData.eventCode
;; decode TvmCell
LDREF
;; decode BasicConfigurationInitData.bridgeAddress
LDMSGADDR
;; decode BasicConfigurationInitData.eventInitialBalance
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; build struct BasicConfigurationInitData ss:7
BLKSWAP 6, 1
TUPLE 6
SWAP
; Decode _initData
;; decode struct EthereumEventConfigurationInitData _initData
;; decode EthereumEventConfigurationInitData.eventAddress
LDUQ 160
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 160
}
IFNOT
;; decode EthereumEventConfigurationInitData.eventBlocksToConfirm
LDUQ 16
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 16
}
IFNOT
;; decode EthereumEventConfigurationInitData.proxyAddress
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct EthereumEventConfigurationInitData ss:5
BLKSWAP 3, 1
TUPLE 3
SWAP
ENDS
;; param: _basicInitData
;; param: _initData
; modifier onlyBridge
;; push identifier SENDER_NOT_BRIDGE
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
SDEQ
THROWANYIFNOT
; modifier transferAfter
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
;; get member value
CALL $message_balance_macro$
; function updateInitData
; expValue
; end expValue
;; push identifier _basicInitData
PUSH S3
; colValue
SETGLOB 26
; end colValue
; expValue
; end expValue
;; push identifier _initData
PUSH S2
; colValue
SETGLOB 27
; end colValue
; end function updateInitData
;; transfer()
;; push identifier value
DUP
;; push identifier receiver
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end modifier transferAfter
DROP2
; end modifier onlyBridge
CALL $c7_to_c4$
TRUE
SETGLOB 7

.globl	updateInitData_internal
.type	updateInitData_internal, @function
;; param: _basicInitData
;; param: _initData
; modifier onlyBridge
;; push identifier SENDER_NOT_BRIDGE
GETGLOB 18
DUP
LESSINT 2
PUSHCONT {
	DROP
	PUSHINT 100
}
IF
;; get member sender
GETGLOB 9
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
SDEQ
THROWANYIFNOT
; modifier transferAfter
;; get member bridgeAddress
;; push identifier basicInitData
GETGLOB 26
INDEX 4
;; get member value
CALL $message_balance_macro$
; function updateInitData
; expValue
; end expValue
;; push identifier _basicInitData
PUSH S3
; colValue
SETGLOB 26
; end colValue
; expValue
; end expValue
;; push identifier _initData
PUSH S2
; colValue
SETGLOB 27
; end colValue
; end function updateInitData
;; transfer()
;; push identifier value
DUP
;; push identifier receiver
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 1
SENDRAWMSG
DROP2
; end modifier transferAfter
DROP2
; end modifier onlyBridge

.globl	transferAll
.public	transferAll
.type	transferAll, @function
; Decode input parameters
; Decode receiver
LDMSGADDR
ENDS
;; param: receiver
; function transferAll
ACCEPT
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function transferAll
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	transferAll_internal
.type	transferAll_internal, @function
;; param: receiver
; function transferAll
ACCEPT
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function transferAll

.globl	transfer
.public	transfer
.type	transfer, @function
; Decode input parameters
; Decode receiver
LDMSGADDR
ENDS
;; param: receiver
; function transfer
ACCEPT
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function transfer
PUSHCONT {
	CALL $c7_to_c4$
}
IF
TRUE
SETGLOB 7

.globl	transfer_internal
.type	transfer_internal, @function
;; param: receiver
; function transfer
ACCEPT
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function transfer

.globl	c7_to_c4
.type	c7_to_c4, @function
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 15
GETGLOB 16
GETGLOB 17
GETGLOB 18
GETGLOB 19
GETGLOB 20
GETGLOB 21
GETGLOB 22
GETGLOB 23
GETGLOB 24
GETGLOB 25
GETGLOB 26
GETGLOB 27
PUSHINT 19
PUSHINT 0
REVX
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
STU 16
SWAP
UNTUPLE 6
NEWC
PUSH S6
STREFR
PUSH S5
STUR 16
PUSH S4
STUR 16
PUSH S3
STREFR
PUSH S2
STSLICER
PUSH S1
STUR 128
XCHG s6
BLKDROP 6
STBREFR
SWAP
UNTUPLE 3
NEWC
PUSH S3
STUR 160
PUSH S2
STUR 16
PUSH S1
STSLICER
XCHG s3
BLKDROP 3
STBREFR
ENDC
POP C4

.globl	c4_to_c7
.type	c4_to_c7, @function
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDU 16
LDREFRTOS
LDREF
LDU 16
LDU 16
LDREF
LDMSGADDR
PLDU 128
TUPLE 6
SETGLOB 26
LDREFRTOS
NIP
LDU 160
LDU 16
TUPLE 3
SETGLOB 27
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDU 16
	LDREFRTOS
	LDREF
	LDU 16
	LDU 16
	LDREF
	LDMSGADDR
	PLDU 128
	TUPLE 6
	SETGLOB 26
	LDREFRTOS
	NIP
	LDU 160
	LDU 16
	TUPLE 3
	SETGLOB 27
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init basicInitData
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		LDREF
		LDU 16
		LDU 16
		LDREF
		LDMSGADDR
		PLDU 128
		TUPLE 6
	}
	PUSHCONT {
		NEWC
		ENDC
		PUSHINT 0
		PUSHINT 0
		NEWC
		ENDC
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		PUSHINT 0
		TUPLE 6
	}
	IFELSE
	SETGLOB 26
	; init initData
	PUSHINT 2
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		LDU 160
		LDU 16
		TUPLE 3
	}
	PUSHCONT {
		PUSHINT 0
		PUSHINT 0
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		TUPLE 3
	}
	IFELSE
	SETGLOB 27
	; init ADDRESS_IS_NOT_OWNER
	PUSHINT 0
	SETGLOB 10
	; init BRIDGE_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 11
	; init EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 0
	SETGLOB 12
	; init KEYS_DIFFERENT_SHAPE
	PUSHINT 0
	SETGLOB 13
	; init EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 0
	SETGLOB 14
	; init EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 15
	; init EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 0
	SETGLOB 16
	; init EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 0
	SETGLOB 17
	; init SENDER_NOT_BRIDGE
	PUSHINT 0
	SETGLOB 18
	; init EVENT_NOT_IN_PROGRESS
	PUSHINT 0
	SETGLOB 19
	; init SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 0
	SETGLOB 20
	; init KEY_ALREADY_CONFIRMED
	PUSHINT 0
	SETGLOB 21
	; init KEY_ALREADY_REJECTED
	PUSHINT 0
	SETGLOB 22
	; init EVENT_NOT_CONFIRMED
	PUSHINT 0
	SETGLOB 23
	; init TOO_LOW_MSG_VALUE
	PUSHINT 0
	SETGLOB 24
	; init WRONG_TVM_KEY
	PUSHINT 0
	SETGLOB 25
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
	;; init state var: ADDRESS_IS_NOT_OWNER
	PUSHINT 5001
	SETGLOB 10
	;; init state var: BRIDGE_NOT_ACTIVE
	PUSHINT 5002
	SETGLOB 11
	;; init state var: EVENT_CONFIGURATION_NOT_ACTIVE
	PUSHINT 5003
	SETGLOB 12
	;; init state var: KEYS_DIFFERENT_SHAPE
	PUSHINT 5004
	SETGLOB 13
	;; init state var: EVENT_CONFIGURATION_NOT_EXISTS
	PUSHINT 5005
	SETGLOB 14
	;; init state var: EVENT_CONFIGURATION_ALREADY_EXISTS
	PUSHINT 5006
	SETGLOB 15
	;; init state var: EVENT_CONFIGURATION_UPDATE_NOT_EXISTS
	PUSHINT 5007
	SETGLOB 16
	;; init state var: EVENT_CONFIGURATION_UPDATE_ALREADY_EXISTS
	PUSHINT 5008
	SETGLOB 17
	;; init state var: SENDER_NOT_BRIDGE
	PUSHINT 5101
	SETGLOB 18
	;; init state var: EVENT_NOT_IN_PROGRESS
	PUSHINT 5201
	SETGLOB 19
	;; init state var: SENDER_NOT_EVENT_CONFIGURATION
	PUSHINT 5202
	SETGLOB 20
	;; init state var: KEY_ALREADY_CONFIRMED
	PUSHINT 5203
	SETGLOB 21
	;; init state var: KEY_ALREADY_REJECTED
	PUSHINT 5204
	SETGLOB 22
	;; init state var: EVENT_NOT_CONFIRMED
	PUSHINT 5205
	SETGLOB 23
	;; init state var: TOO_LOW_MSG_VALUE
	PUSHINT 5206
	SETGLOB 24
	;; init state var: WRONG_TVM_KEY
	PUSHINT 5301
	SETGLOB 25
}
IFELSE

.internal-alias :main_internal,        0
.internal	:main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
PUSH S1 ; funcId body' funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

.internal-alias :main_external,        -1
.internal	:main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALL $c4_to_c7_with_init_storage$
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
PUSH S1 ; funcId body funcId
LESSINT 3            ; funcId body' funcId<3
PUSH S2              ; funcId body' funcId<3 funcId
PUSHINT 4294967293   ; funcId body' funcId<3 funcId 4294967293
GREATER              ; funcId body' funcId<3 funcId>4294967293
OR                   ; funcId body' funcId<3||funcId>4294967293
PUSHCONT {
	DROP2
	THROW 60
}
IFJMP
SWAP    ; body funcId
CALL 1
GETGLOB 7
ISNULL
PUSHCONT {
	DROP
	THROW 60
}
IF

